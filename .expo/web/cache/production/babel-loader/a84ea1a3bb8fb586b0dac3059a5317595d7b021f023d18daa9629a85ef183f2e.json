{"ast":null,"code":"import color from'color';export const getActiveTintColor=_ref=>{let{activeColor,defaultColor,theme}=_ref;if(typeof activeColor==='string'){return activeColor;}if(theme.isV3){return theme.colors.onSecondaryContainer;}return defaultColor;};export const getInactiveTintColor=_ref2=>{let{inactiveColor,defaultColor,theme}=_ref2;if(typeof inactiveColor==='string'){return inactiveColor;}if(theme.isV3){return theme.colors.onSurfaceVariant;}return color(defaultColor).alpha(0.5).rgb().string();};export const getLabelColor=_ref3=>{let{tintColor,hasColor,focused,defaultColor,theme}=_ref3;if(hasColor){return tintColor;}if(theme.isV3){if(focused){return theme.colors.onSurface;}return theme.colors.onSurfaceVariant;}return defaultColor;};","map":{"version":3,"names":["color","getActiveTintColor","_ref","activeColor","defaultColor","theme","isV3","colors","onSecondaryContainer","getInactiveTintColor","_ref2","inactiveColor","onSurfaceVariant","alpha","rgb","string","getLabelColor","_ref3","tintColor","hasColor","focused","onSurface"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\BottomNavigation\\utils.ts"],"sourcesContent":["import color from 'color';\nimport type { InternalTheme } from 'src/types';\n\nimport type { black, white } from '../../styles/themes/v2/colors';\n\ntype BaseProps = {\n  defaultColor: typeof black | typeof white;\n  theme: InternalTheme;\n};\n\nexport const getActiveTintColor = ({\n  activeColor,\n  defaultColor,\n  theme,\n}: BaseProps & {\n  activeColor: string | undefined;\n}) => {\n  if (typeof activeColor === 'string') {\n    return activeColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSecondaryContainer;\n  }\n\n  return defaultColor;\n};\n\nexport const getInactiveTintColor = ({\n  inactiveColor,\n  defaultColor,\n  theme,\n}: BaseProps & {\n  inactiveColor: string | undefined;\n}) => {\n  if (typeof inactiveColor === 'string') {\n    return inactiveColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  return color(defaultColor).alpha(0.5).rgb().string();\n};\n\nexport const getLabelColor = ({\n  tintColor,\n  hasColor,\n  focused,\n  defaultColor,\n  theme,\n}: BaseProps & {\n  tintColor: string;\n  hasColor: boolean;\n  focused: boolean;\n}) => {\n  if (hasColor) {\n    return tintColor;\n  }\n\n  if (theme.isV3) {\n    if (focused) {\n      return theme.colors.onSurface;\n    }\n    return theme.colors.onSurfaceVariant;\n  }\n\n  return defaultColor;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAUzB,MAAO,MAAM,CAAAC,kBAAkB,CAAGC,IAAA,EAM5B,IAN6B,CACjCC,WAAW,CACXC,YAAY,CACZC,KAGF,CAAC,CAAAH,IAAA,CACC,GAAI,MAAO,CAAAC,WAAW,GAAK,QAAQ,CAAE,CACnC,MAAO,CAAAA,WAAW,CACpB,CAEA,GAAIE,KAAK,CAACC,IAAI,CAAE,CACd,MAAO,CAAAD,KAAK,CAACE,MAAM,CAACC,oBAAoB,CAC1C,CAEA,MAAO,CAAAJ,YAAY,CACrB,CAAC,CAED,MAAO,MAAM,CAAAK,oBAAoB,CAAGC,KAAA,EAM9B,IAN+B,CACnCC,aAAa,CACbP,YAAY,CACZC,KAGF,CAAC,CAAAK,KAAA,CACC,GAAI,MAAO,CAAAC,aAAa,GAAK,QAAQ,CAAE,CACrC,MAAO,CAAAA,aAAa,CACtB,CAEA,GAAIN,KAAK,CAACC,IAAI,CAAE,CACd,MAAO,CAAAD,KAAK,CAACE,MAAM,CAACK,gBAAgB,CACtC,CAEA,MAAO,CAAAZ,KAAK,CAACI,YAAY,CAAC,CAACS,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CACtD,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAGC,KAAA,EAUvB,IAVwB,CAC5BC,SAAS,CACTC,QAAQ,CACRC,OAAO,CACPhB,YAAY,CACZC,KAKF,CAAC,CAAAY,KAAA,CACC,GAAIE,QAAQ,CAAE,CACZ,MAAO,CAAAD,SAAS,CAClB,CAEA,GAAIb,KAAK,CAACC,IAAI,CAAE,CACd,GAAIc,OAAO,CAAE,CACX,MAAO,CAAAf,KAAK,CAACE,MAAM,CAACc,SAAS,CAC/B,CACA,MAAO,CAAAhB,KAAK,CAACE,MAAM,CAACK,gBAAgB,CACtC,CAEA,MAAO,CAAAR,YAAY,CACrB,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}