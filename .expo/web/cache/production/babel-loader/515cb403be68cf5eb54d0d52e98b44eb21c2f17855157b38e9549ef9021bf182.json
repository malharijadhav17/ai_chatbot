{"ast":null,"code":"import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{black,white}from'../../styles/themes/v2/colors';const DEFAULT_PADDING=9;export const getSegmentedButtonDensityPadding=_ref=>{let{density}=_ref;let padding=DEFAULT_PADDING;switch(density){case'small':return padding-2;case'medium':return padding-4;case'high':return padding-8;default:return padding;}};export const getDisabledSegmentedButtonStyle=_ref2=>{var _buttons$index,_buttons;let{theme,index,buttons}=_ref2;const width=getSegmentedButtonBorderWidth({theme});const isDisabled=(_buttons$index=buttons[index])===null||_buttons$index===void 0?void 0:_buttons$index.disabled;const isNextDisabled=(_buttons=buttons[index+1])===null||_buttons===void 0?void 0:_buttons.disabled;if(!isDisabled&&isNextDisabled){return{borderRightWidth:width};}return{};};export const getSegmentedButtonBorderRadius=_ref3=>{let{segment,theme}=_ref3;if(segment==='first'){return Object.assign({borderTopRightRadius:0,borderBottomRightRadius:0},theme.isV3&&{borderRightWidth:0});}else if(segment==='last'){return{borderTopLeftRadius:0,borderBottomLeftRadius:0};}else{return Object.assign({borderRadius:0},theme.isV3&&{borderRightWidth:0});}};const getSegmentedButtonBackgroundColor=_ref4=>{let{checked,theme}=_ref4;if(checked){if(theme.isV3){return theme.colors.secondaryContainer;}else{return color(theme.colors.primary).alpha(0.12).rgb().string();}}return'transparent';};const getSegmentedButtonBorderColor=_ref5=>{let{theme,disabled,checked}=_ref5;if(theme.isV3){if(disabled){return theme.colors.surfaceDisabled;}return theme.colors.outline;}if(checked){return theme.colors.primary;}return color(theme.dark?white:black).alpha(0.29).rgb().string();};const getSegmentedButtonBorderWidth=_ref6=>{let{theme}=_ref6;if(theme.isV3){return 1;}return StyleSheet.hairlineWidth;};const getSegmentedButtonTextColor=_ref7=>{let{theme,disabled,checked,checkedColor,uncheckedColor}=_ref7;if(theme.isV3){if(disabled){return theme.colors.onSurfaceDisabled;}if(checked){return checkedColor??theme.colors.onSecondaryContainer;}return uncheckedColor??theme.colors.onSurface;}if(disabled){return theme.colors.disabled;}return theme.colors.primary;};export const getSegmentedButtonColors=_ref8=>{let{theme,disabled,checked,checkedColor,uncheckedColor}=_ref8;const backgroundColor=getSegmentedButtonBackgroundColor({theme,checked});const borderColor=getSegmentedButtonBorderColor({theme,disabled,checked});const textColor=getSegmentedButtonTextColor({theme,disabled,checked,checkedColor,uncheckedColor});const borderWidth=getSegmentedButtonBorderWidth({theme});return{backgroundColor,borderColor,textColor,borderWidth};};","map":{"version":3,"names":["color","black","white","DEFAULT_PADDING","getSegmentedButtonDensityPadding","_ref","density","padding","getDisabledSegmentedButtonStyle","_ref2","_buttons$index","_buttons","theme","index","buttons","width","getSegmentedButtonBorderWidth","isDisabled","disabled","isNextDisabled","borderRightWidth","getSegmentedButtonBorderRadius","_ref3","segment","Object","assign","borderTopRightRadius","borderBottomRightRadius","isV3","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","getSegmentedButtonBackgroundColor","_ref4","checked","colors","secondaryContainer","primary","alpha","rgb","string","getSegmentedButtonBorderColor","_ref5","surfaceDisabled","outline","dark","_ref6","StyleSheet","hairlineWidth","getSegmentedButtonTextColor","_ref7","checkedColor","uncheckedColor","onSurfaceDisabled","onSecondaryContainer","onSurface","getSegmentedButtonColors","_ref8","backgroundColor","borderColor","textColor","borderWidth"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\SegmentedButtons\\utils.ts"],"sourcesContent":["import { StyleSheet, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  checked: boolean;\n};\n\ntype SegmentedButtonProps = {\n  checkedColor?: string;\n  uncheckedColor?: string;\n} & BaseProps;\n\nconst DEFAULT_PADDING = 9;\n\nexport const getSegmentedButtonDensityPadding = ({\n  density,\n}: {\n  density?: 'regular' | 'small' | 'medium' | 'high';\n}) => {\n  let padding = DEFAULT_PADDING;\n\n  switch (density) {\n    case 'small':\n      return padding - 2;\n    case 'medium':\n      return padding - 4;\n    case 'high':\n      return padding - 8;\n    default:\n      return padding;\n  }\n};\n\nexport const getDisabledSegmentedButtonStyle = ({\n  theme,\n  index,\n  buttons,\n}: {\n  theme: InternalTheme;\n  buttons: { disabled?: boolean }[];\n  index: number;\n}): ViewStyle => {\n  const width = getSegmentedButtonBorderWidth({ theme });\n  const isDisabled = buttons[index]?.disabled;\n  const isNextDisabled = buttons[index + 1]?.disabled;\n\n  if (!isDisabled && isNextDisabled) {\n    return {\n      borderRightWidth: width,\n    };\n  }\n  return {};\n};\n\nexport const getSegmentedButtonBorderRadius = ({\n  segment,\n  theme,\n}: {\n  theme: InternalTheme;\n  segment?: 'first' | 'last';\n}): ViewStyle => {\n  if (segment === 'first') {\n    return {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  } else if (segment === 'last') {\n    return {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    };\n  } else {\n    return {\n      borderRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  }\n};\n\nconst getSegmentedButtonBackgroundColor = ({ checked, theme }: BaseProps) => {\n  if (checked) {\n    if (theme.isV3) {\n      return theme.colors.secondaryContainer;\n    } else {\n      return color(theme.colors.primary).alpha(0.12).rgb().string();\n    }\n  }\n  return 'transparent';\n};\n\nconst getSegmentedButtonBorderColor = ({\n  theme,\n  disabled,\n  checked,\n}: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n    return theme.colors.outline;\n  }\n  if (checked) {\n    return theme.colors.primary;\n  }\n\n  return color(theme.dark ? white : black)\n    .alpha(0.29)\n    .rgb()\n    .string();\n};\n\nconst getSegmentedButtonBorderWidth = ({\n  theme,\n}: Omit<BaseProps, 'disabled' | 'checked'>) => {\n  if (theme.isV3) {\n    return 1;\n  }\n\n  return StyleSheet.hairlineWidth;\n};\n\nconst getSegmentedButtonTextColor = ({\n  theme,\n  disabled,\n  checked,\n  checkedColor,\n  uncheckedColor,\n}: SegmentedButtonProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    if (checked) {\n      return checkedColor ?? theme.colors.onSecondaryContainer;\n    }\n    return uncheckedColor ?? theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n  // Primary color is used for checked state too.\n  return theme.colors.primary;\n};\n\nexport const getSegmentedButtonColors = ({\n  theme,\n  disabled,\n  checked,\n  checkedColor,\n  uncheckedColor,\n}: SegmentedButtonProps) => {\n  const backgroundColor = getSegmentedButtonBackgroundColor({\n    theme,\n    checked,\n  });\n  const borderColor = getSegmentedButtonBorderColor({\n    theme,\n    disabled,\n    checked,\n  });\n  const textColor = getSegmentedButtonTextColor({\n    theme,\n    disabled,\n    checked,\n    checkedColor,\n    uncheckedColor,\n  });\n  const borderWidth = getSegmentedButtonBorderWidth({ theme });\n\n  return { backgroundColor, borderColor, textColor, borderWidth };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}