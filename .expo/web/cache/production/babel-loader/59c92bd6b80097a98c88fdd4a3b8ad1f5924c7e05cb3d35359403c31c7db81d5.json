{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"index\",\"total\",\"style\",\"theme\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{getCardCoverStyle}from'./utils';import{useInternalTheme}from'../../core/theming';import{grey200}from'../../styles/themes/v2/colors';import{splitStyles}from'../../utils/splitStyles';const CardCover=_ref=>{let{index,total,style,theme:themeOverrides}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const theme=useInternalTheme(themeOverrides);const flattenedStyles=StyleSheet.flatten(style)||{};const[,borderRadiusStyles]=splitStyles(flattenedStyles,style=>style.startsWith('border')&&style.endsWith('Radius'));const coverStyle=getCardCoverStyle({theme,index,total,borderRadiusStyles});return React.createElement(View,{style:[styles.container,coverStyle,style]},React.createElement(Image,_extends({},rest,{style:[styles.image,coverStyle],accessibilityIgnoresInvertColors:true})));};CardCover.displayName='Card.Cover';const styles=StyleSheet.create({container:{height:195,backgroundColor:grey200,overflow:'hidden'},image:{flex:1,height:undefined,width:undefined,padding:16,justifyContent:'flex-end'}});export default CardCover;export{CardCover};","map":{"version":3,"names":["React","Image","StyleSheet","View","getCardCoverStyle","useInternalTheme","grey200","splitStyles","CardCover","_ref","index","total","style","theme","themeOverrides","rest","_objectWithoutPropertiesLoose","_excluded","flattenedStyles","flatten","borderRadiusStyles","startsWith","endsWith","coverStyle","createElement","styles","container","_extends","image","accessibilityIgnoresInvertColors","displayName","create","height","backgroundColor","overflow","flex","undefined","width","padding","justifyContent"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Card\\CardCover.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Image, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { getCardCoverStyle } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport { splitStyles } from '../../utils/splitStyles';\n\nexport type Props = React.ComponentPropsWithRef<typeof Image> & {\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to show a cover image inside a Card.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://reactnative.dev/docs/image#props\n */\nconst CardCover = ({\n  index,\n  total,\n  style,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  const flattenedStyles = (StyleSheet.flatten(style) || {}) as ViewStyle;\n  const [, borderRadiusStyles] = splitStyles(\n    flattenedStyles,\n    (style) => style.startsWith('border') && style.endsWith('Radius')\n  );\n\n  const coverStyle = getCardCoverStyle({\n    theme,\n    index,\n    total,\n    borderRadiusStyles,\n  });\n\n  return (\n    <View style={[styles.container, coverStyle, style]}>\n      <Image\n        {...rest}\n        style={[styles.image, coverStyle]}\n        accessibilityIgnoresInvertColors\n      />\n    </View>\n  );\n};\n\nCardCover.displayName = 'Card.Cover';\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default CardCover;\n\n// @component-docs ignore-next-line\nexport { CardCover };\n"],"mappings":"4bAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,KAAA,kDAAAC,UAAA,uDAAAC,IAAA,0CAG9B,OAASC,iBAAiB,KAAQ,SAAS,CAC3C,OAASC,gBAAgB,KAAQ,oBAAoB,CACrD,OAASC,OAAO,KAAQ,+BAA+B,CAEvD,OAASC,WAAW,KAAQ,yBAAyB,CAqCrD,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAML,IANM,CACjBC,KAAK,CACLC,KAAK,CACLC,KAAK,CACLC,KAAK,CAAEC,cAEF,CAAC,CAAAL,IAAA,CADHM,IAAA,CAAAC,6BAAA,CACGP,IAAA,CAAAQ,SAAA,EACN,KAAM,CAAAJ,KAAK,CAAGR,gBAAgB,CAACS,cAAc,CAAC,CAE9C,KAAM,CAAAI,eAAe,CAAIhB,UAAU,CAACiB,OAAO,CAACP,KAAK,CAAC,EAAI,CAAC,CAAe,CACtE,KAAM,EAAGQ,kBAAkB,CAAC,CAAGb,WAAW,CACxCW,eAAe,CACdN,KAAK,EAAKA,KAAK,CAACS,UAAU,CAAC,QAAQ,CAAC,EAAIT,KAAK,CAACU,QAAQ,CAAC,QAAQ,CAClE,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGnB,iBAAiB,CAAC,CACnCS,KAAK,CACLH,KAAK,CACLC,KAAK,CACLS,kBACF,CAAC,CAAC,CAEF,MACE,CAAApB,KAAA,CAAAwB,aAAA,CAACrB,IAAI,EAACS,KAAK,CAAE,CAACa,MAAM,CAACC,SAAS,CAAEH,UAAU,CAAEX,KAAK,CAAE,EACjDZ,KAAA,CAAAwB,aAAA,CAACvB,KAAK,CAAA0B,QAAA,IACAZ,IAAI,EACRH,KAAK,CAAE,CAACa,MAAM,CAACG,KAAK,CAAEL,UAAU,CAAE,CAClCM,gCAAgC,OACjC,CACG,CAAC,CAEX,CAAC,CAEDrB,SAAS,CAACsB,WAAW,CAAG,YAAY,CACpC,KAAM,CAAAL,MAAM,CAAGvB,UAAU,CAAC6B,MAAM,CAAC,CAC/BL,SAAS,CAAE,CACTM,MAAM,CAAE,GAAG,CACXC,eAAe,CAAE3B,OAAO,CACxB4B,QAAQ,CAAE,QACZ,CAAC,CACDN,KAAK,CAAE,CACLO,IAAI,CAAE,CAAC,CACPH,MAAM,CAAEI,SAAS,CACjBC,KAAK,CAAED,SAAS,CAChBE,OAAO,CAAE,EAAE,CACXC,cAAc,CAAE,UAClB,CACF,CAAC,CAAC,CAEF,cAAe,CAAA/B,SAAS,CAGxB,OAASA,SAAS","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}