{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"children\",\"dark\",\"style\",\"mode\",\"elevated\",\"safeAreaInsets\",\"theme\"],_excluded2=[\"backgroundColor\",\"elevation\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import color from'color';import AppbarContent from'./AppbarContent';import{DEFAULT_APPBAR_HEIGHT,getAppbarBackgroundColor,modeAppbarHeight,renderAppbarContent}from'./utils';import{useInternalTheme}from'../../core/theming';import Surface from'../Surface';const Appbar=_ref=>{let{children,dark,style,mode='small',elevated,safeAreaInsets,theme:themeOverrides}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const theme=useInternalTheme(themeOverrides);const{isV3}=theme;const flattenedStyle=StyleSheet.flatten(style);const _ref2=flattenedStyle||{},{backgroundColor:customBackground,elevation=isV3?elevated?2:0:4}=_ref2,restStyle=_objectWithoutPropertiesLoose(_ref2,_excluded2);const backgroundColor=getAppbarBackgroundColor(theme,elevation,customBackground,elevated);const isMode=modeToCompare=>{return isV3&&mode===modeToCompare;};let isDark=false;if(typeof dark==='boolean'){isDark=dark;}else if(!isV3){isDark=backgroundColor==='transparent'?false:typeof backgroundColor==='string'?!color(backgroundColor).isLight():true;}const isV3CenterAlignedMode=isV3&&isMode('center-aligned');let shouldCenterContent=false;let shouldAddLeftSpacing=false;let shouldAddRightSpacing=false;if(!isV3&&false||isV3CenterAlignedMode){let hasAppbarContent=false;let leftItemsCount=0;let rightItemsCount=0;React.Children.forEach(children,child=>{if(React.isValidElement(child)){if(child.type===AppbarContent){hasAppbarContent=true;}else if(hasAppbarContent){rightItemsCount++;}else{leftItemsCount++;}}});shouldCenterContent=hasAppbarContent&&leftItemsCount<2&&rightItemsCount<(isV3?3:2);shouldAddLeftSpacing=shouldCenterContent&&leftItemsCount===0;shouldAddRightSpacing=shouldCenterContent&&rightItemsCount===0;}const filterAppbarActions=React.useCallback(function(){let isLeading=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return React.Children.toArray(children).filter(child=>isLeading?child.props.isLeading:!child.props.isLeading);},[children]);const spacingStyle=isV3?styles.v3Spacing:styles.spacing;const insets={paddingBottom:safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.bottom,paddingTop:safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.top,paddingLeft:safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.left,paddingRight:safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.right};return React.createElement(Surface,_extends({style:[{backgroundColor},styles.appbar,{height:isV3?modeAppbarHeight[mode]:DEFAULT_APPBAR_HEIGHT},insets,restStyle,!theme.isV3&&{elevation}],elevation:elevation},rest),shouldAddLeftSpacing?React.createElement(View,{style:spacingStyle}):null,(!isV3||isMode('small')||isMode('center-aligned'))&&renderAppbarContent({children,isDark,theme,isV3,shouldCenterContent:isV3CenterAlignedMode||shouldCenterContent}),(isMode('medium')||isMode('large'))&&React.createElement(View,{style:[styles.columnContainer,isMode('center-aligned')&&styles.centerAlignedContainer]},React.createElement(View,{style:styles.controlsRow},renderAppbarContent({children,isDark,isV3,renderOnly:['Appbar.BackAction'],mode}),renderAppbarContent({children:filterAppbarActions(true),isDark,isV3,renderOnly:['Appbar.Action'],mode}),React.createElement(View,{style:styles.rightActionControls},renderAppbarContent({children:filterAppbarActions(false),isDark,isV3,renderExcept:['Appbar','Appbar.BackAction','Appbar.Content','Appbar.Header'],mode}))),renderAppbarContent({children,isDark,isV3,renderOnly:['Appbar.Content'],mode})),shouldAddRightSpacing?React.createElement(View,{style:spacingStyle}):null);};const styles=StyleSheet.create({appbar:{flexDirection:'row',alignItems:'center',paddingHorizontal:4},spacing:{width:48},v3Spacing:{width:52},controlsRow:{flex:1,flexDirection:'row',alignItems:'center',justifyContent:'space-between'},rightActionControls:{flexDirection:'row',flex:1,justifyContent:'flex-end'},columnContainer:{flexDirection:'column',flex:1,paddingTop:8},centerAlignedContainer:{paddingTop:0}});export default Appbar;export{Appbar};","map":{"version":3,"names":["React","Platform","StyleSheet","View","color","AppbarContent","DEFAULT_APPBAR_HEIGHT","getAppbarBackgroundColor","modeAppbarHeight","renderAppbarContent","useInternalTheme","Surface","Appbar","_ref","children","dark","style","mode","elevated","safeAreaInsets","theme","themeOverrides","rest","_objectWithoutPropertiesLoose","_excluded","isV3","flattenedStyle","flatten","_ref2","backgroundColor","customBackground","elevation","restStyle","_excluded2","isMode","modeToCompare","isDark","isLight","isV3CenterAlignedMode","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","filterAppbarActions","useCallback","isLeading","arguments","length","undefined","toArray","filter","props","spacingStyle","styles","v3Spacing","spacing","insets","paddingBottom","bottom","paddingTop","top","paddingLeft","left","paddingRight","right","createElement","_extends","appbar","height","columnContainer","centerAlignedContainer","controlsRow","renderOnly","rightActionControls","renderExcept","create","flexDirection","alignItems","paddingHorizontal","width","flex","justifyContent"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Appbar\\Appbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n  ColorValue,\n} from 'react-native';\n\nimport color from 'color';\n\nimport AppbarContent from './AppbarContent';\nimport {\n  AppbarModes,\n  DEFAULT_APPBAR_HEIGHT,\n  getAppbarBackgroundColor,\n  modeAppbarHeight,\n  renderAppbarContent,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { MD3Elevation, ThemeProp } from '../../types';\nimport Surface from '../Surface';\n\nexport type Props = Omit<\n  Partial<React.ComponentPropsWithRef<typeof View>>,\n  'style'\n> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the Appbar.\n   * - `small` - Appbar with default height (64).\n   * - `medium` - Appbar with medium height (112).\n   * - `large` - Appbar with large height (152).\n   * - `center-aligned` - Appbar with default height and center-aligned title.\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether Appbar background should have the elevation along with primary color pigment.\n   */\n  elevated?: boolean;\n  /**\n   * Safe area insets for the Appbar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   */\n  safeAreaInsets?: {\n    bottom?: number;\n    top?: number;\n    left?: number;\n    right?: number;\n  };\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/docs/guides/theming#dark-theme) for more informations\n *\n * ## Usage\n * ### Top bar\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Appbar.Header>\n *     <Appbar.BackAction onPress={() => {}} />\n *     <Appbar.Content title=\"Title\" />\n *     <Appbar.Action icon=\"calendar\" onPress={() => {}} />\n *     <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *   </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * ### Bottom bar\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Appbar, FAB, useTheme } from 'react-native-paper';\n * import { useSafeAreaInsets } from 'react-native-safe-area-context';\n *\n * const BOTTOM_APPBAR_HEIGHT = 80;\n * const MEDIUM_FAB_HEIGHT = 56;\n *\n * const MyComponent = () => {\n *   const { bottom } = useSafeAreaInsets();\n *   const theme = useTheme();\n *\n *   return (\n *     <Appbar\n *       style={[\n *         styles.bottom,\n *         {\n *           height: BOTTOM_APPBAR_HEIGHT + bottom,\n *           backgroundColor: theme.colors.elevation.level2,\n *         },\n *       ]}\n *       safeAreaInsets={{ bottom }}\n *     >\n *       <Appbar.Action icon=\"archive\" onPress={() => {}} />\n *       <Appbar.Action icon=\"email\" onPress={() => {}} />\n *       <Appbar.Action icon=\"label\" onPress={() => {}} />\n *       <Appbar.Action icon=\"delete\" onPress={() => {}} />\n *       <FAB\n *         mode=\"flat\"\n *         size=\"medium\"\n *         icon=\"plus\"\n *         onPress={() => {}}\n *         style={[\n *           styles.fab,\n *           { top: (BOTTOM_APPBAR_HEIGHT - MEDIUM_FAB_HEIGHT) / 2 },\n *         ]}\n *       />\n *     </Appbar>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     backgroundColor: 'aquamarine',\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n *   fab: {\n *     position: 'absolute',\n *     right: 16,\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Appbar = ({\n  children,\n  dark,\n  style,\n  mode = 'small',\n  elevated,\n  safeAreaInsets,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3 } = theme;\n  const flattenedStyle = StyleSheet.flatten(style);\n  const {\n    backgroundColor: customBackground,\n    elevation = isV3 ? (elevated ? 2 : 0) : 4,\n    ...restStyle\n  } = (flattenedStyle || {}) as Exclude<typeof flattenedStyle, number> & {\n    elevation?: number;\n    backgroundColor?: ColorValue;\n  };\n\n  const backgroundColor = getAppbarBackgroundColor(\n    theme,\n    elevation,\n    customBackground,\n    elevated\n  );\n\n  const isMode = (modeToCompare: AppbarModes) => {\n    return isV3 && mode === modeToCompare;\n  };\n\n  let isDark = false;\n\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else if (!isV3) {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : typeof backgroundColor === 'string'\n        ? !color(backgroundColor).isLight()\n        : true;\n  }\n\n  const isV3CenterAlignedMode = isV3 && isMode('center-aligned');\n\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n  if ((!isV3 && Platform.OS === 'ios') || isV3CenterAlignedMode) {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n\n    React.Children.forEach(children, (child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n\n    shouldCenterContent =\n      hasAppbarContent &&\n      leftItemsCount < 2 &&\n      rightItemsCount < (isV3 ? 3 : 2);\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n\n  const filterAppbarActions = React.useCallback(\n    (isLeading = false) =>\n      React.Children.toArray(children).filter((child) =>\n        // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n        isLeading ? child.props.isLeading : !child.props.isLeading\n      ),\n    [children]\n  );\n\n  const spacingStyle = isV3 ? styles.v3Spacing : styles.spacing;\n\n  const insets = {\n    paddingBottom: safeAreaInsets?.bottom,\n    paddingTop: safeAreaInsets?.top,\n    paddingLeft: safeAreaInsets?.left,\n    paddingRight: safeAreaInsets?.right,\n  };\n\n  return (\n    <Surface\n      style={[\n        { backgroundColor },\n        styles.appbar,\n        {\n          height: isV3 ? modeAppbarHeight[mode] : DEFAULT_APPBAR_HEIGHT,\n        },\n        insets,\n        restStyle,\n        !theme.isV3 && { elevation },\n      ]}\n      elevation={elevation as MD3Elevation}\n      {...rest}\n    >\n      {shouldAddLeftSpacing ? <View style={spacingStyle} /> : null}\n      {(!isV3 || isMode('small') || isMode('center-aligned')) &&\n        renderAppbarContent({\n          children,\n          isDark,\n          theme,\n          isV3,\n          shouldCenterContent: isV3CenterAlignedMode || shouldCenterContent,\n        })}\n      {(isMode('medium') || isMode('large')) && (\n        <View\n          style={[\n            styles.columnContainer,\n            isMode('center-aligned') && styles.centerAlignedContainer,\n          ]}\n        >\n          {/* Appbar top row with controls */}\n          <View style={styles.controlsRow}>\n            {/* Left side of row container, can contain AppbarBackAction or AppbarAction if it's leading icon  */}\n            {renderAppbarContent({\n              children,\n              isDark,\n              isV3,\n              renderOnly: ['Appbar.BackAction'],\n              mode,\n            })}\n            {renderAppbarContent({\n              children: filterAppbarActions(true),\n              isDark,\n              isV3,\n              renderOnly: ['Appbar.Action'],\n              mode,\n            })}\n            {/* Right side of row container, can contain other AppbarAction if they are not leading icons */}\n            <View style={styles.rightActionControls}>\n              {renderAppbarContent({\n                children: filterAppbarActions(false),\n                isDark,\n                isV3,\n                renderExcept: [\n                  'Appbar',\n                  'Appbar.BackAction',\n                  'Appbar.Content',\n                  'Appbar.Header',\n                ],\n                mode,\n              })}\n            </View>\n          </View>\n          {/* Middle of the row, can contain only AppbarContent */}\n          {renderAppbarContent({\n            children,\n            isDark,\n            isV3,\n            renderOnly: ['Appbar.Content'],\n            mode,\n          })}\n        </View>\n      )}\n      {shouldAddRightSpacing ? <View style={spacingStyle} /> : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  appbar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n  v3Spacing: {\n    width: 52,\n  },\n  controlsRow: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  rightActionControls: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n  columnContainer: {\n    flexDirection: 'column',\n    flex: 1,\n    paddingTop: 8,\n  },\n  centerAlignedContainer: {\n    paddingTop: 0,\n  },\n});\n\nexport default Appbar;\n\n// @component-docs ignore-next-line\nexport { Appbar };\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}