{"ast":null,"code":"import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from'../../core/theming';import Icon from'../Icon';const DialogIcon=_ref=>{let{size=24,color,icon,theme:themeOverrides}=_ref;const theme=useInternalTheme(themeOverrides);if(!theme.isV3){return null;}const iconColor=color||theme.colors.secondary;return React.createElement(View,{style:styles.wrapper},React.createElement(Icon,{source:icon,color:iconColor,size:size}));};DialogIcon.displayName='Dialog.Icon';const styles=StyleSheet.create({wrapper:{alignItems:'center',justifyContent:'center',paddingTop:24}});export default DialogIcon;export{DialogIcon};","map":{"version":3,"names":["React","StyleSheet","View","useInternalTheme","Icon","DialogIcon","_ref","size","color","icon","theme","themeOverrides","isV3","iconColor","colors","secondary","createElement","style","styles","wrapper","source","displayName","create","alignItems","justifyContent","paddingTop"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Dialog\\DialogIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\nimport Icon, { IconSource } from '../Icon';\n\nexport type Props = {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * @supported Available in v5.x with theme version 3\n * A component to show an icon in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Icon icon=\"alert\" />\n *         <Dialog.Title style={styles.title}>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   title: {\n *     textAlign: 'center',\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst DialogIcon = ({\n  size = 24,\n  color,\n  icon,\n  theme: themeOverrides,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  if (!theme.isV3) {\n    return null;\n  }\n\n  //@ts-ignore\n  const iconColor = color || theme.colors.secondary;\n\n  return (\n    <View style={styles.wrapper}>\n      <Icon source={icon} color={iconColor} size={size} />\n    </View>\n  );\n};\n\nDialogIcon.displayName = 'Dialog.Icon';\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 24,\n  },\n});\n\nexport default DialogIcon;\n\n// @component-docs ignore-next-line\nexport { DialogIcon };\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,UAAA,uDAAAC,IAAA,0CAK9B,OAASC,gBAAgB,KAAQ,oBAAoB,CACrD,MAAO,CAAAC,IAAI,KAAsB,SAAS,CA0D1C,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAKN,IALO,CAClBC,IAAI,CAAG,EAAE,CACTC,KAAK,CACLC,IAAI,CACJC,KAAK,CAAEC,cACF,CAAC,CAAAL,IAAA,CACN,KAAM,CAAAI,KAAK,CAAGP,gBAAgB,CAACQ,cAAc,CAAC,CAE9C,GAAI,CAACD,KAAK,CAACE,IAAI,CAAE,CACf,MAAO,KAAI,CACb,CAGA,KAAM,CAAAC,SAAS,CAAGL,KAAK,EAAIE,KAAK,CAACI,MAAM,CAACC,SAAS,CAEjD,MACE,CAAAf,KAAA,CAAAgB,aAAA,CAACd,IAAI,EAACe,KAAK,CAAEC,MAAM,CAACC,OAAQ,EAC1BnB,KAAA,CAAAgB,aAAA,CAACZ,IAAI,EAACgB,MAAM,CAAEX,IAAK,CAACD,KAAK,CAAEK,SAAU,CAACN,IAAI,CAAEA,IAAK,CAAE,CAC/C,CAAC,CAEX,CAAC,CAEDF,UAAU,CAACgB,WAAW,CAAG,aAAa,CAEtC,KAAM,CAAAH,MAAM,CAAGjB,UAAU,CAACqB,MAAM,CAAC,CAC/BH,OAAO,CAAE,CACPI,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,EACd,CACF,CAAC,CAAC,CAEF,cAAe,CAAApB,UAAU,CAGzB,OAASA,UAAU","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}