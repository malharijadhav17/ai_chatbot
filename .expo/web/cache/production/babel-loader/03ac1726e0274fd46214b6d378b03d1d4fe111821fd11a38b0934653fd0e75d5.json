{"ast":null,"code":"import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useSafeAreaInsets}from'react-native-safe-area-context';import DialogActions from'./DialogActions';import DialogContent from'./DialogContent';import DialogIcon from'./DialogIcon';import DialogScrollArea from'./DialogScrollArea';import DialogTitle from'./DialogTitle';import{useInternalTheme}from'../../core/theming';import overlay from'../../styles/overlay';import Modal from'../Modal';const DIALOG_ELEVATION=24;const Dialog=_ref=>{let{children,dismissable=true,dismissableBackButton=dismissable,onDismiss,visible=false,style,theme:themeOverrides,testID}=_ref;const{right,left}=useSafeAreaInsets();const theme=useInternalTheme(themeOverrides);const{isV3,dark,mode,colors,roundness}=theme;const borderRadius=(isV3?7:1)*roundness;const backgroundColorV2=dark&&mode==='adaptive'?overlay(DIALOG_ELEVATION,colors===null||colors===void 0?void 0:colors.surface):colors===null||colors===void 0?void 0:colors.surface;const backgroundColor=isV3?theme.colors.elevation.level3:backgroundColorV2;return React.createElement(Modal,{dismissable:dismissable,dismissableBackButton:dismissableBackButton,onDismiss:onDismiss,visible:visible,contentContainerStyle:[{borderRadius,backgroundColor,marginHorizontal:Math.max(left,right,26)},styles.container,style],theme:theme,testID:testID},React.Children.toArray(children).filter(child=>child!=null&&typeof child!=='boolean').map((child,i)=>{if(isV3){if(i===0&&React.isValidElement(child)){return React.cloneElement(child,{style:[{marginTop:24},child.props.style]});}}if(i===0&&React.isValidElement(child)&&child.type===DialogContent){return React.cloneElement(child,{style:[{paddingTop:24},child.props.style]});}return child;}));};Dialog.Content=DialogContent;Dialog.Actions=DialogActions;Dialog.Title=DialogTitle;Dialog.ScrollArea=DialogScrollArea;Dialog.Icon=DialogIcon;const styles=StyleSheet.create({container:{marginVertical:false?44:0,elevation:DIALOG_ELEVATION,justifyContent:'flex-start'}});export default Dialog;","map":{"version":3,"names":["React","Platform","StyleSheet","useSafeAreaInsets","DialogActions","DialogContent","DialogIcon","DialogScrollArea","DialogTitle","useInternalTheme","overlay","Modal","DIALOG_ELEVATION","Dialog","_ref","children","dismissable","dismissableBackButton","onDismiss","visible","style","theme","themeOverrides","testID","right","left","isV3","dark","mode","colors","roundness","borderRadius","backgroundColorV2","surface","backgroundColor","elevation","level3","createElement","contentContainerStyle","marginHorizontal","Math","max","styles","container","Children","toArray","filter","child","map","i","isValidElement","cloneElement","marginTop","props","type","paddingTop","Content","Actions","Title","ScrollArea","Icon","create","marginVertical","justifyContent"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Dialog\\Dialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport DialogActions from './DialogActions';\nimport DialogContent from './DialogContent';\nimport DialogIcon from './DialogIcon';\nimport DialogScrollArea from './DialogScrollArea';\nimport DialogTitle from './DialogTitle';\nimport { useInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport type { ThemeProp } from '../../types';\nimport Modal from '../Modal';\n\nexport type Props = {\n  /**\n   * Determines whether clicking outside the dialog dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Determines whether clicking Android hardware back button dismiss dialog.\n   */\n  dismissableBackButton?: boolean;\n  /**\n   * Callback that is called when the user dismisses the dialog.\n   */\n  onDismiss?: () => void;\n  /**\n   * Determines Whether the dialog is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Dialog`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst DIALOG_ELEVATION: number = 24;\n\n/**\n * Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n * To render the `Dialog` above other components, you'll need to wrap it with the [`Portal`](../../Portal) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Dialog, Portal, PaperProvider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showDialog = () => setVisible(true);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <PaperProvider>\n *       <View>\n *         <Button onPress={showDialog}>Show Dialog</Button>\n *         <Portal>\n *           <Dialog visible={visible} onDismiss={hideDialog}>\n *             <Dialog.Title>Alert</Dialog.Title>\n *             <Dialog.Content>\n *               <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *             </Dialog.Content>\n *             <Dialog.Actions>\n *               <Button onPress={hideDialog}>Done</Button>\n *             </Dialog.Actions>\n *           </Dialog>\n *         </Portal>\n *       </View>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Dialog = ({\n  children,\n  dismissable = true,\n  dismissableBackButton = dismissable,\n  onDismiss,\n  visible = false,\n  style,\n  theme: themeOverrides,\n  testID,\n}: Props) => {\n  const { right, left } = useSafeAreaInsets();\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3, dark, mode, colors, roundness } = theme;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n\n  const backgroundColorV2 =\n    dark && mode === 'adaptive'\n      ? overlay(DIALOG_ELEVATION, colors?.surface)\n      : colors?.surface;\n  const backgroundColor = isV3\n    ? theme.colors.elevation.level3\n    : backgroundColorV2;\n\n  return (\n    <Modal\n      dismissable={dismissable}\n      dismissableBackButton={dismissableBackButton}\n      onDismiss={onDismiss}\n      visible={visible}\n      contentContainerStyle={[\n        {\n          borderRadius,\n          backgroundColor,\n          marginHorizontal: Math.max(left, right, 26),\n        },\n        styles.container,\n        style,\n      ]}\n      theme={theme}\n      testID={testID}\n    >\n      {React.Children.toArray(children)\n        .filter((child) => child != null && typeof child !== 'boolean')\n        .map((child, i) => {\n          if (isV3) {\n            if (i === 0 && React.isValidElement(child)) {\n              return React.cloneElement(child as React.ReactElement<any>, {\n                style: [{ marginTop: 24 }, child.props.style],\n              });\n            }\n          }\n\n          if (\n            i === 0 &&\n            React.isValidElement(child) &&\n            child.type === DialogContent\n          ) {\n            // Dialog content is the first item, so we add a top padding\n            return React.cloneElement(child as React.ReactElement<any>, {\n              style: [{ paddingTop: 24 }, child.props.style],\n            });\n          }\n\n          return child;\n        })}\n    </Modal>\n  );\n};\n\n// @component ./DialogContent.tsx\nDialog.Content = DialogContent;\n// @component ./DialogActions.tsx\nDialog.Actions = DialogActions;\n// @component ./DialogTitle.tsx\nDialog.Title = DialogTitle;\n// @component ./DialogScrollArea.tsx\nDialog.ScrollArea = DialogScrollArea;\n// @component ./DialogIcon.tsx\nDialog.Icon = DialogIcon;\n\nconst styles = StyleSheet.create({\n  container: {\n    /**\n     * This prevents the shadow from being clipped on Android since Android\n     * doesn't support `overflow: visible`.\n     * One downside for this fix is that it will disable clicks on the area\n     * of the shadow around the dialog, consequently, if you click around the\n     * dialog (44 pixel from the top and bottom) it won't be dismissed.\n     */\n    marginVertical: Platform.OS === 'android' ? 44 : 0,\n    elevation: DIALOG_ELEVATION,\n    justifyContent: 'flex-start',\n  },\n});\n\nexport default Dialog;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}