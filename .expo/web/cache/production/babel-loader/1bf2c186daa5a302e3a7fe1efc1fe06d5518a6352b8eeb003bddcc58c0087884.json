{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"icon\",\"size\",\"style\",\"theme\"],_excluded2=[\"backgroundColor\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from'../../core/theming';import{white}from'../../styles/themes/v2/colors';import getContrastingColor from'../../utils/getContrastingColor';import Icon from'../Icon';const defaultSize=64;const Avatar=_ref=>{var _theme$colors;let{icon,size=defaultSize,style,theme:themeOverrides}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const theme=useInternalTheme(themeOverrides);const _ref2=StyleSheet.flatten(style)||{},{backgroundColor=(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.primary}=_ref2,restStyle=_objectWithoutPropertiesLoose(_ref2,_excluded2);const textColor=rest.color??getContrastingColor(backgroundColor,white,'rgba(0, 0, 0, .54)');return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor},styles.container,restStyle]},rest),React.createElement(Icon,{source:icon,color:textColor,size:size*0.6}));};Avatar.displayName='Avatar.Icon';const styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'}});export default Avatar;","map":{"version":3,"names":["React","StyleSheet","View","useInternalTheme","white","getContrastingColor","Icon","defaultSize","Avatar","_ref","_theme$colors","icon","size","style","theme","themeOverrides","rest","_objectWithoutPropertiesLoose","_excluded","_ref2","flatten","backgroundColor","colors","primary","restStyle","_excluded2","textColor","color","createElement","_extends","width","height","borderRadius","styles","container","source","displayName","create","justifyContent","alignItems"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Avatar\\AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport Icon, { IconSource } from '../Icon';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({\n  icon,\n  size = defaultSize,\n  style,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { backgroundColor = theme.colors?.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default Avatar;\n"],"mappings":"ydAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,UAAA,uDAAAC,IAAA,0CAG9B,OAASC,gBAAgB,KAAQ,oBAAoB,CACrD,OAASC,KAAK,KAAQ,+BAA+B,CAErD,MAAO,CAAAC,mBAAmB,KAAM,iCAAiC,CACjE,MAAO,CAAAC,IAAI,KAAsB,SAAS,CAE1C,KAAM,CAAAC,WAAW,CAAG,EAAE,CAmCtB,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAMF,KAAAC,aAAA,IANG,CACdC,IAAI,CACJC,IAAI,CAAGL,WAAW,CAClBM,KAAK,CACLC,KAAK,CAAEC,cAEF,CAAC,CAAAN,IAAA,CADHO,IAAA,CAAAC,6BAAA,CACGR,IAAA,CAAAS,SAAA,EACN,KAAM,CAAAJ,KAAK,CAAGX,gBAAgB,CAACY,cAAc,CAAC,CAC9C,MAAAI,KAAA,CACElB,UAAU,CAACmB,OAAO,CAACP,KAAK,CAAC,EAAI,CAAC,CAAC,CAD3B,CAAEQ,eAAe,EAAAX,aAAA,CAAGI,KAAK,CAACQ,MAAM,UAAAZ,aAAA,iBAAZA,aAAA,CAAca,OAAsB,CAAC,CAAAJ,KAAA,CAAXK,SAAA,CAAAP,6BAAA,CAAAE,KAAA,CAAAM,UAAA,EAEpD,KAAM,CAAAC,SAAS,CACbV,IAAI,CAACW,KAAK,EACVtB,mBAAmB,CAACgB,eAAe,CAAEjB,KAAK,CAAE,oBAAoB,CAAC,CAEnE,MACE,CAAAJ,KAAA,CAAA4B,aAAA,CAAC1B,IAAI,CAAA2B,QAAA,EACHhB,KAAK,CAAE,CACL,CACEiB,KAAK,CAAElB,IAAI,CACXmB,MAAM,CAAEnB,IAAI,CACZoB,YAAY,CAAEpB,IAAI,CAAG,CAAC,CACtBS,eACF,CAAC,CACDY,MAAM,CAACC,SAAS,CAChBV,SAAS,CACT,EACER,IAAI,EAERhB,KAAA,CAAA4B,aAAA,CAACtB,IAAI,EAAC6B,MAAM,CAAExB,IAAK,CAACgB,KAAK,CAAED,SAAU,CAACd,IAAI,CAAEA,IAAI,CAAG,GAAI,CAAE,CACrD,CAAC,CAEX,CAAC,CAEDJ,MAAM,CAAC4B,WAAW,CAAG,aAAa,CAElC,KAAM,CAAAH,MAAM,CAAGhC,UAAU,CAACoC,MAAM,CAAC,CAC/BH,SAAS,CAAE,CACTI,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QACd,CACF,CAAC,CAAC,CAEF,cAAe,CAAA/B,MAAM","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}