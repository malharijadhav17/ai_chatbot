{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"size\",\"color\",\"icon\",\"disabled\",\"onPress\",\"accessibilityLabel\",\"isLeading\",\"theme\",\"rippleColor\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import color from'color';import{useInternalTheme}from'../../core/theming';import{black}from'../../styles/themes/v2/colors';import{forwardRef}from'../../utils/forwardRef';import IconButton from'../IconButton/IconButton';const AppbarAction=forwardRef((_ref,ref)=>{let{size=24,color:iconColor,icon,disabled,onPress,accessibilityLabel,isLeading,theme:themeOverrides,rippleColor}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const theme=useInternalTheme(themeOverrides);const actionIconColor=iconColor?iconColor:theme.isV3?isLeading?theme.colors.onSurface:theme.colors.onSurfaceVariant:color(black).alpha(0.54).rgb().string();return React.createElement(IconButton,_extends({size:size,onPress:onPress,iconColor:actionIconColor,icon:icon,disabled:disabled,accessibilityLabel:accessibilityLabel,animated:true,ref:ref,rippleColor:rippleColor},rest));});AppbarAction.displayName='Appbar.Action';export default AppbarAction;export{AppbarAction};","map":{"version":3,"names":["React","color","useInternalTheme","black","forwardRef","IconButton","AppbarAction","_ref","ref","size","iconColor","icon","disabled","onPress","accessibilityLabel","isLeading","theme","themeOverrides","rippleColor","rest","_objectWithoutPropertiesLoose","_excluded","actionIconColor","isV3","colors","onSurface","onSurfaceVariant","alpha","rgb","string","createElement","_extends","animated","displayName"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Appbar\\AppbarAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  Animated,\n  ColorValue,\n  StyleProp,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { black } from '../../styles/themes/v2/colors';\nimport { forwardRef } from '../../utils/forwardRef';\nimport type { IconSource } from '../Icon';\nimport IconButton from '../IconButton/IconButton';\n\nexport type Props = React.ComponentPropsWithoutRef<typeof IconButton> & {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Whether it's the leading button.\n   */\n  isLeading?: boolean;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component used to display an action item in the appbar.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { Platform } from 'react-native';\n *\n * const MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *         <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *         <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarAction = forwardRef<View, Props>(\n  (\n    {\n      size = 24,\n      color: iconColor,\n      icon,\n      disabled,\n      onPress,\n      accessibilityLabel,\n      isLeading,\n      theme: themeOverrides,\n      rippleColor,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n\n    const actionIconColor = iconColor\n      ? iconColor\n      : theme.isV3\n      ? isLeading\n        ? theme.colors.onSurface\n        : theme.colors.onSurfaceVariant\n      : color(black).alpha(0.54).rgb().string();\n\n    return (\n      <IconButton\n        size={size}\n        onPress={onPress}\n        iconColor={actionIconColor}\n        icon={icon}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        animated\n        ref={ref}\n        rippleColor={rippleColor}\n        {...rest}\n      />\n    );\n  }\n);\n\nAppbarAction.displayName = 'Appbar.Action';\n\nexport default AppbarAction;\n\n// @component-docs ignore-next-line\nexport { AppbarAction };\n"],"mappings":"8fAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAS9B,MAAO,CAAAC,KAAK,KAAM,OAAO,CAGzB,OAASC,gBAAgB,KAAQ,oBAAoB,CACrD,OAASC,KAAK,KAAQ,+BAA+B,CACrD,OAASC,UAAU,KAAQ,wBAAwB,CAEnD,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CAmEjD,KAAM,CAAAC,YAAY,CAAGF,UAAU,CAC7B,CAAAG,IAAA,CAaEC,GAAG,GACA,IAbH,CACEC,IAAI,CAAG,EAAE,CACTR,KAAK,CAAES,SAAS,CAChBC,IAAI,CACJC,QAAQ,CACRC,OAAO,CACPC,kBAAkB,CAClBC,SAAS,CACTC,KAAK,CAAEC,cAAc,CACrBC,WAEK,CAAC,CAAAX,IAAA,CADHY,IAAA,CAAAC,6BAAA,CACGb,IAAA,CAAAc,SAAA,EAGR,KAAM,CAAAL,KAAK,CAAGd,gBAAgB,CAACe,cAAc,CAAC,CAE9C,KAAM,CAAAK,eAAe,CAAGZ,SAAS,CAC7BA,SAAS,CACTM,KAAK,CAACO,IAAI,CACVR,SAAS,CACPC,KAAK,CAACQ,MAAM,CAACC,SAAS,CACtBT,KAAK,CAACQ,MAAM,CAACE,gBAAgB,CAC/BzB,KAAK,CAACE,KAAK,CAAC,CAACwB,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAE3C,MACE,CAAA7B,KAAA,CAAA8B,aAAA,CAACzB,UAAU,CAAA0B,QAAA,EACTtB,IAAI,CAAEA,IAAK,CACXI,OAAO,CAAEA,OAAQ,CACjBH,SAAS,CAAEY,eAAgB,CAC3BX,IAAI,CAAEA,IAAK,CACXC,QAAQ,CAAEA,QAAS,CACnBE,kBAAkB,CAAEA,kBAAmB,CACvCkB,QAAQ,MACRxB,GAAG,CAAEA,GAAI,CACTU,WAAW,CAAEA,WAAY,EACrBC,IAAI,CACT,CAAC,CAEN,CACF,CAAC,CAEDb,YAAY,CAAC2B,WAAW,CAAG,eAAe,CAE1C,cAAe,CAAA3B,YAAY,CAG3B,OAASA,YAAY","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}