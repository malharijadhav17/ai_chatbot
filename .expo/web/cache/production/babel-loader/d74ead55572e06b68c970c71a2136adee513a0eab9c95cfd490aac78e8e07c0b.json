{"ast":null,"code":"import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Pressable from\"react-native-web/dist/exports/Pressable\";import View from\"react-native-web/dist/exports/View\";import{useSafeAreaInsets}from'react-native-safe-area-context';import useLatestCallback from'use-latest-callback';import Surface from'./Surface';import{useInternalTheme}from'../core/theming';import{addEventListener}from'../utils/addEventListener';import{BackHandler}from'../utils/BackHandler/BackHandler';import useAnimatedValue from'../utils/useAnimatedValue';const DEFAULT_DURATION=220;const AnimatedPressable=Animated.createAnimatedComponent(Pressable);function Modal(_ref){var _theme$colors;let{dismissable=true,dismissableBackButton=dismissable,visible=false,overlayAccessibilityLabel='Close modal',onDismiss=()=>{},children,contentContainerStyle,style,theme:themeOverrides,testID='modal'}=_ref;const theme=useInternalTheme(themeOverrides);const onDismissCallback=useLatestCallback(onDismiss);const{scale}=theme.animation;const{top,bottom}=useSafeAreaInsets();const opacity=useAnimatedValue(visible?1:0);const[visibleInternal,setVisibleInternal]=React.useState(visible);const showModalAnimation=React.useCallback(()=>{Animated.timing(opacity,{toValue:1,duration:scale*DEFAULT_DURATION,easing:Easing.out(Easing.cubic),useNativeDriver:true}).start();},[opacity,scale]);const hideModalAnimation=React.useCallback(()=>{Animated.timing(opacity,{toValue:0,duration:scale*DEFAULT_DURATION,easing:Easing.out(Easing.cubic),useNativeDriver:true}).start(_ref2=>{let{finished}=_ref2;if(!finished){return;}setVisibleInternal(false);});},[opacity,scale]);React.useEffect(()=>{if(visibleInternal===visible){return;}if(!visibleInternal&&visible){setVisibleInternal(true);return showModalAnimation();}if(visibleInternal&&!visible){return hideModalAnimation();}},[visible,showModalAnimation,hideModalAnimation,visibleInternal]);React.useEffect(()=>{if(!visible){return undefined;}const onHardwareBackPress=()=>{if(dismissable||dismissableBackButton){onDismissCallback();}return true;};const subscription=addEventListener(BackHandler,'hardwareBackPress',onHardwareBackPress);return()=>subscription.remove();},[dismissable,dismissableBackButton,onDismissCallback,visible]);if(!visibleInternal){return null;}return React.createElement(Animated.View,{pointerEvents:visible?'auto':'none',accessibilityViewIsModal:true,accessibilityLiveRegion:\"polite\",style:StyleSheet.absoluteFill,onAccessibilityEscape:onDismissCallback,testID:testID},React.createElement(AnimatedPressable,{accessibilityLabel:overlayAccessibilityLabel,accessibilityRole:\"button\",disabled:!dismissable,onPress:dismissable?onDismissCallback:undefined,importantForAccessibility:\"no\",style:[styles.backdrop,{backgroundColor:(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.backdrop,opacity}],testID:`${testID}-backdrop`}),React.createElement(View,{style:[styles.wrapper,{marginTop:top,marginBottom:bottom},style],pointerEvents:\"box-none\",testID:`${testID}-wrapper`},React.createElement(Surface,{testID:`${testID}-surface`,theme:theme,style:[{opacity},styles.content,contentContainerStyle]},children)));}export default Modal;const styles=StyleSheet.create({backdrop:{flex:1},wrapper:Object.assign({},StyleSheet.absoluteFillObject,{justifyContent:'center'}),content:{backgroundColor:'transparent',justifyContent:'center'}});","map":{"version":3,"names":["React","Animated","Easing","StyleSheet","Pressable","View","useSafeAreaInsets","useLatestCallback","Surface","useInternalTheme","addEventListener","BackHandler","useAnimatedValue","DEFAULT_DURATION","AnimatedPressable","createAnimatedComponent","Modal","_ref","_theme$colors","dismissable","dismissableBackButton","visible","overlayAccessibilityLabel","onDismiss","children","contentContainerStyle","style","theme","themeOverrides","testID","onDismissCallback","scale","animation","top","bottom","opacity","visibleInternal","setVisibleInternal","useState","showModalAnimation","useCallback","timing","toValue","duration","easing","out","cubic","useNativeDriver","start","hideModalAnimation","_ref2","finished","useEffect","undefined","onHardwareBackPress","subscription","remove","createElement","pointerEvents","accessibilityViewIsModal","accessibilityLiveRegion","absoluteFill","onAccessibilityEscape","accessibilityLabel","accessibilityRole","disabled","onPress","importantForAccessibility","styles","backdrop","backgroundColor","colors","wrapper","marginTop","marginBottom","content","create","flex","Object","assign","absoluteFillObject","justifyContent"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  StyleProp,\n  StyleSheet,\n  Pressable,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useLatestCallback from 'use-latest-callback';\n\nimport Surface from './Surface';\nimport { useInternalTheme } from '../core/theming';\nimport type { ThemeProp } from '../types';\nimport { addEventListener } from '../utils/addEventListener';\nimport { BackHandler } from '../utils/BackHandler/BackHandler';\nimport useAnimatedValue from '../utils/useAnimatedValue';\n\nexport type Props = {\n  /**\n   * Determines whether clicking outside the modal dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Determines whether clicking Android hardware back button dismiss dialog.\n   */\n  dismissableBackButton?: boolean;\n  /**\n   * Callback that is called when the user dismisses the modal.\n   */\n  onDismiss?: () => void;\n  /**\n   * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the modal.\n   */\n  overlayAccessibilityLabel?: string;\n  /**\n   * Determines Whether the modal is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Modal`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the content of the modal\n   */\n  contentContainerStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * Style for the wrapper of the modal.\n   * Use this prop to change the default wrapper style or to override safe area insets with marginTop and marginBottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst DEFAULT_DURATION = 220;\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](./Portal) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, PaperProvider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showModal = () => setVisible(true);\n *   const hideModal = () => setVisible(false);\n *   const containerStyle = {backgroundColor: 'white', padding: 20};\n *\n *   return (\n *     <PaperProvider>\n *       <Portal>\n *         <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={containerStyle}>\n *           <Text>Example Modal.  Click outside this area to dismiss.</Text>\n *         </Modal>\n *       </Portal>\n *       <Button style={{marginTop: 30}} onPress={showModal}>\n *         Show\n *       </Button>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nfunction Modal({\n  dismissable = true,\n  dismissableBackButton = dismissable,\n  visible = false,\n  overlayAccessibilityLabel = 'Close modal',\n  onDismiss = () => {},\n  children,\n  contentContainerStyle,\n  style,\n  theme: themeOverrides,\n  testID = 'modal',\n}: Props) {\n  const theme = useInternalTheme(themeOverrides);\n  const onDismissCallback = useLatestCallback(onDismiss);\n  const { scale } = theme.animation;\n  const { top, bottom } = useSafeAreaInsets();\n  const opacity = useAnimatedValue(visible ? 1 : 0);\n  const [visibleInternal, setVisibleInternal] = React.useState(visible);\n\n  const showModalAnimation = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start();\n  }, [opacity, scale]);\n\n  const hideModalAnimation = React.useCallback(() => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (!finished) {\n        return;\n      }\n\n      setVisibleInternal(false);\n    });\n  }, [opacity, scale]);\n\n  React.useEffect(() => {\n    if (visibleInternal === visible) {\n      return;\n    }\n\n    if (!visibleInternal && visible) {\n      setVisibleInternal(true);\n      return showModalAnimation();\n    }\n\n    if (visibleInternal && !visible) {\n      return hideModalAnimation();\n    }\n  }, [visible, showModalAnimation, hideModalAnimation, visibleInternal]);\n\n  React.useEffect(() => {\n    if (!visible) {\n      return undefined;\n    }\n\n    const onHardwareBackPress = () => {\n      if (dismissable || dismissableBackButton) {\n        onDismissCallback();\n      }\n\n      return true;\n    };\n\n    const subscription = addEventListener(\n      BackHandler,\n      'hardwareBackPress',\n      onHardwareBackPress\n    );\n    return () => subscription.remove();\n  }, [dismissable, dismissableBackButton, onDismissCallback, visible]);\n\n  if (!visibleInternal) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      pointerEvents={visible ? 'auto' : 'none'}\n      accessibilityViewIsModal\n      accessibilityLiveRegion=\"polite\"\n      style={StyleSheet.absoluteFill}\n      onAccessibilityEscape={onDismissCallback}\n      testID={testID}\n    >\n      <AnimatedPressable\n        accessibilityLabel={overlayAccessibilityLabel}\n        accessibilityRole=\"button\"\n        disabled={!dismissable}\n        onPress={dismissable ? onDismissCallback : undefined}\n        importantForAccessibility=\"no\"\n        style={[\n          styles.backdrop,\n          {\n            backgroundColor: theme.colors?.backdrop,\n            opacity,\n          },\n        ]}\n        testID={`${testID}-backdrop`}\n      />\n      <View\n        style={[\n          styles.wrapper,\n          { marginTop: top, marginBottom: bottom },\n          style,\n        ]}\n        pointerEvents=\"box-none\"\n        testID={`${testID}-wrapper`}\n      >\n        <Surface\n          testID={`${testID}-surface`}\n          theme={theme}\n          style={[{ opacity }, styles.content, contentContainerStyle]}\n        >\n          {children}\n        </Surface>\n      </View>\n    </Animated.View>\n  );\n}\n\nexport default Modal;\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}