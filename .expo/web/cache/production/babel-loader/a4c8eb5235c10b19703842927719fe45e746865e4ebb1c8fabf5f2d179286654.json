{"ast":null,"code":"import color from'color';const getAndroidCheckedColor=_ref=>{let{theme,customColor}=_ref;if(customColor){return customColor;}if(theme.isV3){return theme.colors.primary;}return theme.colors.accent;};const getAndroidUncheckedColor=_ref2=>{let{theme,customUncheckedColor}=_ref2;if(customUncheckedColor){return customUncheckedColor;}if(theme.isV3){return theme.colors.onSurfaceVariant;}if(theme.dark){return color(theme.colors.text).alpha(0.7).rgb().string();}return color(theme.colors.text).alpha(0.54).rgb().string();};const getAndroidRippleColor=_ref3=>{let{theme,checkedColor,disabled}=_ref3;if(disabled){if(theme.isV3){return color(theme.colors.onSurface).alpha(0.16).rgb().string();}return color(theme.colors.text).alpha(0.16).rgb().string();}return color(checkedColor).fade(0.32).rgb().string();};const getAndroidControlColor=_ref4=>{let{theme,checked,disabled,checkedColor,uncheckedColor}=_ref4;if(disabled){if(theme.isV3){return theme.colors.onSurfaceDisabled;}return theme.colors.disabled;}if(checked){return checkedColor;}return uncheckedColor;};export const getAndroidSelectionControlColor=_ref5=>{let{theme,disabled,checked,customColor,customUncheckedColor}=_ref5;const checkedColor=getAndroidCheckedColor({theme,customColor});const uncheckedColor=getAndroidUncheckedColor({theme,customUncheckedColor});return{rippleColor:getAndroidRippleColor({theme,checkedColor,disabled}),selectionControlColor:getAndroidControlColor({theme,disabled,checked,checkedColor,uncheckedColor})};};const getIOSCheckedColor=_ref6=>{let{theme,disabled,customColor}=_ref6;if(disabled){if(theme.isV3){return theme.colors.onSurfaceDisabled;}return theme.colors.disabled;}if(customColor){return customColor;}if(theme.isV3){return theme.colors.primary;}return theme.colors.accent;};const getIOSRippleColor=_ref7=>{let{theme,checkedColor,disabled}=_ref7;if(disabled){if(theme.isV3){return color(theme.colors.onSurface).alpha(0.16).rgb().string();}return color(theme.colors.text).alpha(0.16).rgb().string();}return color(checkedColor).fade(0.32).rgb().string();};export const getSelectionControlIOSColor=_ref8=>{let{theme,disabled,customColor}=_ref8;const checkedColor=getIOSCheckedColor({theme,disabled,customColor});return{checkedColor,rippleColor:getIOSRippleColor({theme,checkedColor,disabled})};};","map":{"version":3,"names":["color","getAndroidCheckedColor","_ref","theme","customColor","isV3","colors","primary","accent","getAndroidUncheckedColor","_ref2","customUncheckedColor","onSurfaceVariant","dark","text","alpha","rgb","string","getAndroidRippleColor","_ref3","checkedColor","disabled","onSurface","fade","getAndroidControlColor","_ref4","checked","uncheckedColor","onSurfaceDisabled","getAndroidSelectionControlColor","_ref5","rippleColor","selectionControlColor","getIOSCheckedColor","_ref6","getIOSRippleColor","_ref7","getSelectionControlIOSColor","_ref8"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Checkbox\\utils.ts"],"sourcesContent":["import color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\nconst getAndroidCheckedColor = ({\n  theme,\n  customColor,\n}: {\n  theme: InternalTheme;\n  customColor?: string;\n}) => {\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getAndroidUncheckedColor = ({\n  theme,\n  customUncheckedColor,\n}: {\n  theme: InternalTheme;\n  customUncheckedColor?: string;\n}) => {\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getAndroidRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: InternalTheme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nconst getAndroidControlColor = ({\n  theme,\n  checked,\n  disabled,\n  checkedColor,\n  uncheckedColor,\n}: {\n  theme: InternalTheme;\n  checked: boolean;\n  checkedColor: string;\n  uncheckedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n  return uncheckedColor;\n};\n\nexport const getAndroidSelectionControlColor = ({\n  theme,\n  disabled,\n  checked,\n  customColor,\n  customUncheckedColor,\n}: {\n  theme: InternalTheme;\n  checked: boolean;\n  disabled?: boolean;\n  customColor?: string;\n  customUncheckedColor?: string;\n}) => {\n  const checkedColor = getAndroidCheckedColor({ theme, customColor });\n  const uncheckedColor = getAndroidUncheckedColor({\n    theme,\n    customUncheckedColor,\n  });\n  return {\n    rippleColor: getAndroidRippleColor({ theme, checkedColor, disabled }),\n    selectionControlColor: getAndroidControlColor({\n      theme,\n      disabled,\n      checked,\n      checkedColor,\n      uncheckedColor,\n    }),\n  };\n};\n\nconst getIOSCheckedColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: InternalTheme;\n  customColor?: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getIOSRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: InternalTheme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport const getSelectionControlIOSColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: InternalTheme;\n  disabled?: boolean;\n  customColor?: string;\n}) => {\n  const checkedColor = getIOSCheckedColor({ theme, disabled, customColor });\n  return {\n    checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme,\n      checkedColor,\n      disabled,\n    }),\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}