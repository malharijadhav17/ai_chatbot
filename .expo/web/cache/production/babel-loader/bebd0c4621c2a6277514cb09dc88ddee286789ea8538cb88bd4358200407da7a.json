{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"focusedIcon\",\"unfocusedIcon\",\"label\",\"active\",\"theme\",\"style\",\"onPress\",\"disabled\",\"accessibilityLabel\",\"badge\",\"testID\",\"labelMaxFontSizeMultiplier\"];import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from'../../core/theming';import Badge from'../Badge';import Icon from'../Icon';import Text from'../Typography/Text';const badgeSize=8;const iconSize=24;const itemSize=56;const outlineHeight=32;const DrawerCollapsedItem=_ref=>{let{focusedIcon,unfocusedIcon,label,active,theme:themeOverrides,style,onPress,disabled,accessibilityLabel,badge=false,testID='drawer-collapsed-item',labelMaxFontSizeMultiplier}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const theme=useInternalTheme(themeOverrides);const{isV3}=theme;const{scale}=theme.animation;const[numOfLines,setNumOfLines]=React.useState(1);const{current:animScale}=React.useRef(new Animated.Value(active?1:0.5));React.useEffect(()=>{if(!active){animScale.setValue(0.5);}},[animScale,active]);if(!isV3){return null;}const handlePressOut=()=>{Animated.timing(animScale,{toValue:1,duration:150*scale,useNativeDriver:true}).start();};const iconPadding=((!label?itemSize:outlineHeight)-iconSize)/2;const backgroundColor=active?theme.colors.secondaryContainer:'transparent';const labelColor=active?theme.colors.onSurface:theme.colors.onSurfaceVariant;const iconColor=active?theme.colors.onSecondaryContainer:theme.colors.onSurfaceVariant;const onTextLayout=_ref2=>{let{nativeEvent}=_ref2;setNumOfLines(nativeEvent.lines.length);};const androidLetterSpacingStyle=false&&numOfLines>4&&styles.letterSpacing;const labelTextStyle=Object.assign({color:labelColor},isV3?theme.fonts.labelMedium:{});const icon=!active&&unfocusedIcon!==undefined?unfocusedIcon:focusedIcon;return React.createElement(View,rest,React.createElement(Pressable,{onPress:onPress,onPressOut:onPress?handlePressOut:undefined,disabled:disabled,accessibilityTraits:active?['button','selected']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{selected:active},accessibilityLabel:accessibilityLabel,testID:testID},React.createElement(View,{style:styles.wrapper},React.createElement(Animated.View,{style:[styles.outline,!label&&styles.roundedOutline,{transform:[label?{scaleX:animScale}:{scale:animScale}],backgroundColor},style],testID:`${testID}-outline`}),React.createElement(View,{style:[styles.icon,{top:iconPadding}],testID:`${testID}-container`},badge&&React.createElement(View,{style:styles.badgeContainer},typeof badge==='boolean'?React.createElement(Badge,{visible:badge,size:badgeSize}):React.createElement(Badge,{visible:badge!=null,size:2*badgeSize},badge)),React.createElement(Icon,{source:icon,size:iconSize,color:iconColor})),label?React.createElement(Text,{variant:\"labelMedium\",selectable:false,numberOfLines:2,onTextLayout:onTextLayout,style:[styles.label,androidLetterSpacingStyle,labelTextStyle],maxFontSizeMultiplier:labelMaxFontSizeMultiplier},label):null)));};DrawerCollapsedItem.displayName='Drawer.CollapsedItem';const styles=StyleSheet.create({wrapper:{width:80,marginBottom:12,minHeight:itemSize,alignItems:'center'},outline:{width:itemSize,height:outlineHeight,borderRadius:itemSize/2,alignItems:'center',justifyContent:'center'},roundedOutline:{height:itemSize},icon:{position:'absolute'},letterSpacing:{letterSpacing:0.3,alignSelf:'stretch'},label:{marginHorizontal:12,marginTop:4,textAlign:'center'},badgeContainer:{position:'absolute',left:20,bottom:20,zIndex:2}});export default DrawerCollapsedItem;","map":{"version":3,"names":["React","Animated","Platform","Pressable","StyleSheet","View","useInternalTheme","Badge","Icon","Text","badgeSize","iconSize","itemSize","outlineHeight","DrawerCollapsedItem","_ref","focusedIcon","unfocusedIcon","label","active","theme","themeOverrides","style","onPress","disabled","accessibilityLabel","badge","testID","labelMaxFontSizeMultiplier","rest","_objectWithoutPropertiesLoose","_excluded","isV3","scale","animation","numOfLines","setNumOfLines","useState","current","animScale","useRef","Value","useEffect","setValue","handlePressOut","timing","toValue","duration","useNativeDriver","start","iconPadding","backgroundColor","colors","secondaryContainer","labelColor","onSurface","onSurfaceVariant","iconColor","onSecondaryContainer","onTextLayout","_ref2","nativeEvent","lines","length","androidLetterSpacingStyle","styles","letterSpacing","labelTextStyle","Object","assign","color","fonts","labelMedium","icon","undefined","createElement","onPressOut","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","selected","wrapper","outline","roundedOutline","transform","scaleX","top","badgeContainer","visible","size","source","variant","selectable","numberOfLines","maxFontSizeMultiplier","displayName","create","width","marginBottom","minHeight","alignItems","height","borderRadius","justifyContent","position","alignSelf","marginHorizontal","marginTop","textAlign","left","bottom","zIndex"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Drawer\\DrawerCollapsedItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  Platform,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  TextLayoutEventData,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Badge from '../Badge';\nimport Icon, { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The label text of the item.\n   */\n  label?: string;\n  /**\n   * Badge to show on the icon, can be `true` to show a dot, `string` or `number` to show text.\n   */\n  badge?: string | number | boolean;\n  /**\n   * Whether the item is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * Icon to use as the focused destination icon, can be a string, an image source or a react component\n   */\n  focusedIcon?: IconSource;\n  /**\n   * @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * Icon to use as the unfocused destination icon, can be a string, an image source or a react component\n   */\n  unfocusedIcon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst badgeSize = 8;\nconst iconSize = 24;\nconst itemSize = 56;\nconst outlineHeight = 32;\n\n/**\n * Note: Available in v5.x with theme version 3\n *\n * Collapsed component used to show an action item with an icon and optionally label in a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.CollapsedItem\n *      focusedIcon=\"inbox\"\n *      unfocusedIcon=\"inbox-outline\"\n *      label=\"Inbox\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerCollapsedItem = ({\n  focusedIcon,\n  unfocusedIcon,\n  label,\n  active,\n  theme: themeOverrides,\n  style,\n  onPress,\n  disabled,\n  accessibilityLabel,\n  badge = false,\n  testID = 'drawer-collapsed-item',\n  labelMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3 } = theme;\n  const { scale } = theme.animation;\n\n  const [numOfLines, setNumOfLines] = React.useState(1);\n\n  const { current: animScale } = React.useRef<Animated.Value>(\n    new Animated.Value(active ? 1 : 0.5)\n  );\n\n  React.useEffect(() => {\n    if (!active) {\n      animScale.setValue(0.5);\n    }\n  }, [animScale, active]);\n\n  if (!isV3) {\n    return null;\n  }\n\n  const handlePressOut = () => {\n    Animated.timing(animScale, {\n      toValue: 1,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const iconPadding = ((!label ? itemSize : outlineHeight) - iconSize) / 2;\n\n  const backgroundColor = active\n    ? theme.colors.secondaryContainer\n    : 'transparent';\n  const labelColor = active\n    ? theme.colors.onSurface\n    : theme.colors.onSurfaceVariant;\n  const iconColor = active\n    ? theme.colors.onSecondaryContainer\n    : theme.colors.onSurfaceVariant;\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    setNumOfLines(nativeEvent.lines.length);\n  };\n\n  // Label is cut off on Android, when centered \"labelMedium\" text\n  // has more than 4 lines, so there is a need to decrease the letter spacing.\n  const androidLetterSpacingStyle =\n    Platform.OS === 'android' && numOfLines > 4 && styles.letterSpacing;\n\n  const labelTextStyle = {\n    color: labelColor,\n    ...(isV3 ? theme.fonts.labelMedium : {}),\n  };\n\n  const icon =\n    !active && unfocusedIcon !== undefined ? unfocusedIcon : focusedIcon;\n\n  return (\n    <View {...rest}>\n      {/* eslint-disable-next-line react-native-a11y/has-accessibility-props */}\n      <Pressable\n        onPress={onPress}\n        onPressOut={onPress ? handlePressOut : undefined}\n        disabled={disabled}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={active ? ['button', 'selected'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: active }}\n        accessibilityLabel={accessibilityLabel}\n        testID={testID}\n      >\n        <View style={styles.wrapper}>\n          <Animated.View\n            style={[\n              styles.outline,\n              !label && styles.roundedOutline,\n              {\n                transform: [\n                  label\n                    ? {\n                        scaleX: animScale,\n                      }\n                    : { scale: animScale },\n                ],\n                backgroundColor,\n              },\n              style,\n            ]}\n            testID={`${testID}-outline`}\n          />\n\n          <View\n            style={[styles.icon, { top: iconPadding }]}\n            testID={`${testID}-container`}\n          >\n            {badge && (\n              <View style={styles.badgeContainer}>\n                {typeof badge === 'boolean' ? (\n                  <Badge visible={badge} size={badgeSize} />\n                ) : (\n                  <Badge visible={badge != null} size={2 * badgeSize}>\n                    {badge}\n                  </Badge>\n                )}\n              </View>\n            )}\n            <Icon source={icon} size={iconSize} color={iconColor} />\n          </View>\n\n          {label ? (\n            <Text\n              variant=\"labelMedium\"\n              selectable={false}\n              numberOfLines={2}\n              onTextLayout={onTextLayout}\n              style={[styles.label, androidLetterSpacingStyle, labelTextStyle]}\n              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n            >\n              {label}\n            </Text>\n          ) : null}\n        </View>\n      </Pressable>\n    </View>\n  );\n};\n\nDrawerCollapsedItem.displayName = 'Drawer.CollapsedItem';\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    width: 80,\n    marginBottom: 12,\n    minHeight: itemSize,\n    alignItems: 'center',\n  },\n  outline: {\n    width: itemSize,\n    height: outlineHeight,\n    borderRadius: itemSize / 2,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  roundedOutline: {\n    height: itemSize,\n  },\n  icon: {\n    position: 'absolute',\n  },\n  letterSpacing: {\n    letterSpacing: 0.3,\n    alignSelf: 'stretch',\n  },\n  label: {\n    marginHorizontal: 12,\n    marginTop: 4,\n    textAlign: 'center',\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 20,\n    bottom: 20,\n    zIndex: 2,\n  },\n});\n\nexport default DrawerCollapsedItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}