{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"style\",\"index\",\"children\",\"visibility\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import View from\"react-native-web/dist/exports/View\";class BottomNavigationRouteScreen extends React.Component{render(){const _this$props=this.props,{style,index,children,visibility}=_this$props,rest=_objectWithoutPropertiesLoose(_this$props,_excluded);const display=true?visibility===0?'none':'flex':undefined;return React.createElement(View,_extends({testID:`RouteScreen: ${index}`,style:[style,{display}]},rest),children);}}export default Animated.createAnimatedComponent(BottomNavigationRouteScreen);","map":{"version":3,"names":["React","Animated","Platform","View","BottomNavigationRouteScreen","Component","render","_this$props","props","style","index","children","visibility","rest","_objectWithoutPropertiesLoose","_excluded","display","undefined","createElement","_extends","testID","createAnimatedComponent"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\BottomNavigation\\BottomNavigationRouteScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, Platform, View, ViewProps } from 'react-native';\n\ninterface Props extends ViewProps {\n  visibility?: 0 | 1 | Animated.AnimatedInterpolation<number>;\n  index: number;\n}\n\nclass BottomNavigationRouteScreen extends React.Component<Props> {\n  render(): JSX.Element {\n    const { style, index, children, visibility, ...rest } = this.props;\n\n    // On Web, the unfocused tab screens can still be clicked since they are transparent, but still there\n    // Hiding them with `display: none` makes sure that they won't receive clicks\n    // We only set it on Web since on native, react-native-pager-view's breaks due to layout changing\n    const display =\n      Platform.OS === 'web' ? (visibility === 0 ? 'none' : 'flex') : undefined;\n\n    return (\n      <View\n        testID={`RouteScreen: ${index}`}\n        style={[style, { display }]}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n}\n\nexport default Animated.createAnimatedComponent(BottomNavigationRouteScreen);\n"],"mappings":"ocAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,QAAAC,QAAA,qDAAAC,QAAA,qDAAAC,IAAA,0CAQzB,KAAM,CAAAC,2BAA2B,QAAS,CAAAJ,KAAK,CAACK,SAAiB,CAC/DC,MAAMA,CAAA,CAAgB,CACpB,MAAAC,WAAA,CAAwD,IAAI,CAACC,KAAK,CAA5D,CAAEC,KAAK,CAAEC,KAAK,CAAEC,QAAQ,CAAEC,UAAoB,CAAC,CAAAL,WAAA,CAANM,IAAA,CAAAC,6BAAA,CAAAP,WAAA,CAAAQ,SAAA,EAK/C,KAAM,CAAAC,OAAO,CACX,KAAyBJ,UAAU,GAAK,CAAC,CAAG,MAAM,CAAG,MAAM,CAAIK,SAAS,CAE1E,MACE,CAAAjB,KAAA,CAAAkB,aAAA,CAACf,IAAI,CAAAgB,QAAA,EACHC,MAAM,CAAG,gBAAeV,KAAM,EAAE,CAChCD,KAAK,CAAE,CAACA,KAAK,CAAE,CAAEO,OAAQ,CAAC,CAAE,EACxBH,IAAI,EAEPF,QACG,CAAC,CAEX,CACF,CAEA,cAAe,CAAAV,QAAQ,CAACoB,uBAAuB,CAACjB,2BAA2B,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}