{"ast":null,"code":"import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import View from\"react-native-web/dist/exports/View\";import AnimatedText from'../../Typography/AnimatedText';import{getConstants}from'../helpers';const InputLabel=props=>{const{labeled,wiggle,error,focused,opacity,labelLayoutWidth,labelLayoutHeight,labelBackground,label,labelError,onLayoutAnimatedText,onLabelTextLayout,hasActiveOutline,activeColor,placeholderStyle,baseLabelTranslateX,baseLabelTranslateY,font,fontSize,lineHeight,fontWeight,placeholderOpacity,wiggleOffsetX,labelScale,topPosition,paddingLeft,paddingRight,backgroundColor,roundness,placeholderColor,errorColor,labelTranslationXOffset,maxFontSizeMultiplier,testID,isV3,inputContainerLayout,scaledLabel}=props;const{INPUT_PADDING_HORIZONTAL}=getConstants(isV3);const{width}=useWindowDimensions();const paddingOffset=paddingLeft&&paddingRight?{paddingLeft,paddingRight}:{};const labelTranslationX={transform:[{translateX:labeled.interpolate({inputRange:[0,1],outputRange:[baseLabelTranslateX,labelTranslationXOffset||0]})}]};const labelStyle=Object.assign({},font,{fontSize,lineHeight,fontWeight,opacity:labeled.interpolate({inputRange:[0,1],outputRange:[hasActiveOutline?1:0,0]}),transform:[{translateX:wiggle?error.interpolate({inputRange:[0,0.5,1],outputRange:[0,wiggleOffsetX,0]}):0},{translateY:baseLabelTranslateY!==0?labeled.interpolate({inputRange:[0,1],outputRange:[baseLabelTranslateY,0]}):0},{scale:labelScale!==0?labeled.interpolate({inputRange:[0,1],outputRange:[labelScale,1]}):labeled}]});const labelWidth=(inputContainerLayout.width+INPUT_PADDING_HORIZONTAL/2)/(scaledLabel?labelScale:1);const commonStyles=[placeholderStyle,{top:topPosition},{maxWidth:labelWidth},labelStyle,paddingOffset||{}];const textColor=labelError&&errorColor?errorColor:placeholderColor;return(React.createElement(View,{pointerEvents:\"none\",style:[StyleSheet.absoluteFill,styles.overflow]},React.createElement(Animated.View,{pointerEvents:\"none\",style:[StyleSheet.absoluteFill,styles.labelContainer,false&&{width},{opacity},labelTranslationX]},React.createElement(View,{style:{width:labelWidth}},labelBackground===null||labelBackground===void 0?void 0:labelBackground({labeled,labelLayoutWidth,labelLayoutHeight,labelStyle,placeholderStyle,baseLabelTranslateX,topPosition,label,backgroundColor,roundness,maxFontSizeMultiplier:maxFontSizeMultiplier,testID}),React.createElement(AnimatedText,{variant:\"bodySmall\",onLayout:onLayoutAnimatedText,onTextLayout:onLabelTextLayout,style:[commonStyles,{color:activeColor}],numberOfLines:1,maxFontSizeMultiplier:maxFontSizeMultiplier,testID:`${testID}-label-active`},label),React.createElement(AnimatedText,{variant:focused?'bodyLarge':'bodySmall',style:[commonStyles,{color:textColor,opacity:placeholderOpacity}],numberOfLines:1,maxFontSizeMultiplier:maxFontSizeMultiplier,testID:`${testID}-label-inactive`},label)))));};const styles=StyleSheet.create({overflow:{overflow:'hidden'},labelContainer:{zIndex:3}});export default React.memo(InputLabel);","map":{"version":3,"names":["React","Animated","Platform","StyleSheet","useWindowDimensions","View","AnimatedText","getConstants","InputLabel","props","labeled","wiggle","error","focused","opacity","labelLayoutWidth","labelLayoutHeight","labelBackground","label","labelError","onLayoutAnimatedText","onLabelTextLayout","hasActiveOutline","activeColor","placeholderStyle","baseLabelTranslateX","baseLabelTranslateY","font","fontSize","lineHeight","fontWeight","placeholderOpacity","wiggleOffsetX","labelScale","topPosition","paddingLeft","paddingRight","backgroundColor","roundness","placeholderColor","errorColor","labelTranslationXOffset","maxFontSizeMultiplier","testID","isV3","inputContainerLayout","scaledLabel","INPUT_PADDING_HORIZONTAL","width","paddingOffset","labelTranslationX","transform","translateX","interpolate","inputRange","outputRange","labelStyle","Object","assign","translateY","scale","labelWidth","commonStyles","top","maxWidth","textColor","createElement","pointerEvents","style","absoluteFill","styles","overflow","labelContainer","variant","onLayout","onTextLayout","color","numberOfLines","create","zIndex","memo"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\TextInput\\Label\\InputLabel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n} from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getConstants } from '../helpers';\nimport type { InputLabelProps } from '../types';\n\nconst InputLabel = (props: InputLabelProps) => {\n  const {\n    labeled,\n    wiggle,\n    error,\n    focused,\n    opacity,\n    labelLayoutWidth,\n    labelLayoutHeight,\n    labelBackground,\n    label,\n    labelError,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingLeft,\n    paddingRight,\n    backgroundColor,\n    roundness,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset,\n    maxFontSizeMultiplier,\n    testID,\n    isV3,\n    inputContainerLayout,\n    scaledLabel,\n  } = props;\n\n  const { INPUT_PADDING_HORIZONTAL } = getConstants(isV3);\n  const { width } = useWindowDimensions();\n\n  const paddingOffset =\n    paddingLeft && paddingRight ? { paddingLeft, paddingRight } : {};\n\n  const labelTranslationX = {\n    transform: [\n      {\n        // Offset label scale since RN doesn't support transform origin\n        translateX: labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0],\n        }),\n      },\n    ],\n  };\n\n  const labelStyle = {\n    ...font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0],\n    }),\n    transform: [\n      {\n        // Wiggle the label when there's an error\n        translateX: wiggle\n          ? error.interpolate({\n              inputRange: [0, 0.5, 1],\n              outputRange: [0, wiggleOffsetX, 0],\n            })\n          : 0,\n      },\n      {\n        // Move label to top\n        translateY:\n          baseLabelTranslateY !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [baseLabelTranslateY, 0],\n              })\n            : 0,\n      },\n      {\n        // Make label smaller\n        scale:\n          labelScale !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [labelScale, 1],\n              })\n            : labeled,\n      },\n    ],\n  };\n\n  const labelWidth =\n    (inputContainerLayout.width + INPUT_PADDING_HORIZONTAL / 2) /\n    (scaledLabel ? labelScale : 1);\n\n  const commonStyles = [\n    placeholderStyle,\n    {\n      top: topPosition,\n    },\n    {\n      maxWidth: labelWidth,\n    },\n    labelStyle,\n    paddingOffset || {},\n  ];\n\n  const textColor = (\n    labelError && errorColor ? errorColor : placeholderColor\n  ) as ColorValue;\n\n  return (\n    // Position colored placeholder and gray placeholder on top of each other and crossfade them\n    // This gives the effect of animating the color, but allows us to use native driver\n    <View\n      pointerEvents=\"none\"\n      style={[StyleSheet.absoluteFill, styles.overflow]}\n    >\n      <Animated.View\n        pointerEvents=\"none\"\n        style={[\n          StyleSheet.absoluteFill,\n          styles.labelContainer,\n          Platform.OS !== 'web' && { width },\n          { opacity },\n          labelTranslationX,\n        ]}\n      >\n        <View\n          style={{\n            width: labelWidth,\n          }}\n        >\n          {labelBackground?.({\n            labeled,\n            labelLayoutWidth,\n            labelLayoutHeight,\n            labelStyle,\n            placeholderStyle,\n            baseLabelTranslateX,\n            topPosition,\n            label,\n            backgroundColor,\n            roundness,\n            maxFontSizeMultiplier: maxFontSizeMultiplier,\n            testID,\n          })}\n          <AnimatedText\n            variant=\"bodySmall\"\n            onLayout={onLayoutAnimatedText}\n            onTextLayout={onLabelTextLayout}\n            style={[\n              commonStyles,\n              {\n                color: activeColor,\n              },\n            ]}\n            numberOfLines={1}\n            maxFontSizeMultiplier={maxFontSizeMultiplier}\n            testID={`${testID}-label-active`}\n          >\n            {label}\n          </AnimatedText>\n          <AnimatedText\n            variant={focused ? 'bodyLarge' : 'bodySmall'}\n            style={[\n              commonStyles,\n              {\n                color: textColor,\n                opacity: placeholderOpacity,\n              },\n            ]}\n            numberOfLines={1}\n            maxFontSizeMultiplier={maxFontSizeMultiplier}\n            testID={`${testID}-label-inactive`}\n          >\n            {label}\n          </AnimatedText>\n        </View>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  overflow: {\n    overflow: 'hidden',\n  },\n  labelContainer: {\n    zIndex: 3,\n  },\n});\n\nexport default React.memo(InputLabel);\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}