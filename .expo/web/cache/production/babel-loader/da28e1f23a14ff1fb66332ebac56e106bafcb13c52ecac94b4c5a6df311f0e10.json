{"ast":null,"code":"import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useSafeAreaInsets}from'react-native-safe-area-context';import FAB from'./FAB';import{getFABGroupColors}from'./utils';import{useInternalTheme}from'../../core/theming';import Card from'../Card/Card';import Text from'../Typography/Text';const AnimatedPressable=Animated.createAnimatedComponent(Pressable);const FABGroup=_ref=>{let{actions,icon,open,onPress,onLongPress,toggleStackOnLongPress,accessibilityLabel,theme:themeOverrides,style,fabStyle,visible,label,testID,onStateChange,color:colorProp,delayLongPress=200,variant='primary',enableLongPressWhenStackOpened=false,backdropColor:customBackdropColor,rippleColor}=_ref;const theme=useInternalTheme(themeOverrides);const{current:backdrop}=React.useRef(new Animated.Value(0));const animations=React.useRef(actions.map(()=>new Animated.Value(open?1:0)));const[prevActions,setPrevActions]=React.useState(null);const{scale}=theme.animation;const{isV3}=theme;React.useEffect(()=>{if(open){Animated.parallel([Animated.timing(backdrop,{toValue:1,duration:250*scale,useNativeDriver:true}),Animated.stagger(isV3?15:50*scale,animations.current.map(animation=>Animated.timing(animation,{toValue:1,duration:150*scale,useNativeDriver:true})).reverse())]).start();}else{Animated.parallel([Animated.timing(backdrop,{toValue:0,duration:200*scale,useNativeDriver:true}),...animations.current.map(animation=>Animated.timing(animation,{toValue:0,duration:150*scale,useNativeDriver:true}))]).start();}},[open,actions,backdrop,scale,isV3]);const close=()=>onStateChange({open:false});const toggle=()=>onStateChange({open:!open});const{labelColor,backdropColor,stackedFABBackgroundColor}=getFABGroupColors({theme,customBackdropColor});const backdropOpacity=open?backdrop.interpolate({inputRange:[0,0.5,1],outputRange:[0,1,1]}):backdrop;const opacities=animations.current;const scales=opacities.map(opacity=>open?opacity.interpolate({inputRange:[0,1],outputRange:[0.5,1]}):1);const translations=opacities.map(opacity=>open?opacity.interpolate({inputRange:[0,1],outputRange:[24,-8]}):-8);const labelTranslations=opacities.map(opacity=>open?opacity.interpolate({inputRange:[0,1],outputRange:[8,-8]}):-8);const{top,bottom,right,left}=useSafeAreaInsets();const containerPaddings={paddingBottom:bottom,paddingRight:right,paddingLeft:left,paddingTop:top};if(actions.length!==(prevActions===null||prevActions===void 0?void 0:prevActions.length)){animations.current=actions.map((_,i)=>animations.current[i]||new Animated.Value(open?1:0));setPrevActions(actions);}return React.createElement(View,{pointerEvents:\"box-none\",style:[styles.container,containerPaddings,style]},React.createElement(AnimatedPressable,{accessibilityRole:\"button\",onPress:close,pointerEvents:open?'auto':'none',style:[styles.backdrop,{opacity:backdropOpacity,backgroundColor:backdropColor}]}),React.createElement(View,{pointerEvents:\"box-none\",style:styles.safeArea},React.createElement(View,{pointerEvents:open?'box-none':'none'},actions.map((it,i)=>{const labelTextStyle=Object.assign({color:it.labelTextColor??labelColor},isV3?theme.fonts.titleMedium:{});const marginHorizontal=typeof it.size==='undefined'||it.size==='small'?24:16;const accessibilityLabel=typeof it.accessibilityLabel!=='undefined'?it.accessibilityLabel:it.label;const size=typeof it.size!=='undefined'?it.size:'small';return React.createElement(View,{key:i,style:[styles.item,{marginHorizontal}],pointerEvents:open?'box-none':'none',accessibilityRole:\"button\",importantForAccessibility:\"yes\",accessible:true,accessibilityLabel:accessibilityLabel},it.label&&React.createElement(View,null,React.createElement(Card,{mode:isV3?'contained':'elevated',onPress:e=>{it.onPress(e);close();},accessibilityHint:it.accessibilityHint,importantForAccessibility:\"no-hide-descendants\",accessibilityElementsHidden:true,style:[styles.containerStyle,{transform:[isV3?{translateY:labelTranslations[i]}:{scale:scales[i]}],opacity:opacities[i]},isV3&&styles.v3ContainerStyle,it.containerStyle]},React.createElement(Text,{variant:\"titleMedium\",importantForAccessibility:\"no-hide-descendants\",accessibilityElementsHidden:true,style:[labelTextStyle,it.labelStyle],maxFontSizeMultiplier:it.labelMaxFontSizeMultiplier},it.label))),React.createElement(FAB,{size:size,icon:it.icon,color:it.color,style:[{transform:[{scale:scales[i]}],opacity:opacities[i],backgroundColor:stackedFABBackgroundColor},isV3&&{transform:[{translateY:translations[i]}]},it.style],accessibilityElementsHidden:true,theme:theme,onPress:e=>{it.onPress(e);close();},importantForAccessibility:\"no-hide-descendants\",testID:it.testID,visible:open,rippleColor:it.rippleColor}));})),React.createElement(FAB,{onPress:e=>{onPress===null||onPress===void 0?void 0:onPress(e);if(!toggleStackOnLongPress||open){toggle();}},onLongPress:e=>{if(!open||enableLongPressWhenStackOpened){onLongPress===null||onLongPress===void 0?void 0:onLongPress(e);if(toggleStackOnLongPress){toggle();}}},delayLongPress:delayLongPress,icon:icon,color:colorProp,accessibilityLabel:accessibilityLabel,accessibilityRole:\"button\",accessibilityState:{expanded:open},style:[styles.fab,fabStyle],theme:theme,visible:visible,label:label,testID:testID,variant:variant,rippleColor:rippleColor})));};FABGroup.displayName='FAB.Group';export default FABGroup;export{FABGroup};const styles=StyleSheet.create({safeArea:{alignItems:'flex-end'},container:Object.assign({},StyleSheet.absoluteFillObject,{justifyContent:'flex-end'}),fab:{marginHorizontal:16,marginBottom:16,marginTop:0},backdrop:Object.assign({},StyleSheet.absoluteFillObject),containerStyle:{borderRadius:5,paddingHorizontal:12,paddingVertical:6,marginVertical:8,marginHorizontal:16,elevation:2},item:{marginBottom:16,flexDirection:'row',justifyContent:'flex-end',alignItems:'center'},v3ContainerStyle:{backgroundColor:'transparent',elevation:0}});","map":{"version":3,"names":["React","Animated","Pressable","StyleSheet","View","useSafeAreaInsets","FAB","getFABGroupColors","useInternalTheme","Card","Text","AnimatedPressable","createAnimatedComponent","FABGroup","_ref","actions","icon","open","onPress","onLongPress","toggleStackOnLongPress","accessibilityLabel","theme","themeOverrides","style","fabStyle","visible","label","testID","onStateChange","color","colorProp","delayLongPress","variant","enableLongPressWhenStackOpened","backdropColor","customBackdropColor","rippleColor","current","backdrop","useRef","Value","animations","map","prevActions","setPrevActions","useState","scale","animation","isV3","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","close","toggle","labelColor","stackedFABBackgroundColor","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","translations","labelTranslations","top","bottom","right","left","containerPaddings","paddingBottom","paddingRight","paddingLeft","paddingTop","length","_","i","createElement","pointerEvents","styles","container","accessibilityRole","backgroundColor","safeArea","it","labelTextStyle","Object","assign","labelTextColor","fonts","titleMedium","marginHorizontal","size","key","item","importantForAccessibility","accessible","mode","e","accessibilityHint","accessibilityElementsHidden","containerStyle","transform","translateY","v3ContainerStyle","labelStyle","maxFontSizeMultiplier","labelMaxFontSizeMultiplier","accessibilityState","expanded","fab","displayName","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\FAB\\FABGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport FAB from './FAB';\nimport { getFABGroupColors } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport Card from '../Card/Card';\nimport type { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nexport type Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `accessibilityHint`: accessibility hint for the action\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor` @supported Available in 5.x\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\n   * - `labelMaxFontSizeMultiplier`: specifies the largest possible scale a title font can reach.\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   * - `onLongPress`: callback that is called when `FAB` is long pressed\n   * - `toggleStackOnLongPress`: callback that is called when `FAB` is long pressed\n   * - `size`: size of action item. Defaults to `small`. @supported Available in v5.x\n   * - `testID`: testID to be used on tests\n   * - `rippleColor`: color of the ripple effect.\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    accessibilityHint?: string;\n    style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    containerStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    labelStyle?: StyleProp<TextStyle>;\n    labelMaxFontSizeMultiplier?: number;\n    onPress: (e: GestureResponderEvent) => void;\n    size?: 'small' | 'medium';\n    testID?: string;\n    rippleColor?: ColorValue;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long pressing the `FAB`.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Makes actions stack appear on long press instead of on press.\n   */\n  toggleStackOnLongPress?: boolean;\n  /**\n   * Changes the delay for long press reaction.\n   */\n  delayLongPress?: number;\n  /**\n   * Allows for onLongPress when stack is opened.\n   */\n  enableLongPressWhenStackOpened?: boolean;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Optional label for `FAB`.\n   */\n  label?: string;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](../Portal) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, PaperProvider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <PaperProvider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           visible\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </PaperProvider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  onLongPress,\n  toggleStackOnLongPress,\n  accessibilityLabel,\n  theme: themeOverrides,\n  style,\n  fabStyle,\n  visible,\n  label,\n  testID,\n  onStateChange,\n  color: colorProp,\n  delayLongPress = 200,\n  variant = 'primary',\n  enableLongPressWhenStackOpened = false,\n  backdropColor: customBackdropColor,\n  rippleColor,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n        onPress: (e: GestureResponderEvent) => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n  const { isV3 } = theme;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          isV3 ? 15 : 50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { labelColor, backdropColor, stackedFABBackgroundColor } =\n    getFABGroupColors({ theme, customBackdropColor });\n\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1],\n        })\n      : 1\n  );\n\n  const translations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [24, -8],\n        })\n      : -8\n  );\n  const labelTranslations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [8, -8],\n        })\n      : -8\n  );\n\n  const { top, bottom, right, left } = useSafeAreaInsets();\n  const containerPaddings = {\n    paddingBottom: bottom,\n    paddingRight: right,\n    paddingLeft: left,\n    paddingTop: top,\n  };\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.container, containerPaddings, style]}\n    >\n      <AnimatedPressable\n        accessibilityRole=\"button\"\n        onPress={close}\n        pointerEvents={open ? 'auto' : 'none'}\n        style={[\n          styles.backdrop,\n          {\n            opacity: backdropOpacity,\n            backgroundColor: backdropColor,\n          },\n        ]}\n      />\n      <View pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => {\n            const labelTextStyle = {\n              color: it.labelTextColor ?? labelColor,\n              ...(isV3 ? theme.fonts.titleMedium : {}),\n            };\n            const marginHorizontal =\n              typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n            const accessibilityLabel =\n              typeof it.accessibilityLabel !== 'undefined'\n                ? it.accessibilityLabel\n                : it.label;\n            const size = typeof it.size !== 'undefined' ? it.size : 'small';\n\n            return (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={[\n                  styles.item,\n                  {\n                    marginHorizontal,\n                  },\n                ]}\n                pointerEvents={open ? 'box-none' : 'none'}\n                accessibilityRole=\"button\"\n                importantForAccessibility=\"yes\"\n                accessible={true}\n                accessibilityLabel={accessibilityLabel}\n              >\n                {it.label && (\n                  <View>\n                    <Card\n                      mode={isV3 ? 'contained' : 'elevated'}\n                      onPress={(e) => {\n                        it.onPress(e);\n                        close();\n                      }}\n                      accessibilityHint={it.accessibilityHint}\n                      importantForAccessibility=\"no-hide-descendants\"\n                      accessibilityElementsHidden={true}\n                      style={[\n                        styles.containerStyle,\n                        {\n                          transform: [\n                            isV3\n                              ? { translateY: labelTranslations[i] }\n                              : { scale: scales[i] },\n                          ],\n                          opacity: opacities[i],\n                        },\n                        isV3 && styles.v3ContainerStyle,\n                        it.containerStyle,\n                      ]}\n                    >\n                      <Text\n                        variant=\"titleMedium\"\n                        importantForAccessibility=\"no-hide-descendants\"\n                        accessibilityElementsHidden={true}\n                        style={[labelTextStyle, it.labelStyle]}\n                        maxFontSizeMultiplier={it.labelMaxFontSizeMultiplier}\n                      >\n                        {it.label}\n                      </Text>\n                    </Card>\n                  </View>\n                )}\n                <FAB\n                  size={size}\n                  icon={it.icon}\n                  color={it.color}\n                  style={[\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: stackedFABBackgroundColor,\n                    },\n                    isV3 && { transform: [{ translateY: translations[i] }] },\n                    it.style,\n                  ]}\n                  accessibilityElementsHidden={true}\n                  theme={theme}\n                  onPress={(e) => {\n                    it.onPress(e);\n                    close();\n                  }}\n                  importantForAccessibility=\"no-hide-descendants\"\n                  testID={it.testID}\n                  visible={open}\n                  rippleColor={it.rippleColor}\n                />\n              </View>\n            );\n          })}\n        </View>\n        <FAB\n          onPress={(e) => {\n            onPress?.(e);\n            if (!toggleStackOnLongPress || open) {\n              toggle();\n            }\n          }}\n          onLongPress={(e) => {\n            if (!open || enableLongPressWhenStackOpened) {\n              onLongPress?.(e);\n              if (toggleStackOnLongPress) {\n                toggle();\n              }\n            }\n          }}\n          delayLongPress={delayLongPress}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          theme={theme}\n          visible={visible}\n          label={label}\n          testID={testID}\n          variant={variant}\n          rippleColor={rippleColor}\n        />\n      </View>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default FABGroup;\n\n// @component-docs ignore-next-line\nexport { FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}