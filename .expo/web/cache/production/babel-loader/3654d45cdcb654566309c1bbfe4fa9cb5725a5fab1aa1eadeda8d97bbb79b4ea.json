{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"disabled\",\"editable\",\"label\",\"error\",\"selectionColor\",\"cursorColor\",\"underlineColor\",\"underlineStyle\",\"activeUnderlineColor\",\"textColor\",\"dense\",\"style\",\"theme\",\"render\",\"multiline\",\"parentState\",\"innerRef\",\"onFocus\",\"forceFocus\",\"onBlur\",\"onChangeText\",\"onLayoutAnimatedText\",\"onLabelTextLayout\",\"onLeftAffixLayoutChange\",\"onRightAffixLayoutChange\",\"onInputLayout\",\"left\",\"right\",\"placeholderTextColor\",\"testID\",\"contentStyle\",\"scaledLabel\"],_excluded2=[\"fontSize\",\"lineHeight\",\"fontWeight\",\"height\",\"paddingHorizontal\",\"textAlign\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import NativeTextInput from\"react-native-web/dist/exports/TextInput\";import View from\"react-native-web/dist/exports/View\";import Animated from\"react-native-web/dist/exports/Animated\";import{Underline}from'./Addons/Underline';import{AdornmentSide,AdornmentType,InputMode}from'./Adornment/enums';import TextInputAdornment from'./Adornment/TextInputAdornment';import{getAdornmentConfig,getAdornmentStyleAdjustmentForNativeInput}from'./Adornment/TextInputAdornment';import{ADORNMENT_SIZE,LABEL_PADDING_TOP_DENSE,LABEL_WIGGLE_X_OFFSET,MAXIMIZED_LABEL_FONT_SIZE,MINIMIZED_LABEL_FONT_SIZE,MINIMIZED_LABEL_Y_OFFSET,MIN_DENSE_HEIGHT,MIN_DENSE_HEIGHT_WL}from'./constants';import{adjustPaddingFlat,calculateFlatAffixTopPosition,calculateFlatInputHorizontalPadding,calculateInputHeight,calculateLabelTopPosition,calculatePadding,getConstants,getFlatInputColors}from'./helpers';import InputLabel from'./Label/InputLabel';const TextInputFlat=_ref=>{let{disabled=false,editable=true,label,error=false,selectionColor:customSelectionColor,cursorColor,underlineColor,underlineStyle,activeUnderlineColor,textColor,dense,style,theme,render=props=>React.createElement(NativeTextInput,props),multiline=false,parentState,innerRef,onFocus,forceFocus,onBlur,onChangeText,onLayoutAnimatedText,onLabelTextLayout,onLeftAffixLayoutChange,onRightAffixLayoutChange,onInputLayout,left,right,placeholderTextColor,testID='text-input-flat',contentStyle,scaledLabel}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const isAndroid=false;const{colors,isV3,roundness}=theme;const font=isV3?theme.fonts.bodyLarge:theme.fonts.regular;const hasActiveOutline=parentState.focused||error;const{LABEL_PADDING_TOP,FLAT_INPUT_OFFSET,MIN_HEIGHT,MIN_WIDTH}=getConstants(isV3);const _ref2=StyleSheet.flatten(style)||{},{fontSize:fontSizeStyle,lineHeight:lineHeightStyle,fontWeight,height,paddingHorizontal,textAlign}=_ref2,viewStyle=_objectWithoutPropertiesLoose(_ref2,_excluded2);const fontSize=fontSizeStyle||MAXIMIZED_LABEL_FONT_SIZE;const lineHeight=lineHeightStyle||(true?fontSize*1.2:undefined);const isPaddingHorizontalPassed=paddingHorizontal!==undefined&&typeof paddingHorizontal==='number';const adornmentConfig=getAdornmentConfig({left,right});let{paddingLeft,paddingRight}=calculateFlatInputHorizontalPadding({adornmentConfig,isV3});if(isPaddingHorizontalPassed){paddingLeft=paddingHorizontal;paddingRight=paddingHorizontal;}const{leftLayout,rightLayout}=parentState;const rightAffixWidth=right?rightLayout.width||ADORNMENT_SIZE:ADORNMENT_SIZE;const leftAffixWidth=left?leftLayout.width||ADORNMENT_SIZE:ADORNMENT_SIZE;const adornmentStyleAdjustmentForNativeInput=getAdornmentStyleAdjustmentForNativeInput({adornmentConfig,rightAffixWidth,leftAffixWidth,paddingHorizontal,inputOffset:FLAT_INPUT_OFFSET,mode:InputMode.Flat,isV3});const{inputTextColor,activeColor,underlineColorCustom,placeholderColor,errorColor,backgroundColor,selectionColor}=getFlatInputColors({underlineColor,activeUnderlineColor,customSelectionColor,textColor,disabled,error,theme});const containerStyle={backgroundColor,borderTopLeftRadius:theme.roundness,borderTopRightRadius:theme.roundness};const labelScale=MINIMIZED_LABEL_FONT_SIZE/fontSize;const fontScale=MAXIMIZED_LABEL_FONT_SIZE/fontSize;const labelWidth=parentState.labelLayout.width;const labelHeight=parentState.labelLayout.height;const labelHalfWidth=labelWidth/2;const labelHalfHeight=labelHeight/2;const baseLabelTranslateX=(I18nManager.getConstants().isRTL?1:-1)*(labelHalfWidth-labelScale*labelWidth/2)+(1-labelScale)*(I18nManager.getConstants().isRTL?-1:1)*paddingLeft;const minInputHeight=dense?(label?MIN_DENSE_HEIGHT_WL:MIN_DENSE_HEIGHT)-LABEL_PADDING_TOP_DENSE:MIN_HEIGHT-LABEL_PADDING_TOP;const inputHeight=calculateInputHeight(labelHeight,height,minInputHeight);const topPosition=calculateLabelTopPosition(labelHeight,inputHeight,multiline&&height?0:!height?minInputHeight/2:0);if(height&&typeof height!=='number'){console.warn('Currently we support only numbers in height prop');}const paddingSettings={height:height?+height:null,labelHalfHeight,offset:FLAT_INPUT_OFFSET,multiline:multiline?multiline:null,dense:dense?dense:null,topPosition,fontSize,lineHeight,label,scale:fontScale,isAndroid,styles:StyleSheet.flatten(dense?styles.inputFlatDense:styles.inputFlat)};const pad=calculatePadding(paddingSettings);const paddingFlat=adjustPaddingFlat(Object.assign({},paddingSettings,{pad}));const baseLabelTranslateY=-labelHalfHeight-(topPosition+MINIMIZED_LABEL_Y_OFFSET);const{current:placeholderOpacityAnims}=React.useRef([new Animated.Value(0),new Animated.Value(1)]);const placeholderOpacity=hasActiveOutline?parentState.labeled:placeholderOpacityAnims[parentState.labelLayout.measured?1:0];const placeholderTextColorBasedOnState=parentState.displayPlaceholder?placeholderTextColor??placeholderColor:'transparent';const minHeight=height||(dense?label?MIN_DENSE_HEIGHT_WL:MIN_DENSE_HEIGHT:MIN_HEIGHT);const flatHeight=inputHeight+(!height?dense?LABEL_PADDING_TOP_DENSE:LABEL_PADDING_TOP:0);const iconTopPosition=(flatHeight-ADORNMENT_SIZE)/2;const leftAffixTopPosition=leftLayout.height?calculateFlatAffixTopPosition(Object.assign({height:flatHeight},paddingFlat,{affixHeight:leftLayout.height})):null;const rightAffixTopPosition=rightLayout.height?calculateFlatAffixTopPosition(Object.assign({height:flatHeight},paddingFlat,{affixHeight:rightLayout.height})):null;const labelProps={label,onLayoutAnimatedText,onLabelTextLayout,placeholderOpacity,labelError:error,placeholderStyle:styles.placeholder,baseLabelTranslateY,baseLabelTranslateX,font,fontSize,lineHeight,fontWeight,labelScale,wiggleOffsetX:LABEL_WIGGLE_X_OFFSET,topPosition,paddingLeft:isAndroid?I18nManager.isRTL?paddingRight:paddingLeft:paddingLeft,paddingRight:isAndroid?I18nManager.isRTL?paddingLeft:paddingRight:paddingRight,hasActiveOutline,activeColor,placeholderColor,errorColor,roundness,maxFontSizeMultiplier:rest.maxFontSizeMultiplier,testID,contentStyle,inputContainerLayout:parentState.inputContainerLayout,labelTextLayout:parentState.labelTextLayout,opacity:parentState.value||parentState.focused?parentState.labelLayout.measured?1:0:1,isV3};const affixTopPosition={[AdornmentSide.Left]:leftAffixTopPosition,[AdornmentSide.Right]:rightAffixTopPosition};const onAffixChange={[AdornmentSide.Left]:onLeftAffixLayoutChange,[AdornmentSide.Right]:onRightAffixLayoutChange};let adornmentProps={paddingHorizontal,adornmentConfig,forceFocus,topPosition:{[AdornmentType.Affix]:affixTopPosition,[AdornmentType.Icon]:iconTopPosition},onAffixChange,isTextInputFocused:parentState.focused,maxFontSizeMultiplier:rest.maxFontSizeMultiplier,disabled};if(adornmentConfig.length){adornmentProps=Object.assign({},adornmentProps,{left,right,textStyle:Object.assign({},font,{fontSize,lineHeight,fontWeight}),visible:parentState.labeled});}return React.createElement(View,{style:[containerStyle,viewStyle]},React.createElement(Underline,{style:underlineStyle,hasActiveOutline:hasActiveOutline,parentState:parentState,underlineColorCustom:underlineColorCustom,error:error,colors:colors,activeColor:activeColor,theme:theme}),React.createElement(View,{onLayout:onInputLayout,style:[styles.labelContainer,{minHeight}]},!isAndroid&&multiline&&!!label&&!disabled&&React.createElement(View,{testID:\"patch-container\",pointerEvents:\"none\",style:[StyleSheet.absoluteFill,dense?styles.densePatchContainer:styles.patchContainer,{backgroundColor:viewStyle.backgroundColor||containerStyle.backgroundColor,left:paddingLeft,right:paddingRight}]}),label?React.createElement(InputLabel,_extends({labeled:parentState.labeled,error:parentState.error,focused:parentState.focused,scaledLabel:scaledLabel,wiggle:Boolean(parentState.value&&labelProps.labelError),labelLayoutMeasured:parentState.labelLayout.measured,labelLayoutWidth:parentState.labelLayout.width,labelLayoutHeight:parentState.labelLayout.height},labelProps)):null,render===null||render===void 0?void 0:render(Object.assign({},rest,{ref:innerRef,onChangeText,placeholder:rest.placeholder,editable:!disabled&&editable,selectionColor,cursorColor:typeof cursorColor==='undefined'?activeColor:cursorColor,placeholderTextColor:placeholderTextColorBasedOnState,onFocus,onBlur,underlineColorAndroid:'transparent',multiline,style:[styles.input,multiline&&height?{height:flatHeight}:{},paddingFlat,Object.assign({paddingLeft,paddingRight},font,{fontSize,lineHeight,fontWeight,color:inputTextColor,textAlignVertical:multiline?'top':'center',textAlign:textAlign?textAlign:I18nManager.getConstants().isRTL?'right':'left',minWidth:Math.min(parentState.labelTextLayout.width+2*FLAT_INPUT_OFFSET,MIN_WIDTH)}),true&&{outline:'none'},adornmentStyleAdjustmentForNativeInput,contentStyle],testID}))),React.createElement(TextInputAdornment,adornmentProps));};export default TextInputFlat;const styles=StyleSheet.create({placeholder:{position:'absolute',left:0},labelContainer:{paddingTop:0,paddingBottom:0,flexGrow:1},input:{margin:0,flexGrow:1},inputFlat:{paddingTop:24,paddingBottom:4},inputFlatDense:{paddingTop:22,paddingBottom:2},patchContainer:{height:24,zIndex:2},densePatchContainer:{height:22,zIndex:2}});","map":{"version":3,"names":["React","I18nManager","Platform","StyleSheet","NativeTextInput","View","Animated","Underline","AdornmentSide","AdornmentType","InputMode","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","ADORNMENT_SIZE","LABEL_PADDING_TOP_DENSE","LABEL_WIGGLE_X_OFFSET","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_Y_OFFSET","MIN_DENSE_HEIGHT","MIN_DENSE_HEIGHT_WL","adjustPaddingFlat","calculateFlatAffixTopPosition","calculateFlatInputHorizontalPadding","calculateInputHeight","calculateLabelTopPosition","calculatePadding","getConstants","getFlatInputColors","InputLabel","TextInputFlat","_ref","disabled","editable","label","error","selectionColor","customSelectionColor","cursorColor","underlineColor","underlineStyle","activeUnderlineColor","textColor","dense","style","theme","render","props","createElement","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLabelTextLayout","onLeftAffixLayoutChange","onRightAffixLayoutChange","onInputLayout","left","right","placeholderTextColor","testID","contentStyle","scaledLabel","rest","_objectWithoutPropertiesLoose","_excluded","isAndroid","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","MIN_WIDTH","_ref2","flatten","fontSize","fontSizeStyle","lineHeight","lineHeightStyle","fontWeight","height","paddingHorizontal","textAlign","viewStyle","_excluded2","undefined","isPaddingHorizontalPassed","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","mode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","containerStyle","borderTopLeftRadius","borderTopRightRadius","labelScale","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","Object","assign","baseLabelTranslateY","current","placeholderOpacityAnims","useRef","Value","placeholderOpacity","labeled","measured","placeholderTextColorBasedOnState","displayPlaceholder","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","labelError","placeholderStyle","placeholder","wiggleOffsetX","maxFontSizeMultiplier","inputContainerLayout","labelTextLayout","opacity","value","affixTopPosition","Left","Right","onAffixChange","adornmentProps","Affix","Icon","isTextInputFocused","length","textStyle","visible","onLayout","labelContainer","pointerEvents","absoluteFill","densePatchContainer","patchContainer","_extends","wiggle","Boolean","labelLayoutMeasured","labelLayoutWidth","labelLayoutHeight","ref","underlineColorAndroid","input","color","textAlignVertical","minWidth","Math","min","outline","create","position","paddingTop","paddingBottom","flexGrow","margin","zIndex"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\TextInput\\TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextInput as NativeTextInput,\n  TextStyle,\n  View,\n  Animated,\n} from 'react-native';\n\nimport { Underline } from './Addons/Underline';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport {\n  ADORNMENT_SIZE,\n  LABEL_PADDING_TOP_DENSE,\n  LABEL_WIGGLE_X_OFFSET,\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  MIN_DENSE_HEIGHT,\n  MIN_DENSE_HEIGHT_WL,\n} from './constants';\nimport {\n  adjustPaddingFlat,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  calculateInputHeight,\n  calculateLabelTopPosition,\n  calculatePadding,\n  getConstants,\n  getFlatInputColors,\n  Padding,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport type { ChildTextInputProps, RenderProps } from './types';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor,\n  underlineStyle,\n  activeUnderlineColor,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLabelTextLayout,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  onInputLayout,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-flat',\n  contentStyle,\n  scaledLabel,\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT, MIN_WIDTH } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    lineHeight: lineHeightStyle,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const lineHeight =\n    lineHeightStyle || (Platform.OS === 'web' ? fontSize * 1.2 : undefined);\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n    selectionColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) *\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const { current: placeholderOpacityAnims } = React.useRef([\n    new Animated.Value(0),\n    new Animated.Value(1),\n  ]);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n\n  // We don't want to show placeholder if label is displayed, because they overlap.\n  // Before it was done by setting placeholder's value to \" \", but inputs have the same props\n  // what causes broken styles due to: https://github.com/facebook/react-native/issues/48249\n  const placeholderTextColorBasedOnState = parentState.displayPlaceholder\n    ? placeholderTextColor ?? placeholderColor\n    : 'transparent';\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingLeft: isAndroid\n      ? I18nManager.isRTL\n        ? paddingRight\n        : paddingLeft\n      : paddingLeft,\n    paddingRight: isAndroid\n      ? I18nManager.isRTL\n        ? paddingLeft\n        : paddingRight\n      : paddingRight,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    inputContainerLayout: parentState.inputContainerLayout,\n    labelTextLayout: parentState.labelTextLayout,\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n    isV3,\n  };\n\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        style={underlineStyle}\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n        theme={theme}\n      />\n      <View\n        onLayout={onInputLayout}\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && !disabled && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        {label ? (\n          <InputLabel\n            labeled={parentState.labeled}\n            error={parentState.error}\n            focused={parentState.focused}\n            scaledLabel={scaledLabel}\n            wiggle={Boolean(parentState.value && labelProps.labelError)}\n            labelLayoutMeasured={parentState.labelLayout.measured}\n            labelLayoutWidth={parentState.labelLayout.width}\n            labelLayoutHeight={parentState.labelLayout.height}\n            {...labelProps}\n          />\n        ) : null}\n        {render?.({\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: rest.placeholder,\n          editable: !disabled && editable,\n          selectionColor,\n          cursorColor:\n            typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n          placeholderTextColor: placeholderTextColorBasedOnState,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            multiline && height ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              paddingLeft,\n              paddingRight,\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n              minWidth: Math.min(\n                parentState.labelTextLayout.width + 2 * FLAT_INPUT_OFFSET,\n                MIN_WIDTH\n              ),\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n            contentStyle,\n          ],\n          testID,\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    flexGrow: 1,\n  },\n  input: {\n    margin: 0,\n    flexGrow: 1,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}