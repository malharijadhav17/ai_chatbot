{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"icon\",\"label\",\"background\",\"accessibilityLabel\",\"accessibilityState\",\"color\",\"rippleColor\",\"disabled\",\"onPress\",\"onLongPress\",\"delayLongPress\",\"theme\",\"style\",\"visible\",\"uppercase\",\"testID\",\"animateFrom\",\"extended\",\"iconMode\",\"variant\",\"labelMaxFontSizeMultiplier\"],_excluded2=[\"backgroundColor\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{getCombinedStyles,getFABColors}from'./utils';import{useInternalTheme}from'../../core/theming';import Icon from'../Icon';import Surface from'../Surface';import TouchableRipple from'../TouchableRipple/TouchableRipple';import AnimatedText from'../Typography/AnimatedText';const SIZE=56;const SCALE=0.9;const AnimatedFAB=_ref=>{let{icon,label,background,accessibilityLabel=label,accessibilityState,color:customColor,rippleColor:customRippleColor,disabled,onPress,onLongPress,delayLongPress,theme:themeOverrides,style,visible=true,uppercase:uppercaseProp,testID='animated-fab',animateFrom='right',extended=false,iconMode='dynamic',variant='primary',labelMaxFontSizeMultiplier}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const theme=useInternalTheme(themeOverrides);const uppercase=uppercaseProp??!theme.isV3;const isIOS=false;const isAnimatedFromRight=animateFrom==='right';const isIconStatic=iconMode==='static';const{isRTL}=I18nManager;const{current:visibility}=React.useRef(new Animated.Value(visible?1:0));const{current:animFAB}=React.useRef(new Animated.Value(0));const{isV3,animation}=theme;const{scale}=animation;const[textWidth,setTextWidth]=React.useState(0);const[textHeight,setTextHeight]=React.useState(0);const borderRadius=SIZE/(isV3?3.5:2);React.useEffect(()=>{if(visible){Animated.timing(visibility,{toValue:1,duration:200*scale,useNativeDriver:true}).start();}else{Animated.timing(visibility,{toValue:0,duration:150*scale,useNativeDriver:true}).start();}},[visible,scale,visibility]);const _ref3=StyleSheet.flatten(style)||{},{backgroundColor:customBackgroundColor}=_ref3,restStyle=_objectWithoutPropertiesLoose(_ref3,_excluded2);const{backgroundColor,foregroundColor}=getFABColors({theme,variant,disabled,customColor,customBackgroundColor});const rippleColor=customRippleColor||color(foregroundColor).alpha(0.12).rgb().string();const extendedWidth=textWidth+SIZE+borderRadius;const distance=isAnimatedFromRight?-textWidth-borderRadius:textWidth+borderRadius;React.useEffect(()=>{Animated.timing(animFAB,{toValue:!extended?0:distance,duration:150*scale,useNativeDriver:true,easing:Easing.linear}).start();},[animFAB,scale,distance,extended]);const onTextLayout=_ref2=>{let{nativeEvent}=_ref2;const currentWidth=Math.ceil(nativeEvent.lines[0].width);const currentHeight=Math.ceil(nativeEvent.lines[0].height);if(currentWidth!==textWidth||currentHeight!==textHeight){setTextHeight(currentHeight);if(isIOS){return setTextWidth(currentWidth-12);}setTextWidth(currentWidth);}};const propForDirection=right=>{if(isAnimatedFromRight){return right;}return right.reverse();};const combinedStyles=getCombinedStyles({isAnimatedFromRight,isIconStatic,distance,animFAB});const font=isV3?theme.fonts.labelLarge:theme.fonts.medium;const textStyle=Object.assign({color:foregroundColor},font);const md2Elevation=disabled||!isIOS?0:6;const md3Elevation=disabled||!isIOS?0:3;const shadowStyle=isV3?styles.v3Shadow:styles.shadow;const baseStyle=[StyleSheet.absoluteFill,disabled?styles.disabled:shadowStyle];const newAccessibilityState=Object.assign({},accessibilityState,{disabled});return React.createElement(Surface,_extends({},rest,{testID:`${testID}-container`,style:[{opacity:visibility,transform:[{scale:visibility}],borderRadius},!isV3&&{elevation:md2Elevation},styles.container,restStyle]},isV3&&{elevation:md3Elevation},{theme:theme}),React.createElement(Animated.View,{style:[!isV3&&{transform:[{scaleY:animFAB.interpolate({inputRange:propForDirection([distance,0]),outputRange:propForDirection([SCALE,1])})}]},styles.standard,{borderRadius}]},React.createElement(View,{style:[StyleSheet.absoluteFill,styles.shadowWrapper]},React.createElement(Animated.View,{pointerEvents:\"none\",style:[baseStyle,{width:extendedWidth,opacity:animFAB.interpolate({inputRange:propForDirection([distance,0.9*distance,0]),outputRange:propForDirection([1,0.15,0])}),borderRadius}],testID:`${testID}-extended-shadow`}),React.createElement(Animated.View,{pointerEvents:\"none\",style:[baseStyle,{opacity:animFAB.interpolate({inputRange:propForDirection([distance,0.9*distance,0]),outputRange:propForDirection([0,0.85,1])}),width:SIZE,borderRadius:animFAB.interpolate({inputRange:propForDirection([distance,0]),outputRange:propForDirection([SIZE/(extendedWidth/SIZE),borderRadius])})},combinedStyles.absoluteFill],testID:`${testID}-shadow`})),React.createElement(Animated.View,{pointerEvents:\"box-none\",style:[styles.innerWrapper,{borderRadius}]},React.createElement(Animated.View,{style:[styles.standard,{width:extendedWidth,backgroundColor,borderRadius},combinedStyles.innerWrapper]},React.createElement(TouchableRipple,{borderless:true,background:background,onPress:onPress,onLongPress:onLongPress,delayLongPress:delayLongPress,rippleColor:rippleColor,disabled:disabled,accessibilityLabel:accessibilityLabel,accessibilityRole:\"button\",accessibilityState:newAccessibilityState,testID:testID,style:{borderRadius},theme:theme},React.createElement(View,{style:[styles.standard,{width:extendedWidth,borderRadius}]}))))),React.createElement(Animated.View,{style:[styles.iconWrapper,combinedStyles.iconWrapper],pointerEvents:\"none\"},React.createElement(Icon,{source:icon,size:24,color:foregroundColor,theme:theme})),React.createElement(View,{pointerEvents:\"none\"},React.createElement(AnimatedText,{variant:\"labelLarge\",numberOfLines:1,onTextLayout:isIOS?onTextLayout:undefined,ellipsizeMode:'tail',style:[{[isAnimatedFromRight||isRTL?'right':'left']:isIconStatic?textWidth-SIZE+borderRadius/(isV3?1:2):borderRadius},{minWidth:textWidth,top:-SIZE/2-textHeight/2,opacity:animFAB.interpolate({inputRange:propForDirection([distance,0.7*distance,0]),outputRange:propForDirection([1,0,0])}),transform:[{translateX:animFAB.interpolate({inputRange:propForDirection([distance,0]),outputRange:propForDirection([0,SIZE])})}]},styles.label,uppercase&&styles.uppercaseLabel,textStyle],theme:theme,testID:`${testID}-text`,maxFontSizeMultiplier:labelMaxFontSizeMultiplier},label)),!isIOS&&React.createElement(ScrollView,{style:styles.textPlaceholderContainer},React.createElement(AnimatedText,{variant:\"labelLarge\",numberOfLines:1,onTextLayout:onTextLayout,ellipsizeMode:'tail',style:[styles.label,uppercase&&styles.uppercaseLabel,textStyle],theme:theme},label)));};const styles=StyleSheet.create({standard:{height:SIZE},disabled:{elevation:0},container:{position:'absolute',backgroundColor:'transparent'},innerWrapper:{flexDirection:'row',overflow:'hidden'},shadowWrapper:{elevation:0},shadow:{elevation:6},v3Shadow:{elevation:3},iconWrapper:{alignItems:'center',justifyContent:'center',position:'absolute',height:SIZE,width:SIZE},label:{position:'absolute'},uppercaseLabel:{textTransform:'uppercase'},textPlaceholderContainer:{height:0,position:'absolute'}});export default AnimatedFAB;","map":{"version":3,"names":["React","Animated","Easing","I18nManager","Platform","ScrollView","StyleSheet","View","color","getCombinedStyles","getFABColors","useInternalTheme","Icon","Surface","TouchableRipple","AnimatedText","SIZE","SCALE","AnimatedFAB","_ref","icon","label","background","accessibilityLabel","accessibilityState","customColor","rippleColor","customRippleColor","disabled","onPress","onLongPress","delayLongPress","theme","themeOverrides","style","visible","uppercase","uppercaseProp","testID","animateFrom","extended","iconMode","variant","labelMaxFontSizeMultiplier","rest","_objectWithoutPropertiesLoose","_excluded","isV3","isIOS","isAnimatedFromRight","isIconStatic","isRTL","current","visibility","useRef","Value","animFAB","animation","scale","textWidth","setTextWidth","useState","textHeight","setTextHeight","borderRadius","useEffect","timing","toValue","duration","useNativeDriver","start","_ref3","flatten","backgroundColor","customBackgroundColor","restStyle","_excluded2","foregroundColor","alpha","rgb","string","extendedWidth","distance","easing","linear","onTextLayout","_ref2","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","font","fonts","labelLarge","medium","textStyle","Object","assign","md2Elevation","md3Elevation","shadowStyle","styles","v3Shadow","shadow","baseStyle","absoluteFill","newAccessibilityState","createElement","_extends","opacity","transform","elevation","container","scaleY","interpolate","inputRange","outputRange","standard","shadowWrapper","pointerEvents","innerWrapper","borderless","accessibilityRole","iconWrapper","source","size","numberOfLines","undefined","ellipsizeMode","minWidth","top","translateX","uppercaseLabel","maxFontSizeMultiplier","textPlaceholderContainer","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\FAB\\AnimatedFAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  AccessibilityState,\n  ColorValue,\n  NativeSyntheticEvent,\n  PressableAndroidRippleConfig,\n  TextLayoutEventData,\n} from 'react-native';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  I18nManager,\n  Platform,\n  ScrollView,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { getCombinedStyles, getFABColors } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $Omit, $RemoveChildren, ThemeProp } from '../../types';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport AnimatedText from '../Typography/AnimatedText';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\nexport type Props = $Omit<$RemoveChildren<typeof Surface>, 'mode'> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: PressableAndroidRippleConfig;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\n   */\n  delayLongPress?: number;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst SCALE = 0.9;\n\n/**\n * An animated, extending horizontally floating action button represents the primary action in an application.\n *\n * ## Usage\n * ```js\n * import React from 'react';\n * import {\n *   StyleProp,\n *   ViewStyle,\n *   Animated,\n *   StyleSheet,\n *   Platform,\n *   ScrollView,\n *   Text,\n *   SafeAreaView,\n *   I18nManager,\n * } from 'react-native';\n * import { AnimatedFAB } from 'react-native-paper';\n *\n * const MyComponent = ({\n *   animatedValue,\n *   visible,\n *   extended,\n *   label,\n *   animateFrom,\n *   style,\n *   iconMode,\n * }) => {\n *   const [isExtended, setIsExtended] = React.useState(true);\n *\n *   const isIOS = Platform.OS === 'ios';\n *\n *   const onScroll = ({ nativeEvent }) => {\n *     const currentScrollPosition =\n *       Math.floor(nativeEvent?.contentOffset?.y) ?? 0;\n *\n *     setIsExtended(currentScrollPosition <= 0);\n *   };\n *\n *   const fabStyle = { [animateFrom]: 16 };\n *\n *   return (\n *     <SafeAreaView style={styles.container}>\n *       <ScrollView onScroll={onScroll}>\n *         {[...new Array(100).keys()].map((_, i) => (\n *           <Text>{i}</Text>\n *         ))}\n *       </ScrollView>\n *       <AnimatedFAB\n *         icon={'plus'}\n *         label={'Label'}\n *         extended={isExtended}\n *         onPress={() => console.log('Pressed')}\n *         visible={visible}\n *         animateFrom={'right'}\n *         iconMode={'static'}\n *         style={[styles.fabStyle, style, fabStyle]}\n *       />\n *     </SafeAreaView>\n *   );\n * };\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flexGrow: 1,\n *   },\n *   fabStyle: {\n *     bottom: 16,\n *     right: 16,\n *     position: 'absolute',\n *   },\n * });\n * ```\n */\nconst AnimatedFAB = ({\n  icon,\n  label,\n  background,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  rippleColor: customRippleColor,\n  disabled,\n  onPress,\n  onLongPress,\n  delayLongPress,\n  theme: themeOverrides,\n  style,\n  visible = true,\n  uppercase: uppercaseProp,\n  testID = 'animated-fab',\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  variant = 'primary',\n  labelMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const uppercase: boolean = uppercaseProp ?? !theme.isV3;\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { isV3, animation } = theme;\n  const { scale } = animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  const borderRadius = SIZE / (isV3 ? 3.5 : 2);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const { backgroundColor: customBackgroundColor, ...restStyle } =\n    (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  const { backgroundColor, foregroundColor } = getFABColors({\n    theme,\n    variant,\n    disabled,\n    customColor,\n    customBackgroundColor,\n  });\n\n  const rippleColor =\n    customRippleColor || color(foregroundColor).alpha(0.12).rgb().string();\n\n  const extendedWidth = textWidth + SIZE + borderRadius;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - borderRadius\n    : textWidth + borderRadius;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: foregroundColor,\n    ...font,\n  };\n\n  const md2Elevation = disabled || !isIOS ? 0 : 6;\n  const md3Elevation = disabled || !isIOS ? 0 : 3;\n\n  const shadowStyle = isV3 ? styles.v3Shadow : styles.shadow;\n  const baseStyle = [\n    StyleSheet.absoluteFill,\n    disabled ? styles.disabled : shadowStyle,\n  ];\n\n  const newAccessibilityState = { ...accessibilityState, disabled };\n\n  return (\n    <Surface\n      {...rest}\n      testID={`${testID}-container`}\n      style={[\n        {\n          opacity: visibility,\n          transform: [\n            {\n              scale: visibility,\n            },\n          ],\n          borderRadius,\n        },\n        !isV3 && {\n          elevation: md2Elevation,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...(isV3 && { elevation: md3Elevation })}\n      theme={theme}\n    >\n      <Animated.View\n        style={[\n          !isV3 && {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n          { borderRadius },\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              baseStyle,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n                borderRadius,\n              },\n            ]}\n            testID={`${testID}-extended-shadow`}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              baseStyle,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    borderRadius,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n            testID={`${testID}-shadow`}\n          />\n        </View>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          style={[styles.innerWrapper, { borderRadius }]}\n        >\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n                borderRadius,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              background={background}\n              onPress={onPress}\n              onLongPress={onLongPress}\n              delayLongPress={delayLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              accessibilityRole=\"button\"\n              accessibilityState={newAccessibilityState}\n              testID={testID}\n              style={{ borderRadius }}\n              theme={theme}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                    borderRadius,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} theme={theme} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          variant=\"labelLarge\"\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? textWidth - SIZE + borderRadius / (isV3 ? 1 : 2)\n                : borderRadius,\n            },\n            {\n              minWidth: textWidth,\n              top: -SIZE / 2 - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }) as unknown as number,\n              // TODO: check\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            textStyle,\n          ]}\n          theme={theme}\n          testID={`${testID}-text`}\n          maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <AnimatedText\n            variant=\"labelLarge\"\n            numberOfLines={1}\n            onTextLayout={onTextLayout}\n            ellipsizeMode={'tail'}\n            style={[\n              styles.label,\n              uppercase && styles.uppercaseLabel,\n              textStyle,\n            ]}\n            theme={theme}\n          >\n            {label}\n          </AnimatedText>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n  },\n  v3Shadow: {\n    elevation: 3,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default AnimatedFAB;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}