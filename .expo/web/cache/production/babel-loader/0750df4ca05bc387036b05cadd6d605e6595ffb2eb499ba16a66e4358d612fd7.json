{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"statusBarHeight\",\"style\",\"dark\",\"mode\",\"elevated\",\"theme\",\"testID\"],_excluded2=[\"height\",\"elevation\",\"backgroundColor\",\"zIndex\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useSafeAreaInsets}from'react-native-safe-area-context';import{Appbar}from'./Appbar';import{DEFAULT_APPBAR_HEIGHT,getAppbarBackgroundColor,modeAppbarHeight,getAppbarBorders}from'./utils';import{useInternalTheme}from'../../core/theming';import shadow from'../../styles/shadow';const AppbarHeader=_ref=>{let{statusBarHeight,style,dark,mode=false?'center-aligned':'small',elevated=false,theme:themeOverrides,testID='appbar-header'}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const theme=useInternalTheme(themeOverrides);const{isV3}=theme;const flattenedStyle=StyleSheet.flatten(style);const _ref2=flattenedStyle||{},{height=isV3?modeAppbarHeight[mode]:DEFAULT_APPBAR_HEIGHT,elevation=isV3?elevated?2:0:4,backgroundColor:customBackground,zIndex=isV3&&elevated?1:0}=_ref2,restStyle=_objectWithoutPropertiesLoose(_ref2,_excluded2);const borderRadius=getAppbarBorders(restStyle);const backgroundColor=getAppbarBackgroundColor(theme,elevation,customBackground,elevated);const{top,left,right}=useSafeAreaInsets();return React.createElement(View,{testID:`${testID}-root-layer`,style:[{backgroundColor,zIndex,elevation,paddingTop:statusBarHeight??top,paddingHorizontal:Math.max(left,right)},borderRadius,shadow(elevation)]},React.createElement(Appbar,_extends({testID:testID,style:[{height,backgroundColor},styles.appbar,restStyle],dark:dark},isV3&&{mode},rest,{theme:theme})));};AppbarHeader.displayName='Appbar.Header';const styles=StyleSheet.create({appbar:{elevation:0}});export default AppbarHeader;export{AppbarHeader};","map":{"version":3,"names":["React","Platform","StyleSheet","View","useSafeAreaInsets","Appbar","DEFAULT_APPBAR_HEIGHT","getAppbarBackgroundColor","modeAppbarHeight","getAppbarBorders","useInternalTheme","shadow","AppbarHeader","_ref","statusBarHeight","style","dark","mode","elevated","theme","themeOverrides","testID","rest","_objectWithoutPropertiesLoose","_excluded","isV3","flattenedStyle","flatten","_ref2","height","elevation","backgroundColor","customBackground","zIndex","restStyle","_excluded2","borderRadius","top","left","right","createElement","paddingTop","paddingHorizontal","Math","max","_extends","styles","appbar","displayName","create"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Appbar\\AppbarHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { Appbar } from './Appbar';\nimport {\n  DEFAULT_APPBAR_HEIGHT,\n  getAppbarBackgroundColor,\n  modeAppbarHeight,\n  getAppbarBorders,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport shadow from '../../styles/shadow';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the Appbar.\n   * - `small` - Appbar with default height (64).\n   * - `medium` - Appbar with medium height (112).\n   * - `large` - Appbar with large height (152).\n   * - `center-aligned` - Appbar with default height and center-aligned title.\n   */\n  mode?: 'small' | 'medium' | 'large' | 'center-aligned';\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether Appbar background should have the elevation along with primary color pigment.\n   */\n  elevated?: boolean;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarHeader = ({\n  // Don't use default props since we check it to know whether we should use SafeAreaView\n  statusBarHeight,\n  style,\n  dark,\n  mode = Platform.OS === 'ios' ? 'center-aligned' : 'small',\n  elevated = false,\n  theme: themeOverrides,\n  testID = 'appbar-header',\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { isV3 } = theme;\n\n  const flattenedStyle = StyleSheet.flatten(style);\n  const {\n    height = isV3 ? modeAppbarHeight[mode] : DEFAULT_APPBAR_HEIGHT,\n    elevation = isV3 ? (elevated ? 2 : 0) : 4,\n    backgroundColor: customBackground,\n    zIndex = isV3 && elevated ? 1 : 0,\n    ...restStyle\n  } = (flattenedStyle || {}) as Exclude<typeof flattenedStyle, number> & {\n    height?: number;\n    elevation?: number;\n    backgroundColor?: ColorValue;\n    zIndex?: number;\n  };\n\n  const borderRadius = getAppbarBorders(restStyle);\n\n  const backgroundColor = getAppbarBackgroundColor(\n    theme,\n    elevation,\n    customBackground,\n    elevated\n  );\n\n  const { top, left, right } = useSafeAreaInsets();\n\n  return (\n    <View\n      testID={`${testID}-root-layer`}\n      style={[\n        {\n          backgroundColor,\n          zIndex,\n          elevation,\n          paddingTop: statusBarHeight ?? top,\n          paddingHorizontal: Math.max(left, right),\n        },\n        borderRadius,\n        shadow(elevation) as ViewStyle,\n      ]}\n    >\n      <Appbar\n        testID={testID}\n        style={[{ height, backgroundColor }, styles.appbar, restStyle]}\n        dark={dark}\n        {...(isV3 && {\n          mode,\n        })}\n        {...rest}\n        theme={theme}\n      />\n    </View>\n  );\n};\n\nAppbarHeader.displayName = 'Appbar.Header';\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default AppbarHeader;\n\n// @component-docs ignore-next-line\nexport { AppbarHeader };\n"],"mappings":"6hBAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,QAAA,qDAAAC,UAAA,uDAAAC,IAAA,0CAW9B,OAASC,iBAAiB,KAAQ,gCAAgC,CAElE,OAASC,MAAM,KAAQ,UAAU,CACjC,OACEC,qBAAqB,CACrBC,wBAAwB,CACxBC,gBAAgB,CAChBC,gBAAgB,KACX,SAAS,CAChB,OAASC,gBAAgB,KAAQ,oBAAoB,CACrD,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CAsExC,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAUR,IAVS,CAEpBC,eAAe,CACfC,KAAK,CACLC,IAAI,CACJC,IAAI,CAAG,MAAwB,gBAAgB,CAAG,OAAO,CACzDC,QAAQ,CAAG,KAAK,CAChBC,KAAK,CAAEC,cAAc,CACrBC,MAAM,CAAG,eAEJ,CAAC,CAAAR,IAAA,CADHS,IAAA,CAAAC,6BAAA,CACGV,IAAA,CAAAW,SAAA,EACN,KAAM,CAAAL,KAAK,CAAGT,gBAAgB,CAACU,cAAc,CAAC,CAC9C,KAAM,CAAEK,IAAK,CAAC,CAAGN,KAAK,CAEtB,KAAM,CAAAO,cAAc,CAAGxB,UAAU,CAACyB,OAAO,CAACZ,KAAK,CAAC,CAChD,MAAAa,KAAA,CAMKF,cAAc,EAAI,CAAC,CAKvB,CAXK,CACJG,MAAM,CAAGJ,IAAI,CAAGjB,gBAAgB,CAACS,IAAI,CAAC,CAAGX,qBAAqB,CAC9DwB,SAAS,CAAGL,IAAI,CAAIP,QAAQ,CAAG,CAAC,CAAG,CAAC,CAAI,CAAC,CACzCa,eAAe,CAAEC,gBAAgB,CACjCC,MAAM,CAAGR,IAAI,EAAIP,QAAQ,CAAG,CAAC,CAAG,CAElC,CAAC,CAAAU,KAAA,CADIM,SAAA,CAAAX,6BAAA,CAAAK,KAAA,CAAAO,UAAA,EAQL,KAAM,CAAAC,YAAY,CAAG3B,gBAAgB,CAACyB,SAAS,CAAC,CAEhD,KAAM,CAAAH,eAAe,CAAGxB,wBAAwB,CAC9CY,KAAK,CACLW,SAAS,CACTE,gBAAgB,CAChBd,QACF,CAAC,CAED,KAAM,CAAEmB,GAAG,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGnC,iBAAiB,CAAC,CAAC,CAEhD,MACE,CAAAJ,KAAA,CAAAwC,aAAA,CAACrC,IAAI,EACHkB,MAAM,CAAG,GAAEA,MAAO,aAAa,CAC/BN,KAAK,CAAE,CACL,CACEgB,eAAe,CACfE,MAAM,CACNH,SAAS,CACTW,UAAU,CAAE3B,eAAe,EAAIuB,GAAG,CAClCK,iBAAiB,CAAEC,IAAI,CAACC,GAAG,CAACN,IAAI,CAAEC,KAAK,CACzC,CAAC,CACDH,YAAY,CACZzB,MAAM,CAACmB,SAAS,CAAC,CACjB,EAEF9B,KAAA,CAAAwC,aAAA,CAACnC,MAAM,CAAAwC,QAAA,EACLxB,MAAM,CAAEA,MAAO,CACfN,KAAK,CAAE,CAAC,CAAEc,MAAM,CAAEE,eAAgB,CAAC,CAAEe,MAAM,CAACC,MAAM,CAAEb,SAAS,CAAE,CAC/DlB,IAAI,CAAEA,IAAK,EACNS,IAAI,EAAI,CACXR,IACF,CAAC,CACGK,IAAI,EACRH,KAAK,CAAEA,KAAM,EACd,CACG,CAAC,CAEX,CAAC,CAEDP,YAAY,CAACoC,WAAW,CAAG,eAAe,CAE1C,KAAM,CAAAF,MAAM,CAAG5C,UAAU,CAAC+C,MAAM,CAAC,CAC/BF,MAAM,CAAE,CACNjB,SAAS,CAAE,CACb,CACF,CAAC,CAAC,CAEF,cAAe,CAAAlB,YAAY,CAG3B,OAASA,YAAY","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}