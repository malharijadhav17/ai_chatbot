{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"mode\",\"dense\",\"disabled\",\"error\",\"multiline\",\"editable\",\"contentStyle\",\"render\",\"theme\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import NativeTextInput from\"react-native-web/dist/exports/TextInput\";import TextInputAffix from'./Adornment/TextInputAffix';import TextInputIcon from'./Adornment/TextInputIcon';import TextInputFlat from'./TextInputFlat';import TextInputOutlined from'./TextInputOutlined';import{useInternalTheme}from'../../core/theming';import{forwardRef}from'../../utils/forwardRef';import{roundLayoutSize}from'../../utils/roundLayoutSize';const BLUR_ANIMATION_DURATION=180;const FOCUS_ANIMATION_DURATION=150;const DefaultRenderer=props=>React.createElement(NativeTextInput,props);const TextInput=forwardRef((_ref,ref)=>{let{mode='flat',dense=false,disabled=false,error:errorProp=false,multiline=false,editable=true,contentStyle,render=DefaultRenderer,theme:themeOverrides}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const theme=useInternalTheme(themeOverrides);const isControlled=rest.value!==undefined;const validInputValue=isControlled?rest.value:rest.defaultValue;const{current:labeled}=React.useRef(new Animated.Value(validInputValue?0:1));const{current:error}=React.useRef(new Animated.Value(errorProp?1:0));const[focused,setFocused]=React.useState(false);const[displayPlaceholder,setDisplayPlaceholder]=React.useState(false);const[uncontrolledValue,setUncontrolledValue]=React.useState(validInputValue);const value=isControlled?rest.value:uncontrolledValue;const[labelTextLayout,setLabelTextLayout]=React.useState({width:33});const[inputContainerLayout,setInputContainerLayout]=React.useState({width:65});const[labelLayout,setLabelLayout]=React.useState({measured:false,width:0,height:0});const[leftLayout,setLeftLayout]=React.useState({width:null,height:null});const[rightLayout,setRightLayout]=React.useState({width:null,height:null});const timer=React.useRef();const root=React.useRef();const{scale}=theme.animation;React.useImperativeHandle(ref,()=>({focus:()=>{var _root$current;return(_root$current=root.current)===null||_root$current===void 0?void 0:_root$current.focus();},clear:()=>{var _root$current2;return(_root$current2=root.current)===null||_root$current2===void 0?void 0:_root$current2.clear();},setNativeProps:args=>{var _root$current3;return(_root$current3=root.current)===null||_root$current3===void 0?void 0:_root$current3.setNativeProps(args);},isFocused:()=>{var _root$current4;return((_root$current4=root.current)===null||_root$current4===void 0?void 0:_root$current4.isFocused())||false;},blur:()=>{var _root$current5;return(_root$current5=root.current)===null||_root$current5===void 0?void 0:_root$current5.blur();},forceFocus:()=>{var _root$current6;return(_root$current6=root.current)===null||_root$current6===void 0?void 0:_root$current6.focus();}}));React.useEffect(()=>{if(errorProp){Animated.timing(error,{toValue:1,duration:FOCUS_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}else{{Animated.timing(error,{toValue:0,duration:BLUR_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}}},[errorProp,scale,error]);React.useEffect(()=>{if(focused||!rest.label){if(rest.placeholder){timer.current=setTimeout(()=>setDisplayPlaceholder(true),50);}}else{setDisplayPlaceholder(false);}return()=>{if(timer.current){clearTimeout(timer.current);}};},[focused,rest.label,rest.placeholder]);React.useEffect(()=>{labeled.stopAnimation();if(value||focused){Animated.timing(labeled,{toValue:0,duration:BLUR_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}else{Animated.timing(labeled,{toValue:1,duration:FOCUS_ANIMATION_DURATION*scale,useNativeDriver:true}).start();}},[focused,value,labeled,scale]);const onLeftAffixLayoutChange=React.useCallback(event=>{const height=roundLayoutSize(event.nativeEvent.layout.height);const width=roundLayoutSize(event.nativeEvent.layout.width);if(width!==leftLayout.width||height!==leftLayout.height){setLeftLayout({width,height});}},[leftLayout.height,leftLayout.width]);const onRightAffixLayoutChange=React.useCallback(event=>{const width=roundLayoutSize(event.nativeEvent.layout.width);const height=roundLayoutSize(event.nativeEvent.layout.height);if(width!==rightLayout.width||height!==rightLayout.height){setRightLayout({width,height});}},[rightLayout.height,rightLayout.width]);const handleFocus=args=>{var _rest$onFocus;if(disabled||!editable){return;}setFocused(true);(_rest$onFocus=rest.onFocus)===null||_rest$onFocus===void 0?void 0:_rest$onFocus.call(rest,args);};const handleBlur=args=>{var _rest$onBlur;if(!editable){return;}setFocused(false);(_rest$onBlur=rest.onBlur)===null||_rest$onBlur===void 0?void 0:_rest$onBlur.call(rest,args);};const handleChangeText=value=>{var _rest$onChangeText;if(!editable||disabled){return;}if(!isControlled){setUncontrolledValue(value);}(_rest$onChangeText=rest.onChangeText)===null||_rest$onChangeText===void 0?void 0:_rest$onChangeText.call(rest,value);};const handleLayoutAnimatedText=React.useCallback(e=>{const width=roundLayoutSize(e.nativeEvent.layout.width);const height=roundLayoutSize(e.nativeEvent.layout.height);if(width!==labelLayout.width||height!==labelLayout.height){setLabelLayout({width,height,measured:true});}},[labelLayout.height,labelLayout.width]);const handleLabelTextLayout=React.useCallback(_ref2=>{let{nativeEvent}=_ref2;setLabelTextLayout({width:nativeEvent.lines.reduce((acc,line)=>acc+Math.ceil(line.width),0)});},[]);const handleInputContainerLayout=React.useCallback(_ref3=>{let{nativeEvent:{layout}}=_ref3;setInputContainerLayout({width:layout.width});},[]);const forceFocus=React.useCallback(()=>{var _root$current7;return(_root$current7=root.current)===null||_root$current7===void 0?void 0:_root$current7.focus();},[]);const{maxFontSizeMultiplier=1.5}=rest;const scaledLabel=!!(value||focused);if(mode==='outlined'){return React.createElement(TextInputOutlined,_extends({dense:dense,disabled:disabled,error:errorProp,multiline:multiline,editable:editable,render:render},rest,{theme:theme,value:value,parentState:{labeled,error,focused,displayPlaceholder,value,labelTextLayout,labelLayout,leftLayout,rightLayout,inputContainerLayout},innerRef:ref=>{root.current=ref;},onFocus:handleFocus,forceFocus:forceFocus,onBlur:handleBlur,onChangeText:handleChangeText,onLayoutAnimatedText:handleLayoutAnimatedText,onInputLayout:handleInputContainerLayout,onLabelTextLayout:handleLabelTextLayout,onLeftAffixLayoutChange:onLeftAffixLayoutChange,onRightAffixLayoutChange:onRightAffixLayoutChange,maxFontSizeMultiplier:maxFontSizeMultiplier,contentStyle:contentStyle,scaledLabel:scaledLabel}));}return React.createElement(TextInputFlat,_extends({dense:dense,disabled:disabled,error:errorProp,multiline:multiline,editable:editable,render:render},rest,{theme:theme,value:value,parentState:{labeled,error,focused,displayPlaceholder,value,labelTextLayout,labelLayout,leftLayout,rightLayout,inputContainerLayout},innerRef:ref=>{root.current=ref;},onFocus:handleFocus,forceFocus:forceFocus,onBlur:handleBlur,onInputLayout:handleInputContainerLayout,onChangeText:handleChangeText,onLayoutAnimatedText:handleLayoutAnimatedText,onLabelTextLayout:handleLabelTextLayout,onLeftAffixLayoutChange:onLeftAffixLayoutChange,onRightAffixLayoutChange:onRightAffixLayoutChange,maxFontSizeMultiplier:maxFontSizeMultiplier,contentStyle:contentStyle,scaledLabel:scaledLabel}));});TextInput.Icon=TextInputIcon;TextInput.Affix=TextInputAffix;export default TextInput;","map":{"version":3,"names":["React","Animated","NativeTextInput","TextInputAffix","TextInputIcon","TextInputFlat","TextInputOutlined","useInternalTheme","forwardRef","roundLayoutSize","BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","DefaultRenderer","props","createElement","TextInput","_ref","ref","mode","dense","disabled","error","errorProp","multiline","editable","contentStyle","render","theme","themeOverrides","rest","_objectWithoutPropertiesLoose","_excluded","isControlled","value","undefined","validInputValue","defaultValue","current","labeled","useRef","Value","focused","setFocused","useState","displayPlaceholder","setDisplayPlaceholder","uncontrolledValue","setUncontrolledValue","labelTextLayout","setLabelTextLayout","width","inputContainerLayout","setInputContainerLayout","labelLayout","setLabelLayout","measured","height","leftLayout","setLeftLayout","rightLayout","setRightLayout","timer","root","scale","animation","useImperativeHandle","focus","_root$current","clear","_root$current2","setNativeProps","args","_root$current3","isFocused","_root$current4","blur","_root$current5","forceFocus","_root$current6","useEffect","timing","toValue","duration","useNativeDriver","start","label","placeholder","setTimeout","clearTimeout","stopAnimation","onLeftAffixLayoutChange","useCallback","event","nativeEvent","layout","onRightAffixLayoutChange","handleFocus","_rest$onFocus","onFocus","call","handleBlur","_rest$onBlur","onBlur","handleChangeText","_rest$onChangeText","onChangeText","handleLayoutAnimatedText","e","handleLabelTextLayout","_ref2","lines","reduce","acc","line","Math","ceil","handleInputContainerLayout","_ref3","_root$current7","maxFontSizeMultiplier","scaledLabel","_extends","parentState","innerRef","onLayoutAnimatedText","onInputLayout","onLabelTextLayout","Icon","Affix"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\TextInput\\TextInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  TextInput as NativeTextInput,\n  TextStyle,\n  ViewStyle,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\n\nimport TextInputAffix, {\n  Props as TextInputAffixProps,\n} from './Adornment/TextInputAffix';\nimport TextInputIcon, {\n  Props as TextInputIconProps,\n} from './Adornment/TextInputIcon';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputOutlined from './TextInputOutlined';\nimport type { RenderProps, TextInputLabelProp } from './types';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport { forwardRef } from '../../utils/forwardRef';\nimport { roundLayoutSize } from '../../utils/roundLayoutSize';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type Props = React.ComponentPropsWithRef<typeof NativeTextInput> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors?.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text or component to use for the floating label.\n   */\n  label?: TextInputLabelProp;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input. On iOS, it sets both the selection color and cursor color.\n   * On Android, it sets only the selection color.\n   */\n  selectionColor?: string;\n  /**\n   * @platform Android only\n   * Cursor (or \"caret\") color of the input on Android.\n   * This property has no effect on iOS.\n   */\n  cursorColor?: string;\n  /**\n   * Inactive underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Active underline color of the input.\n   */\n  activeUnderlineColor?: string;\n  /**\n   * Inactive outline color of the input.\n   */\n  outlineColor?: string;\n  /**\n   * Active outline color of the input.\n   */\n  activeOutlineColor?: string;\n  /**\n   * Color of the text in the input.\n   */\n  textColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `height` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * @platform Android only\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Pass custom style directly to the input itself.\n   * Overrides input style\n   * Example: `paddingLeft`, `backgroundColor`\n   */\n  contentStyle?: StyleProp<TextStyle>;\n  /**\n   * Pass style to override the default style of outlined wrapper.\n   * Overrides style when mode is set to `outlined`\n   * Example: `borderRadius`, `borderColor`\n   */\n  outlineStyle?: StyleProp<ViewStyle>;\n  /**\n   * Pass style to override the default style of underlined wrapper.\n   * Overrides style when mode is set to `flat`\n   * Example: `borderRadius`, `borderColor`\n   */\n  underlineStyle?: StyleProp<ViewStyle>;\n};\n\ninterface CompoundedComponent\n  extends React.ForwardRefExoticComponent<\n    Props & React.RefAttributes<TextInputHandles>\n  > {\n  Icon: React.FunctionComponent<TextInputIconProps>;\n  Affix: React.FunctionComponent<Partial<TextInputAffixProps>>;\n}\n\ntype TextInputHandles = Pick<\n  NativeTextInput,\n  'focus' | 'clear' | 'blur' | 'isFocused' | 'setNativeProps'\n>;\n\nconst DefaultRenderer = (props: RenderProps) => <NativeTextInput {...props} />;\n\n/**\n * A component to allow users to input text.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState(\"\");\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\nconst TextInput = forwardRef<TextInputHandles, Props>(\n  (\n    {\n      mode = 'flat',\n      dense = false,\n      disabled = false,\n      error: errorProp = false,\n      multiline = false,\n      editable = true,\n      contentStyle,\n      render = DefaultRenderer,\n      theme: themeOverrides,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const isControlled = rest.value !== undefined;\n    const validInputValue = isControlled ? rest.value : rest.defaultValue;\n\n    const { current: labeled } = React.useRef<Animated.Value>(\n      new Animated.Value(validInputValue ? 0 : 1)\n    );\n    const { current: error } = React.useRef<Animated.Value>(\n      new Animated.Value(errorProp ? 1 : 0)\n    );\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [displayPlaceholder, setDisplayPlaceholder] =\n      React.useState<boolean>(false);\n    const [uncontrolledValue, setUncontrolledValue] = React.useState<\n      string | undefined\n    >(validInputValue);\n    // Use value from props instead of local state when input is controlled\n    const value = isControlled ? rest.value : uncontrolledValue;\n\n    const [labelTextLayout, setLabelTextLayout] = React.useState({\n      width: 33,\n    });\n\n    const [inputContainerLayout, setInputContainerLayout] = React.useState({\n      width: 65,\n    });\n\n    const [labelLayout, setLabelLayout] = React.useState<{\n      measured: boolean;\n      width: number;\n      height: number;\n    }>({\n      measured: false,\n      width: 0,\n      height: 0,\n    });\n    const [leftLayout, setLeftLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n    const [rightLayout, setRightLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n\n    const timer = React.useRef<NodeJS.Timeout | undefined>();\n\n    const root = React.useRef<NativeTextInput | undefined | null>();\n\n    const { scale } = theme.animation;\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => root.current?.focus(),\n      clear: () => root.current?.clear(),\n      setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n      isFocused: () => root.current?.isFocused() || false,\n      blur: () => root.current?.blur(),\n      forceFocus: () => root.current?.focus(),\n    }));\n\n    React.useEffect(() => {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (errorProp) {\n        // show error\n        Animated.timing(error, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // hide error\n        {\n          Animated.timing(error, {\n            toValue: 0,\n            duration: BLUR_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [errorProp, scale, error]);\n\n    React.useEffect(() => {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (focused || !rest.label) {\n        // If the user wants to use the contextMenu, when changing the placeholder, the contextMenu is closed\n        // This is a workaround to mitigate this behavior in scenarios where the placeholder is not specified.\n        if (rest.placeholder) {\n          // Display placeholder in a delay to offset the label animation\n          // If we show it immediately, they'll overlap and look ugly\n          timer.current = setTimeout(\n            () => setDisplayPlaceholder(true),\n            50\n          ) as unknown as NodeJS.Timeout;\n        }\n      } else {\n        // hidePlaceholder\n        setDisplayPlaceholder(false);\n      }\n\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n      };\n    }, [focused, rest.label, rest.placeholder]);\n\n    React.useEffect(() => {\n      labeled.stopAnimation();\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      if (value || focused) {\n        // minimize label\n        Animated.timing(labeled, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // restore label\n        Animated.timing(labeled, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      }\n    }, [focused, value, labeled, scale]);\n\n    const onLeftAffixLayoutChange = React.useCallback(\n      (event: LayoutChangeEvent) => {\n        const height = roundLayoutSize(event.nativeEvent.layout.height);\n        const width = roundLayoutSize(event.nativeEvent.layout.width);\n\n        if (width !== leftLayout.width || height !== leftLayout.height) {\n          setLeftLayout({\n            width,\n            height,\n          });\n        }\n      },\n      [leftLayout.height, leftLayout.width]\n    );\n\n    const onRightAffixLayoutChange = React.useCallback(\n      (event: LayoutChangeEvent) => {\n        const width = roundLayoutSize(event.nativeEvent.layout.width);\n        const height = roundLayoutSize(event.nativeEvent.layout.height);\n\n        if (width !== rightLayout.width || height !== rightLayout.height) {\n          setRightLayout({\n            width,\n            height,\n          });\n        }\n      },\n      [rightLayout.height, rightLayout.width]\n    );\n\n    const handleFocus = (args: any) => {\n      if (disabled || !editable) {\n        return;\n      }\n\n      setFocused(true);\n\n      rest.onFocus?.(args);\n    };\n\n    const handleBlur = (args: Object) => {\n      if (!editable) {\n        return;\n      }\n\n      setFocused(false);\n      rest.onBlur?.(args);\n    };\n\n    const handleChangeText = (value: string) => {\n      if (!editable || disabled) {\n        return;\n      }\n\n      if (!isControlled) {\n        // Keep track of value in local state when input is not controlled\n        setUncontrolledValue(value);\n      }\n      rest.onChangeText?.(value);\n    };\n\n    const handleLayoutAnimatedText = React.useCallback(\n      (e: LayoutChangeEvent) => {\n        const width = roundLayoutSize(e.nativeEvent.layout.width);\n        const height = roundLayoutSize(e.nativeEvent.layout.height);\n\n        if (width !== labelLayout.width || height !== labelLayout.height) {\n          setLabelLayout({\n            width,\n            height,\n            measured: true,\n          });\n        }\n      },\n      [labelLayout.height, labelLayout.width]\n    );\n\n    const handleLabelTextLayout = React.useCallback(\n      ({ nativeEvent }: NativeSyntheticEvent<TextLayoutEventData>) => {\n        setLabelTextLayout({\n          width: nativeEvent.lines.reduce(\n            (acc, line) => acc + Math.ceil(line.width),\n            0\n          ),\n        });\n      },\n      []\n    );\n\n    const handleInputContainerLayout = React.useCallback(\n      ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n        setInputContainerLayout({\n          width: layout.width,\n        });\n      },\n      []\n    );\n\n    const forceFocus = React.useCallback(() => root.current?.focus(), []);\n\n    const { maxFontSizeMultiplier = 1.5 } = rest;\n\n    const scaledLabel = !!(value || focused);\n\n    if (mode === 'outlined') {\n      return (\n        <TextInputOutlined\n          dense={dense}\n          disabled={disabled}\n          error={errorProp}\n          multiline={multiline}\n          editable={editable}\n          render={render}\n          {...rest}\n          theme={theme}\n          value={value}\n          parentState={{\n            labeled,\n            error,\n            focused,\n            displayPlaceholder,\n            value,\n            labelTextLayout,\n            labelLayout,\n            leftLayout,\n            rightLayout,\n            inputContainerLayout,\n          }}\n          innerRef={(ref) => {\n            root.current = ref;\n          }}\n          onFocus={handleFocus}\n          forceFocus={forceFocus}\n          onBlur={handleBlur}\n          onChangeText={handleChangeText}\n          onLayoutAnimatedText={handleLayoutAnimatedText}\n          onInputLayout={handleInputContainerLayout}\n          onLabelTextLayout={handleLabelTextLayout}\n          onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n          onRightAffixLayoutChange={onRightAffixLayoutChange}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n          contentStyle={contentStyle}\n          scaledLabel={scaledLabel}\n        />\n      );\n    }\n\n    return (\n      <TextInputFlat\n        dense={dense}\n        disabled={disabled}\n        error={errorProp}\n        multiline={multiline}\n        editable={editable}\n        render={render}\n        {...rest}\n        theme={theme}\n        value={value}\n        parentState={{\n          labeled,\n          error,\n          focused,\n          displayPlaceholder,\n          value,\n          labelTextLayout,\n          labelLayout,\n          leftLayout,\n          rightLayout,\n          inputContainerLayout,\n        }}\n        innerRef={(ref) => {\n          root.current = ref;\n        }}\n        onFocus={handleFocus}\n        forceFocus={forceFocus}\n        onBlur={handleBlur}\n        onInputLayout={handleInputContainerLayout}\n        onChangeText={handleChangeText}\n        onLayoutAnimatedText={handleLayoutAnimatedText}\n        onLabelTextLayout={handleLabelTextLayout}\n        onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={onRightAffixLayoutChange}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        contentStyle={contentStyle}\n        scaledLabel={scaledLabel}\n      />\n    );\n  }\n) as CompoundedComponent;\n// @component ./Adornment/TextInputIcon.tsx\nTextInput.Icon = TextInputIcon;\n\n// @component ./Adornment/TextInputAffix.tsx\n// @ts-ignore Types of property 'theme' are incompatible.\nTextInput.Affix = TextInputAffix;\n\nexport default TextInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}