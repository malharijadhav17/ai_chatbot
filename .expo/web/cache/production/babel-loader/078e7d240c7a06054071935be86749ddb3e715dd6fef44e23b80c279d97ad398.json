{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"numeric\",\"children\",\"onPress\",\"sortDirection\",\"textStyle\",\"style\",\"theme\",\"numberOfLines\",\"maxFontSizeMultiplier\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Pressable from\"react-native-web/dist/exports/Pressable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{useInternalTheme}from'../../core/theming';import MaterialCommunityIcon from'../MaterialCommunityIcon';import Text from'../Typography/Text';const DataTableTitle=_ref=>{var _theme$colors;let{numeric,children,onPress,sortDirection,textStyle,style,theme:themeOverrides,numberOfLines=1,maxFontSizeMultiplier}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const theme=useInternalTheme(themeOverrides);const{current:spinAnim}=React.useRef(new Animated.Value(sortDirection==='ascending'?0:1));React.useEffect(()=>{Animated.timing(spinAnim,{toValue:sortDirection==='ascending'?0:1,duration:150,useNativeDriver:true}).start();},[sortDirection,spinAnim]);const textColor=theme.isV3?theme.colors.onSurface:theme===null||theme===void 0||(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.text;const alphaTextColor=color(textColor).alpha(0.6).rgb().string();const spin=spinAnim.interpolate({inputRange:[0,1],outputRange:['0deg','180deg']});const icon=sortDirection?React.createElement(Animated.View,{style:[styles.icon,{transform:[{rotate:spin}]}]},React.createElement(MaterialCommunityIcon,{name:\"arrow-up\",size:16,color:textColor,direction:I18nManager.getConstants().isRTL?'rtl':'ltr'})):null;return React.createElement(Pressable,_extends({disabled:!onPress,onPress:onPress},rest,{style:[styles.container,numeric&&styles.right,style]}),icon,React.createElement(Text,{style:[styles.cell,{maxHeight:24*numberOfLines},numberOfLines>1?numeric?I18nManager.getConstants().isRTL?styles.leftText:styles.rightText:styles.centerText:{},sortDirection?styles.sorted:{color:alphaTextColor},textStyle],numberOfLines:numberOfLines,maxFontSizeMultiplier:maxFontSizeMultiplier},children));};DataTableTitle.displayName='DataTable.Title';const styles=StyleSheet.create({container:{flex:1,flexDirection:'row',alignContent:'center',paddingVertical:12},rightText:{textAlign:'right'},leftText:{textAlign:'left'},centerText:{textAlign:'center'},right:{justifyContent:'flex-end'},cell:{lineHeight:24,fontSize:12,fontWeight:'500',alignItems:'center'},sorted:{marginLeft:8},icon:{height:24,justifyContent:'center'}});export default DataTableTitle;export{DataTableTitle};","map":{"version":3,"names":["React","Animated","I18nManager","Pressable","StyleSheet","color","useInternalTheme","MaterialCommunityIcon","Text","DataTableTitle","_ref","_theme$colors","numeric","children","onPress","sortDirection","textStyle","style","theme","themeOverrides","numberOfLines","maxFontSizeMultiplier","rest","_objectWithoutPropertiesLoose","_excluded","current","spinAnim","useRef","Value","useEffect","timing","toValue","duration","useNativeDriver","start","textColor","isV3","colors","onSurface","text","alphaTextColor","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","createElement","View","styles","transform","rotate","name","size","direction","getConstants","isRTL","_extends","disabled","container","right","cell","maxHeight","leftText","rightText","centerText","sorted","displayName","create","flex","flexDirection","alignContent","paddingVertical","textAlign","justifyContent","lineHeight","fontSize","fontWeight","alignItems","marginLeft","height"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\DataTable\\DataTableTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  I18nManager,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof Pressable> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableTitle`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to display title in table header.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  textStyle,\n  style,\n  theme: themeOverrides,\n  numberOfLines = 1,\n  maxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme?.colors?.text;\n\n  const alphaTextColor = color(textColor).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={textColor}\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <Pressable\n      disabled={!onPress}\n      onPress={onPress}\n      {...rest}\n      style={[styles.container, numeric && styles.right, style]}\n    >\n      {icon}\n\n      <Text\n        style={[\n          styles.cell,\n          // height must scale with numberOfLines\n          { maxHeight: 24 * numberOfLines },\n          // if numberOfLines causes wrap, center is lost. Align directly, sensitive to numeric and RTL\n          numberOfLines > 1\n            ? numeric\n              ? I18nManager.getConstants().isRTL\n                ? styles.leftText\n                : styles.rightText\n              : styles.centerText\n            : {},\n          sortDirection ? styles.sorted : { color: alphaTextColor },\n          textStyle,\n        ]}\n        numberOfLines={numberOfLines}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      >\n        {children}\n      </Text>\n    </Pressable>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  rightText: {\n    textAlign: 'right',\n  },\n\n  leftText: {\n    textAlign: 'left',\n  },\n\n  centerText: {\n    textAlign: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default DataTableTitle;\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}