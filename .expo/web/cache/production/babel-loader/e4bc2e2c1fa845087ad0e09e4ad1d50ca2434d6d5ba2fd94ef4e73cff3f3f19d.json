{"ast":null,"code":"import color from'color';const getUnderlayColor=_ref=>{let{theme,calculatedRippleColor,underlayColor}=_ref;if(underlayColor!=null){return underlayColor;}if(theme.isV3){return color(calculatedRippleColor).rgb().string();}return color(calculatedRippleColor).fade(0.5).rgb().string();};const getRippleColor=_ref2=>{let{theme,rippleColor}=_ref2;if(rippleColor){return rippleColor;}if(theme.isV3){return color(theme.colors.onSurface).alpha(0.12).rgb().string();}if(theme.dark){return color(theme.colors.text).alpha(0.32).rgb().string();}return color(theme.colors.text).alpha(0.2).rgb().string();};export const getTouchableRippleColors=_ref3=>{let{theme,rippleColor,underlayColor}=_ref3;const calculatedRippleColor=getRippleColor({theme,rippleColor});return{calculatedRippleColor,calculatedUnderlayColor:getUnderlayColor({theme,calculatedRippleColor,underlayColor})};};","map":{"version":3,"names":["color","getUnderlayColor","_ref","theme","calculatedRippleColor","underlayColor","isV3","rgb","string","fade","getRippleColor","_ref2","rippleColor","colors","onSurface","alpha","dark","text","getTouchableRippleColors","_ref3","calculatedUnderlayColor"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\TouchableRipple\\utils.ts"],"sourcesContent":["import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\nconst getUnderlayColor = ({\n  theme,\n  calculatedRippleColor,\n  underlayColor,\n}: {\n  theme: InternalTheme;\n  calculatedRippleColor: ColorValue;\n  underlayColor?: string;\n}) => {\n  if (underlayColor != null) {\n    return underlayColor;\n  }\n\n  if (theme.isV3) {\n    return color(calculatedRippleColor).rgb().string();\n  }\n\n  return color(calculatedRippleColor).fade(0.5).rgb().string();\n};\n\nconst getRippleColor = ({\n  theme,\n  rippleColor,\n}: {\n  theme: InternalTheme;\n  rippleColor?: ColorValue;\n}) => {\n  if (rippleColor) {\n    return rippleColor;\n  }\n\n  if (theme.isV3) {\n    return color(theme.colors.onSurface).alpha(0.12).rgb().string();\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.32).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.2).rgb().string();\n};\n\nexport const getTouchableRippleColors = ({\n  theme,\n  rippleColor,\n  underlayColor,\n}: {\n  theme: InternalTheme;\n  rippleColor?: ColorValue;\n  underlayColor?: string;\n}) => {\n  const calculatedRippleColor = getRippleColor({ theme, rippleColor });\n  return {\n    calculatedRippleColor,\n    calculatedUnderlayColor: getUnderlayColor({\n      theme,\n      calculatedRippleColor,\n      underlayColor,\n    }),\n  };\n};\n"],"mappings":"AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAIzB,KAAM,CAAAC,gBAAgB,CAAGC,IAAA,EAQnB,IARoB,CACxBC,KAAK,CACLC,qBAAqB,CACrBC,aAKF,CAAC,CAAAH,IAAA,CACC,GAAIG,aAAa,EAAI,IAAI,CAAE,CACzB,MAAO,CAAAA,aAAa,CACtB,CAEA,GAAIF,KAAK,CAACG,IAAI,CAAE,CACd,MAAO,CAAAN,KAAK,CAACI,qBAAqB,CAAC,CAACG,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CACpD,CAEA,MAAO,CAAAR,KAAK,CAACI,qBAAqB,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC,CAACF,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAC9D,CAAC,CAED,KAAM,CAAAE,cAAc,CAAGC,KAAA,EAMjB,IANkB,CACtBR,KAAK,CACLS,WAIF,CAAC,CAAAD,KAAA,CACC,GAAIC,WAAW,CAAE,CACf,MAAO,CAAAA,WAAW,CACpB,CAEA,GAAIT,KAAK,CAACG,IAAI,CAAE,CACd,MAAO,CAAAN,KAAK,CAACG,KAAK,CAACU,MAAM,CAACC,SAAS,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,CAACR,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CACjE,CAEA,GAAIL,KAAK,CAACa,IAAI,CAAE,CACd,MAAO,CAAAhB,KAAK,CAACG,KAAK,CAACU,MAAM,CAACI,IAAI,CAAC,CAACF,KAAK,CAAC,IAAI,CAAC,CAACR,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAC5D,CACA,MAAO,CAAAR,KAAK,CAACG,KAAK,CAACU,MAAM,CAACI,IAAI,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAC3D,CAAC,CAED,MAAO,MAAM,CAAAU,wBAAwB,CAAGC,KAAA,EAQlC,IARmC,CACvChB,KAAK,CACLS,WAAW,CACXP,aAKF,CAAC,CAAAc,KAAA,CACC,KAAM,CAAAf,qBAAqB,CAAGM,cAAc,CAAC,CAAEP,KAAK,CAAES,WAAY,CAAC,CAAC,CACpE,MAAO,CACLR,qBAAqB,CACrBgB,uBAAuB,CAAEnB,gBAAgB,CAAC,CACxCE,KAAK,CACLC,qBAAqB,CACrBC,aACF,CAAC,CACH,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}