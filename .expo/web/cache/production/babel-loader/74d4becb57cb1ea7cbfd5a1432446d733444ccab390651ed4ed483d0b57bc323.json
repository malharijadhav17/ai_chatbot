{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"disabled\",\"onPress\",\"theme\",\"value\",\"status\",\"testID\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{RadioButtonContext}from'./RadioButtonGroup';import{handlePress,isChecked}from'./utils';import{useInternalTheme}from'../../core/theming';import{getAndroidSelectionControlColor}from'../Checkbox/utils';import TouchableRipple from'../TouchableRipple/TouchableRipple';const BORDER_WIDTH=2;const RadioButtonAndroid=_ref=>{let{disabled,onPress,theme:themeOverrides,value,status,testID}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const theme=useInternalTheme(themeOverrides);const{current:borderAnim}=React.useRef(new Animated.Value(BORDER_WIDTH));const{current:radioAnim}=React.useRef(new Animated.Value(1));const isFirstRendering=React.useRef(true);const{scale}=theme.animation;React.useEffect(()=>{if(isFirstRendering.current){isFirstRendering.current=false;return;}if(status==='checked'){radioAnim.setValue(1.2);Animated.timing(radioAnim,{toValue:1,duration:150*scale,useNativeDriver:true}).start();}else{borderAnim.setValue(10);Animated.timing(borderAnim,{toValue:BORDER_WIDTH,duration:150*scale,useNativeDriver:false}).start();}},[status,borderAnim,radioAnim,scale]);return React.createElement(RadioButtonContext.Consumer,null,context=>{const checked=isChecked({contextValue:context===null||context===void 0?void 0:context.value,status,value})==='checked';const{rippleColor,selectionControlColor}=getAndroidSelectionControlColor({theme,disabled,checked,customColor:rest.color,customUncheckedColor:rest.uncheckedColor});return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:disabled?undefined:event=>{handlePress({onPress,onValueChange:context===null||context===void 0?void 0:context.onValueChange,value,event});},accessibilityRole:\"radio\",accessibilityState:{disabled,checked},accessibilityLiveRegion:\"polite\",style:styles.container,testID:testID,theme:theme}),React.createElement(Animated.View,{style:[styles.radio,{borderColor:selectionControlColor,borderWidth:borderAnim}]},checked?React.createElement(View,{style:[StyleSheet.absoluteFill,styles.radioContainer]},React.createElement(Animated.View,{style:[styles.dot,{backgroundColor:selectionControlColor,transform:[{scale:radioAnim}]}]})):null));});};RadioButtonAndroid.displayName='RadioButton.Android';const styles=StyleSheet.create({container:{borderRadius:18},radioContainer:{alignItems:'center',justifyContent:'center'},radio:{height:20,width:20,borderRadius:10,margin:8},dot:{height:10,width:10,borderRadius:5}});export default RadioButtonAndroid;export{RadioButtonAndroid};","map":{"version":3,"names":["React","Animated","StyleSheet","View","RadioButtonContext","handlePress","isChecked","useInternalTheme","getAndroidSelectionControlColor","TouchableRipple","BORDER_WIDTH","RadioButtonAndroid","_ref","disabled","onPress","theme","themeOverrides","value","status","testID","rest","_objectWithoutPropertiesLoose","_excluded","current","borderAnim","useRef","Value","radioAnim","isFirstRendering","scale","animation","useEffect","setValue","timing","toValue","duration","useNativeDriver","start","createElement","Consumer","context","checked","contextValue","rippleColor","selectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","_extends","borderless","undefined","event","onValueChange","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","radio","borderColor","borderWidth","absoluteFill","radioContainer","dot","backgroundColor","transform","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\RadioButton\\RadioButtonAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport { getAndroidSelectionControlColor } from '../Checkbox/utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst RadioButtonAndroid = ({\n  disabled,\n  onPress,\n  theme: themeOverrides,\n  value,\n  status,\n  testID,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { current: borderAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(BORDER_WIDTH)\n  );\n\n  const { current: radioAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        const { rippleColor, selectionControlColor } =\n          getAndroidSelectionControlColor({\n            theme,\n            disabled,\n            checked,\n            customColor: rest.color,\n            customUncheckedColor: rest.uncheckedColor,\n          });\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : (event) => {\n                    handlePress({\n                      onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                      event,\n                    });\n                  }\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n            theme={theme}\n          >\n            <Animated.View\n              style={[\n                styles.radio,\n                {\n                  borderColor: selectionControlColor,\n                  borderWidth: borderAnim,\n                },\n              ]}\n            >\n              {checked ? (\n                <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n                  <Animated.View\n                    style={[\n                      styles.dot,\n                      {\n                        backgroundColor: selectionControlColor,\n                        transform: [{ scale: radioAnim }],\n                      },\n                    ]}\n                  />\n                </View>\n              ) : null}\n            </Animated.View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default RadioButtonAndroid;\n\n// @component-docs ignore-next-line\nexport { RadioButtonAndroid };\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}