{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"route\",\"style\",\"children\",\"borderless\",\"centered\",\"rippleColor\"],_excluded2=[\"key\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Pressable from\"react-native-web/dist/exports/Pressable\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{useSafeAreaInsets}from'react-native-safe-area-context';import{getActiveTintColor,getInactiveTintColor,getLabelColor}from'./utils';import{useInternalTheme}from'../../core/theming';import overlay from'../../styles/overlay';import{black,white}from'../../styles/themes/v2/colors';import useAnimatedValue from'../../utils/useAnimatedValue';import useAnimatedValueArray from'../../utils/useAnimatedValueArray';import useIsKeyboardShown from'../../utils/useIsKeyboardShown';import useLayout from'../../utils/useLayout';import Badge from'../Badge';import Icon from'../Icon';import Surface from'../Surface';import TouchableRipple from'../TouchableRipple/TouchableRipple';import Text from'../Typography/Text';const MIN_RIPPLE_SCALE=0.001;const MIN_TAB_WIDTH=96;const MAX_TAB_WIDTH=168;const BAR_HEIGHT=56;const OUTLINE_WIDTH=64;const Touchable=_ref=>{let{style,children,borderless,centered,rippleColor}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);return TouchableRipple.supported?React.createElement(TouchableRipple,_extends({},rest,{disabled:rest.disabled||undefined,borderless:borderless,centered:centered,rippleColor:rippleColor,style:style}),children):React.createElement(Pressable,_extends({style:style},rest),children);};const BottomNavigationBar=_ref2=>{let{navigationState,renderIcon,renderLabel,renderTouchable=_ref3=>{let{key}=_ref3,props=_objectWithoutPropertiesLoose(_ref3,_excluded2);return React.createElement(Touchable,_extends({key:key},props));},getLabelText=_ref4=>{let{route}=_ref4;return route.title;},getBadge=_ref5=>{let{route}=_ref5;return route.badge;},getColor=_ref6=>{let{route}=_ref6;return route.color;},getAccessibilityLabel=_ref7=>{let{route}=_ref7;return route.accessibilityLabel;},getTestID=_ref8=>{let{route}=_ref8;return route.testID;},activeColor,inactiveColor,keyboardHidesNavigationBar=false,style,activeIndicatorStyle,labeled=true,animationEasing,onTabPress,onTabLongPress,shifting:shiftingProp,safeAreaInsets,labelMaxFontSizeMultiplier=1,compact:compactProp,testID='bottom-navigation-bar',theme:themeOverrides}=_ref2;const theme=useInternalTheme(themeOverrides);const{bottom,left,right}=useSafeAreaInsets();const{scale}=theme.animation;const compact=compactProp??!theme.isV3;let shifting=shiftingProp??(theme.isV3?false:navigationState.routes.length>3);if(shifting&&navigationState.routes.length<2){shifting=false;console.warn('BottomNavigation.Bar needs at least 2 tabs to run shifting animation');}const visibleAnim=useAnimatedValue(1);const tabsAnims=useAnimatedValueArray(navigationState.routes.map((_,i)=>i===navigationState.index?1:0));const indexAnim=useAnimatedValue(navigationState.index);const rippleAnim=useAnimatedValue(MIN_RIPPLE_SCALE);const[layout,onLayout]=useLayout();const[keyboardVisible,setKeyboardVisible]=React.useState(false);const handleKeyboardShow=React.useCallback(()=>{setKeyboardVisible(true);Animated.timing(visibleAnim,{toValue:0,duration:150*scale,useNativeDriver:true}).start();},[scale,visibleAnim]);const handleKeyboardHide=React.useCallback(()=>{Animated.timing(visibleAnim,{toValue:1,duration:100*scale,useNativeDriver:true}).start(()=>{setKeyboardVisible(false);});},[scale,visibleAnim]);const animateToIndex=React.useCallback(index=>{rippleAnim.setValue(MIN_RIPPLE_SCALE);Animated.parallel([Animated.timing(rippleAnim,{toValue:1,duration:theme.isV3||shifting?400*scale:0,useNativeDriver:true}),...navigationState.routes.map((_,i)=>Animated.timing(tabsAnims[i],{toValue:i===index?1:0,duration:theme.isV3||shifting?150*scale:0,useNativeDriver:true,easing:animationEasing}))]).start(()=>{tabsAnims.map((tab,i)=>tab.setValue(i===index?1:0));indexAnim.setValue(index);rippleAnim.setValue(MIN_RIPPLE_SCALE);});},[rippleAnim,theme.isV3,shifting,scale,navigationState.routes,tabsAnims,animationEasing,indexAnim]);React.useEffect(()=>{animateToIndex(navigationState.index);},[]);useIsKeyboardShown({onShow:handleKeyboardShow,onHide:handleKeyboardHide});React.useEffect(()=>{animateToIndex(navigationState.index);},[navigationState.index,animateToIndex]);const eventForIndex=index=>{const event={route:navigationState.routes[index],defaultPrevented:false,preventDefault:()=>{event.defaultPrevented=true;}};return event;};const{routes}=navigationState;const{colors,dark:isDarkTheme,mode,isV3}=theme;const{backgroundColor:customBackground,elevation=4}=StyleSheet.flatten(style)||{};const approxBackgroundColor=customBackground?customBackground:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors===null||colors===void 0?void 0:colors.surface):colors===null||colors===void 0?void 0:colors.primary;const v2BackgroundColorInterpolation=shifting?indexAnim.interpolate({inputRange:routes.map((_,i)=>i),outputRange:routes.map(route=>getColor({route})||approxBackgroundColor)}):approxBackgroundColor;const backgroundColor=isV3?customBackground||theme.colors.elevation.level2:shifting?v2BackgroundColorInterpolation:approxBackgroundColor;const isDark=typeof approxBackgroundColor==='string'?!color(approxBackgroundColor).isLight():true;const textColor=isDark?white:black;const activeTintColor=getActiveTintColor({activeColor,defaultColor:textColor,theme});const inactiveTintColor=getInactiveTintColor({inactiveColor,defaultColor:textColor,theme});const touchColor=color(activeTintColor).alpha(0.12).rgb().string();const maxTabWidth=routes.length>3?MIN_TAB_WIDTH:MAX_TAB_WIDTH;const maxTabBarWidth=maxTabWidth*routes.length;const rippleSize=layout.width/4;const insets={left:(safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.left)??left,right:(safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.right)??right,bottom:(safeAreaInsets===null||safeAreaInsets===void 0?void 0:safeAreaInsets.bottom)??bottom};return React.createElement(Surface,_extends({},theme.isV3&&{elevation:0},{testID:testID,style:[!theme.isV3&&styles.elevation,styles.bar,keyboardHidesNavigationBar?{transform:[{translateY:visibleAnim.interpolate({inputRange:[0,1],outputRange:[layout.height,0]})}],position:keyboardVisible?'absolute':undefined}:null,style],pointerEvents:layout.measured?keyboardHidesNavigationBar&&keyboardVisible?'none':'auto':'none',onLayout:onLayout}),React.createElement(Animated.View,{style:[styles.barContent,{backgroundColor}],testID:`${testID}-content`},React.createElement(View,{style:[styles.items,{marginBottom:insets.bottom,marginHorizontal:Math.max(insets.left,insets.right)},compact&&{maxWidth:maxTabBarWidth}],accessibilityRole:'tablist',testID:`${testID}-content-wrapper`},shifting&&!isV3?React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.ripple,{top:(BAR_HEIGHT-rippleSize)/2,left:Math.min(layout.width,maxTabBarWidth)/routes.length*(navigationState.index+0.5)-rippleSize/2,height:rippleSize,width:rippleSize,borderRadius:rippleSize/2,backgroundColor:getColor({route:routes[navigationState.index]}),transform:[{scale:rippleAnim.interpolate({inputRange:[0,1],outputRange:[0,8]})}],opacity:rippleAnim.interpolate({inputRange:[0,MIN_RIPPLE_SCALE,0.3,1],outputRange:[0,0,1,1]})}],testID:`${testID}-content-ripple`}):null,routes.map((route,index)=>{const focused=navigationState.index===index;const active=tabsAnims[index];const scale=labeled&&shifting?active.interpolate({inputRange:[0,1],outputRange:[0.5,1]}):1;const translateY=labeled?shifting?active.interpolate({inputRange:[0,1],outputRange:[7,0]}):0:7;const activeOpacity=active;const inactiveOpacity=active.interpolate({inputRange:[0,1],outputRange:[1,0]});const v3ActiveOpacity=focused?1:0;const v3InactiveOpacity=shifting?inactiveOpacity:focused?0:1;const outlineScale=focused?active.interpolate({inputRange:[0,1],outputRange:[0.5,1]}):0;const badge=getBadge({route});const activeLabelColor=getLabelColor({tintColor:activeTintColor,hasColor:Boolean(activeColor),focused,defaultColor:textColor,theme});const inactiveLabelColor=getLabelColor({tintColor:inactiveTintColor,hasColor:Boolean(inactiveColor),focused,defaultColor:textColor,theme});const badgeStyle={top:!isV3?-2:typeof badge==='boolean'?4:2,right:(badge!=null&&typeof badge!=='boolean'?String(badge).length*-2:0)-(!isV3?2:0)};const isV3Shifting=isV3&&shifting&&labeled;const font=isV3?theme.fonts.labelMedium:{};return renderTouchable({key:route.key,route,borderless:true,centered:true,rippleColor:isV3?'transparent':touchColor,onPress:()=>onTabPress(eventForIndex(index)),onLongPress:()=>onTabLongPress===null||onTabLongPress===void 0?void 0:onTabLongPress(eventForIndex(index)),testID:getTestID({route}),accessibilityLabel:getAccessibilityLabel({route}),accessibilityRole:false?'button':'tab',accessibilityState:{selected:focused},style:[styles.item,isV3&&styles.v3Item],children:React.createElement(View,{pointerEvents:\"none\",style:isV3&&(labeled?styles.v3TouchableContainer:styles.v3NoLabelContainer)},React.createElement(Animated.View,{style:[styles.iconContainer,isV3&&styles.v3IconContainer,(!isV3||isV3Shifting)&&{transform:[{translateY}]}]},isV3&&focused&&React.createElement(Animated.View,{style:[styles.outline,{transform:[{scaleX:outlineScale}],backgroundColor:theme.colors.secondaryContainer},activeIndicatorStyle]}),React.createElement(Animated.View,{style:[styles.iconWrapper,isV3&&styles.v3IconWrapper,{opacity:isV3?v3ActiveOpacity:activeOpacity}]},renderIcon?renderIcon({route,focused:true,color:activeTintColor}):React.createElement(Icon,{source:route.focusedIcon,color:activeTintColor,size:24})),React.createElement(Animated.View,{style:[styles.iconWrapper,isV3&&styles.v3IconWrapper,{opacity:isV3?v3InactiveOpacity:inactiveOpacity}]},renderIcon?renderIcon({route,focused:false,color:inactiveTintColor}):React.createElement(Icon,{source:theme.isV3&&route.unfocusedIcon!==undefined?route.unfocusedIcon:route.focusedIcon,color:inactiveTintColor,size:24})),React.createElement(View,{style:[styles.badgeContainer,badgeStyle]},typeof badge==='boolean'?React.createElement(Badge,{visible:badge,size:isV3?6:8}):React.createElement(Badge,{visible:badge!=null,size:16},badge))),labeled?React.createElement(Animated.View,{style:[styles.labelContainer,!isV3&&{transform:[{scale}]}]},React.createElement(Animated.View,{style:[styles.labelWrapper,(!isV3||isV3Shifting)&&{opacity:activeOpacity}]},renderLabel?renderLabel({route,focused:true,color:activeLabelColor}):React.createElement(Text,{maxFontSizeMultiplier:labelMaxFontSizeMultiplier,variant:\"labelMedium\",style:[styles.label,Object.assign({color:activeLabelColor},font)]},getLabelText({route}))),shifting?null:React.createElement(Animated.View,{style:[styles.labelWrapper,{opacity:inactiveOpacity}]},renderLabel?renderLabel({route,focused:false,color:inactiveLabelColor}):React.createElement(Text,{maxFontSizeMultiplier:labelMaxFontSizeMultiplier,variant:\"labelMedium\",selectable:false,style:[styles.label,Object.assign({color:inactiveLabelColor},font)]},getLabelText({route})))):!isV3&&React.createElement(View,{style:styles.labelContainer}))});}))));};BottomNavigationBar.displayName='BottomNavigation.Bar';export default BottomNavigationBar;const styles=StyleSheet.create({bar:{left:0,right:0,bottom:0},barContent:{alignItems:'center',overflow:'hidden'},items:Object.assign({flexDirection:'row'},true?{width:'100%'}:null),item:{flex:1,paddingVertical:6},v3Item:{paddingVertical:0},ripple:{position:'absolute'},iconContainer:{height:24,width:24,marginTop:2,marginHorizontal:12,alignSelf:'center'},v3IconContainer:{height:32,width:32,marginBottom:4,marginTop:0,justifyContent:'center'},iconWrapper:Object.assign({},StyleSheet.absoluteFillObject,{alignItems:'center'}),v3IconWrapper:{top:4},labelContainer:{height:16,paddingBottom:2},labelWrapper:Object.assign({},StyleSheet.absoluteFillObject),label:Object.assign({fontSize:12,height:BAR_HEIGHT,textAlign:'center',backgroundColor:'transparent'},true?{whiteSpace:'nowrap',alignSelf:'center'}:null),badgeContainer:{position:'absolute',left:0},v3TouchableContainer:{paddingTop:12,paddingBottom:16},v3NoLabelContainer:{height:80,justifyContent:'center',alignItems:'center'},outline:{width:OUTLINE_WIDTH,height:OUTLINE_WIDTH/2,borderRadius:OUTLINE_WIDTH/4,alignSelf:'center'},elevation:{elevation:4}});","map":{"version":3,"names":["React","Animated","Platform","StyleSheet","Pressable","View","color","useSafeAreaInsets","getActiveTintColor","getInactiveTintColor","getLabelColor","useInternalTheme","overlay","black","white","useAnimatedValue","useAnimatedValueArray","useIsKeyboardShown","useLayout","Badge","Icon","Surface","TouchableRipple","Text","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","OUTLINE_WIDTH","Touchable","_ref","style","children","borderless","centered","rippleColor","rest","_objectWithoutPropertiesLoose","_excluded","supported","createElement","_extends","disabled","undefined","BottomNavigationBar","_ref2","navigationState","renderIcon","renderLabel","renderTouchable","_ref3","key","props","_excluded2","getLabelText","_ref4","route","title","getBadge","_ref5","badge","getColor","_ref6","getAccessibilityLabel","_ref7","accessibilityLabel","getTestID","_ref8","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","activeIndicatorStyle","labeled","animationEasing","onTabPress","onTabLongPress","shifting","shiftingProp","safeAreaInsets","labelMaxFontSizeMultiplier","compact","compactProp","theme","themeOverrides","bottom","left","right","scale","animation","isV3","routes","length","console","warn","visibleAnim","tabsAnims","map","_","i","index","indexAnim","rippleAnim","layout","onLayout","keyboardVisible","setKeyboardVisible","useState","handleKeyboardShow","useCallback","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToIndex","setValue","parallel","easing","tab","useEffect","onShow","onHide","eventForIndex","event","defaultPrevented","preventDefault","colors","dark","isDarkTheme","mode","backgroundColor","customBackground","elevation","flatten","approxBackgroundColor","surface","primary","v2BackgroundColorInterpolation","interpolate","inputRange","outputRange","level2","isDark","isLight","textColor","activeTintColor","defaultColor","inactiveTintColor","touchColor","alpha","rgb","string","maxTabWidth","maxTabBarWidth","rippleSize","width","insets","styles","bar","transform","translateY","height","position","pointerEvents","measured","barContent","items","marginBottom","marginHorizontal","Math","max","maxWidth","accessibilityRole","ripple","top","min","borderRadius","opacity","focused","active","activeOpacity","inactiveOpacity","v3ActiveOpacity","v3InactiveOpacity","outlineScale","activeLabelColor","tintColor","hasColor","Boolean","inactiveLabelColor","badgeStyle","String","isV3Shifting","font","fonts","labelMedium","onPress","onLongPress","accessibilityState","selected","item","v3Item","v3TouchableContainer","v3NoLabelContainer","iconContainer","v3IconContainer","outline","scaleX","secondaryContainer","iconWrapper","v3IconWrapper","source","focusedIcon","size","unfocusedIcon","badgeContainer","visible","labelContainer","labelWrapper","maxFontSizeMultiplier","variant","label","Object","assign","selectable","displayName","create","alignItems","overflow","flexDirection","flex","paddingVertical","marginTop","alignSelf","justifyContent","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace","paddingTop"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\BottomNavigation\\BottomNavigationBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  EasingFunction,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  Pressable,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport {\n  getActiveTintColor,\n  getInactiveTintColor,\n  getLabelColor,\n} from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport useAnimatedValue from '../../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport useIsKeyboardShown from '../../utils/useIsKeyboardShown';\nimport useLayout from '../../utils/useLayout';\nimport Badge from '../Badge';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { Props as TouchableRippleProps } from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\ntype BaseRoute = {\n  key: string;\n  title?: string;\n  focusedIcon?: IconSource;\n  unfocusedIcon?: IconSource;\n  badge?: string | number | boolean;\n  /**\n   * @deprecated In v5.x works only with theme version 2.\n   */\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n  lazy?: boolean;\n};\n\ntype NavigationState<Route extends BaseRoute> = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps<Route extends BaseRoute> = TouchableRippleProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: ColorValue;\n};\n\nexport type Props<Route extends BaseRoute> = {\n  /**\n   * Whether the shifting style is used, the active tab icon shifts up to show the label and the inactive tabs won't have a label.\n   *\n   * By default, this is `false` with theme version 3 and `true` when you have more than 3 tabs.\n   * Pass `shifting={false}` to explicitly disable this animation, or `shifting={true}` to always use this animation.\n   * Note that you need at least 2 tabs be able to run this animation.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * Whether tabs should be spread across the entire width.\n   */\n  compact?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number representing the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `focusedIcon`:  icon to use as the focused tab icon, can be a string, an image source or a react component @renamed Renamed from 'icon' to 'focusedIcon' in v5.x\n   * - `unfocusedIcon`:  icon to use as the unfocused tab icon, can be a string, an image source or a react component @supported Available in v5.x with theme version 3\n   * - `color`: color to use as background color for shifting bottom navigation @deprecatedProperty In v5.x works only with theme version 2.\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Favorites', focusedIcon: 'heart', unfocusedIcon: 'heart-outline'},\n   *     { key: 'albums', title: 'Albums', focusedIcon: 'album' },\n   *     { key: 'recents', title: 'Recents', focusedIcon: 'history' },\n   *     { key: 'notifications', title: 'Notifications', focusedIcon: 'bell', unfocusedIcon: 'bell-outline' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation.Bar` is a controlled component, which means the `index` needs to be updated via the `onTabPress` callback.\n   */\n  navigationState: NavigationState<Route>;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `Pressable` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps<Route>) => React.ReactNode;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab. Use this to update the navigation state.\n   */\n  onTabPress: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Function to execute on tab long press. It receives the route for the pressed tab\n   */\n  onTabLongPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * The scene animation Easing.\n   */\n  animationEasing?: EasingFunction | undefined;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Safe area insets for the tab bar. This can be used to avoid elements like the navigation bar on Android and bottom safe area on iOS.\n   * The bottom insets for iOS is added by default. You can override the behavior with this option.\n   */\n  safeAreaInsets?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  };\n  /**\n   * Specifies the largest possible scale a label font can reach.\n   */\n  labelMaxFontSizeMultiplier?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  activeIndicatorStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst OUTLINE_WIDTH = 64;\n\nconst Touchable = <Route extends BaseRoute>({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps<Route>) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      disabled={rest.disabled || undefined}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <Pressable style={style} {...rest}>\n      {children}\n    </Pressable>\n  );\n\n/**\n * A navigation bar which can easily be integrated with [React Navigation's Bottom Tabs Navigator](https://reactnavigation.org/docs/bottom-tab-navigator/).\n *\n * ## Usage\n * ```js\n * import React from 'react';\n * import { View, StyleSheet } from 'react-native';\n *\n * import { CommonActions } from '@react-navigation/native';\n * import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n * import { Text, BottomNavigation } from 'react-native-paper';\n * import Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n *\n * const Tab = createBottomTabNavigator();\n *\n * export default function MyComponent() {\n *   return (\n *     <Tab.Navigator\n *       screenOptions={{\n *         headerShown: false,\n *       }}\n *       tabBar={({ navigation, state, descriptors, insets }) => (\n *         <BottomNavigation.Bar\n *           navigationState={state}\n *          safeAreaInsets={insets}\n *           onTabPress={({ route, preventDefault }) => {\n *             const event = navigation.emit({\n *               type: 'tabPress',\n *               target: route.key,\n *               canPreventDefault: true,\n *             });\n *\n *             if (event.defaultPrevented) {\n *               preventDefault();\n *             } else {\n *              navigation.dispatch({\n *                 ...CommonActions.navigate(route.name, route.params),\n *                 target: state.key,\n *               });\n *             }\n *           }}\n *           renderIcon={({ route, focused, color }) => {\n *             const { options } = descriptors[route.key];\n *             if (options.tabBarIcon) {\n *               return options.tabBarIcon({ focused, color, size: 24 });\n *             }\n *\n *             return null;\n *           }}\n *           getLabelText={({ route }) => {\n *             const { options } = descriptors[route.key];\n *             const label =\n *               options.tabBarLabel !== undefined\n *                 ? options.tabBarLabel\n *                 : options.title !== undefined\n *                 ? options.title\n *                 : route.title;\n *\n *             return label;\n *           }}\n *         />\n *       )}\n *     >\n *       <Tab.Screen\n *         name=\"Home\"\n *         component={HomeScreen}\n *         options={{\n *           tabBarLabel: 'Home',\n *           tabBarIcon: ({ color, size }) => {\n *             return <Icon name=\"home\" size={size} color={color} />;\n *           },\n *         }}\n *       />\n *       <Tab.Screen\n *         name=\"Settings\"\n *         component={SettingsScreen}\n *         options={{\n *           tabBarLabel: 'Settings',\n *           tabBarIcon: ({ color, size }) => {\n *             return <Icon name=\"cog\" size={size} color={color} />;\n *           },\n *         }}\n *       />\n *     </Tab.Navigator>\n *   );\n * }\n *\n * function HomeScreen() {\n *   return (\n *     <View style={styles.container}>\n *       <Text variant=\"headlineMedium\">Home!</Text>\n *     </View>\n *   );\n * }\n *\n * function SettingsScreen() {\n *   return (\n *     <View style={styles.container}>\n *       <Text variant=\"headlineMedium\">Settings!</Text>\n *     </View>\n *   );\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'center',\n *     alignItems: 'center',\n *   },\n * });\n * ```\n */\nconst BottomNavigationBar = <Route extends BaseRoute>({\n  navigationState,\n  renderIcon,\n  renderLabel,\n  renderTouchable = ({ key, ...props }: TouchableProps<Route>) => (\n    <Touchable key={key} {...props} />\n  ),\n  getLabelText = ({ route }: { route: Route }) => route.title,\n  getBadge = ({ route }: { route: Route }) => route.badge,\n  getColor = ({ route }: { route: Route }) => route.color,\n  getAccessibilityLabel = ({ route }: { route: Route }) =>\n    route.accessibilityLabel,\n  getTestID = ({ route }: { route: Route }) => route.testID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = Platform.OS === 'android',\n  style,\n  activeIndicatorStyle,\n  labeled = true,\n  animationEasing,\n  onTabPress,\n  onTabLongPress,\n  shifting: shiftingProp,\n  safeAreaInsets,\n  labelMaxFontSizeMultiplier = 1,\n  compact: compactProp,\n  testID = 'bottom-navigation-bar',\n  theme: themeOverrides,\n}: Props<Route>) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { bottom, left, right } = useSafeAreaInsets();\n  const { scale } = theme.animation;\n  const compact = compactProp ?? !theme.isV3;\n  let shifting =\n    shiftingProp ?? (theme.isV3 ? false : navigationState.routes.length > 3);\n\n  if (shifting && navigationState.routes.length < 2) {\n    shifting = false;\n    console.warn(\n      'BottomNavigation.Bar needs at least 2 tabs to run shifting animation'\n    );\n  }\n\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  const visibleAnim = useAnimatedValue(1);\n\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n  const tabsAnims = useAnimatedValueArray(\n    navigationState.routes.map(\n      // focused === 1, unfocused === 0\n      (_, i) => (i === navigationState.index ? 1 : 0)\n    )\n  );\n\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors?.\n   */\n  const indexAnim = useAnimatedValue(navigationState.index);\n\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  const [layout, onLayout] = useLayout();\n\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [scale, visibleAnim]);\n\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n\n  const animateToIndex = React.useCallback(\n    (index: number) => {\n      // Reset the ripple to avoid glitch if it's currently animating\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      Animated.parallel([\n        Animated.timing(rippleAnim, {\n          toValue: 1,\n          duration: theme.isV3 || shifting ? 400 * scale : 0,\n          useNativeDriver: true,\n        }),\n        ...navigationState.routes.map((_, i) =>\n          Animated.timing(tabsAnims[i], {\n            toValue: i === index ? 1 : 0,\n            duration: theme.isV3 || shifting ? 150 * scale : 0,\n            useNativeDriver: true,\n            easing: animationEasing,\n          })\n        ),\n      ]).start(() => {\n        // Workaround a bug in native animations where this is reset after first animation\n        tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n        // Update the index to change bar's background color and then hide the ripple\n        indexAnim.setValue(index);\n        rippleAnim.setValue(MIN_RIPPLE_SCALE);\n      });\n    },\n    [\n      rippleAnim,\n      theme.isV3,\n      shifting,\n      scale,\n      navigationState.routes,\n      tabsAnims,\n      animationEasing,\n      indexAnim,\n    ]\n  );\n\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide,\n  });\n\n  React.useEffect(() => {\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex]);\n\n  const eventForIndex = (index: number) => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    return event;\n  };\n\n  const { routes } = navigationState;\n  const { colors, dark: isDarkTheme, mode, isV3 } = theme;\n\n  const { backgroundColor: customBackground, elevation = 4 } =\n    (StyleSheet.flatten(style) || {}) as {\n      elevation?: number;\n      backgroundColor?: ColorValue;\n    };\n\n  const approxBackgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors?.surface)\n    : colors?.primary;\n\n  const v2BackgroundColorInterpolation = shifting\n    ? indexAnim.interpolate({\n        inputRange: routes.map((_, i) => i),\n        // FIXME: does outputRange support ColorValue or just strings?\n        // @ts-expect-error\n        outputRange: routes.map(\n          (route) => getColor({ route }) || approxBackgroundColor\n        ),\n      })\n    : approxBackgroundColor;\n\n  const backgroundColor = isV3\n    ? customBackground || theme.colors.elevation.level2\n    : shifting\n    ? v2BackgroundColorInterpolation\n    : approxBackgroundColor;\n\n  const isDark =\n    typeof approxBackgroundColor === 'string'\n      ? !color(approxBackgroundColor).isLight()\n      : true;\n\n  const textColor = isDark ? white : black;\n\n  const activeTintColor = getActiveTintColor({\n    activeColor,\n    defaultColor: textColor,\n    theme,\n  });\n\n  const inactiveTintColor = getInactiveTintColor({\n    inactiveColor,\n    defaultColor: textColor,\n    theme,\n  });\n  const touchColor = color(activeTintColor).alpha(0.12).rgb().string();\n\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n\n  const rippleSize = layout.width / 4;\n\n  const insets = {\n    left: safeAreaInsets?.left ?? left,\n    right: safeAreaInsets?.right ?? right,\n    bottom: safeAreaInsets?.bottom ?? bottom,\n  };\n\n  return (\n    <Surface\n      {...(theme.isV3 && { elevation: 0 })}\n      testID={testID}\n      style={[\n        !theme.isV3 && styles.elevation,\n        styles.bar,\n        keyboardHidesNavigationBar // eslint-disable-next-line react-native/no-inline-styles\n          ? {\n              // When the keyboard is shown, slide down the navigation bar\n              transform: [\n                {\n                  translateY: visibleAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [layout.height, 0],\n                  }),\n                },\n              ],\n              // Absolutely position the navigation bar so that the content is below it\n              // This is needed to avoid gap at bottom when the navigation bar is hidden\n              position: keyboardVisible ? 'absolute' : undefined,\n            }\n          : null,\n        style,\n      ]}\n      pointerEvents={\n        layout.measured\n          ? keyboardHidesNavigationBar && keyboardVisible\n            ? 'none'\n            : 'auto'\n          : 'none'\n      }\n      onLayout={onLayout}\n    >\n      <Animated.View\n        style={[styles.barContent, { backgroundColor }]}\n        testID={`${testID}-content`}\n      >\n        <View\n          style={[\n            styles.items,\n            {\n              marginBottom: insets.bottom,\n              marginHorizontal: Math.max(insets.left, insets.right),\n            },\n            compact && {\n              maxWidth: maxTabBarWidth,\n            },\n          ]}\n          accessibilityRole={'tablist'}\n          testID={`${testID}-content-wrapper`}\n        >\n          {shifting && !isV3 ? (\n            <Animated.View\n              pointerEvents=\"none\"\n              style={[\n                styles.ripple,\n                {\n                  // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                  // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                  top: (BAR_HEIGHT - rippleSize) / 2,\n                  left:\n                    (Math.min(layout.width, maxTabBarWidth) / routes.length) *\n                      (navigationState.index + 0.5) -\n                    rippleSize / 2,\n                  height: rippleSize,\n                  width: rippleSize,\n                  borderRadius: rippleSize / 2,\n                  backgroundColor: getColor({\n                    route: routes[navigationState.index],\n                  }),\n                  transform: [\n                    {\n                      // Scale to twice the size  to ensure it covers the whole navigation bar\n                      scale: rippleAnim.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0, 8],\n                      }),\n                    },\n                  ],\n                  opacity: rippleAnim.interpolate({\n                    inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                    outputRange: [0, 0, 1, 1],\n                  }),\n                },\n              ]}\n              testID={`${testID}-content-ripple`}\n            />\n          ) : null}\n          {routes.map((route, index) => {\n            const focused = navigationState.index === index;\n            const active = tabsAnims[index];\n\n            // Scale the label up\n            const scale =\n              labeled && shifting\n                ? active.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.5, 1],\n                  })\n                : 1;\n\n            // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n            const translateY = labeled\n              ? shifting\n                ? active.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [7, 0],\n                  })\n                : 0\n              : 7;\n\n            // We render the active icon and label on top of inactive ones and cross-fade them on change.\n            // This trick gives the illusion that we are animating between active and inactive colors.\n            // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n            const activeOpacity = active;\n            const inactiveOpacity = active.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            });\n\n            const v3ActiveOpacity = focused ? 1 : 0;\n            const v3InactiveOpacity = shifting\n              ? inactiveOpacity\n              : focused\n              ? 0\n              : 1;\n\n            // Scale horizontally the outline pill\n            const outlineScale = focused\n              ? active.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.5, 1],\n                })\n              : 0;\n\n            const badge = getBadge({ route });\n\n            const activeLabelColor = getLabelColor({\n              tintColor: activeTintColor,\n              hasColor: Boolean(activeColor),\n              focused,\n              defaultColor: textColor,\n              theme,\n            });\n\n            const inactiveLabelColor = getLabelColor({\n              tintColor: inactiveTintColor,\n              hasColor: Boolean(inactiveColor),\n              focused,\n              defaultColor: textColor,\n              theme,\n            });\n\n            const badgeStyle = {\n              top: !isV3 ? -2 : typeof badge === 'boolean' ? 4 : 2,\n              right:\n                (badge != null && typeof badge !== 'boolean'\n                  ? String(badge).length * -2\n                  : 0) - (!isV3 ? 2 : 0),\n            };\n\n            const isV3Shifting = isV3 && shifting && labeled;\n\n            const font = isV3 ? theme.fonts.labelMedium : {};\n\n            return renderTouchable({\n              key: route.key,\n              route,\n              borderless: true,\n              centered: true,\n              rippleColor: isV3 ? 'transparent' : touchColor,\n              onPress: () => onTabPress(eventForIndex(index)),\n              onLongPress: () => onTabLongPress?.(eventForIndex(index)),\n              testID: getTestID({ route }),\n              accessibilityLabel: getAccessibilityLabel({ route }),\n              accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n              accessibilityState: { selected: focused },\n              style: [styles.item, isV3 && styles.v3Item],\n              children: (\n                <View\n                  pointerEvents=\"none\"\n                  style={\n                    isV3 &&\n                    (labeled\n                      ? styles.v3TouchableContainer\n                      : styles.v3NoLabelContainer)\n                  }\n                >\n                  <Animated.View\n                    style={[\n                      styles.iconContainer,\n                      isV3 && styles.v3IconContainer,\n                      (!isV3 || isV3Shifting) && {\n                        transform: [{ translateY }],\n                      },\n                    ]}\n                  >\n                    {isV3 && focused && (\n                      <Animated.View\n                        style={[\n                          styles.outline,\n                          {\n                            transform: [\n                              {\n                                scaleX: outlineScale,\n                              },\n                            ],\n                            backgroundColor: theme.colors.secondaryContainer,\n                          },\n                          activeIndicatorStyle,\n                        ]}\n                      />\n                    )}\n                    <Animated.View\n                      style={[\n                        styles.iconWrapper,\n                        isV3 && styles.v3IconWrapper,\n                        { opacity: isV3 ? v3ActiveOpacity : activeOpacity },\n                      ]}\n                    >\n                      {renderIcon ? (\n                        renderIcon({\n                          route,\n                          focused: true,\n                          color: activeTintColor,\n                        })\n                      ) : (\n                        <Icon\n                          source={route.focusedIcon as IconSource}\n                          color={activeTintColor}\n                          size={24}\n                        />\n                      )}\n                    </Animated.View>\n                    <Animated.View\n                      style={[\n                        styles.iconWrapper,\n                        isV3 && styles.v3IconWrapper,\n                        {\n                          opacity: isV3 ? v3InactiveOpacity : inactiveOpacity,\n                        },\n                      ]}\n                    >\n                      {renderIcon ? (\n                        renderIcon({\n                          route,\n                          focused: false,\n                          color: inactiveTintColor,\n                        })\n                      ) : (\n                        <Icon\n                          source={\n                            theme.isV3 && route.unfocusedIcon !== undefined\n                              ? route.unfocusedIcon\n                              : (route.focusedIcon as IconSource)\n                          }\n                          color={inactiveTintColor}\n                          size={24}\n                        />\n                      )}\n                    </Animated.View>\n                    <View style={[styles.badgeContainer, badgeStyle]}>\n                      {typeof badge === 'boolean' ? (\n                        <Badge visible={badge} size={isV3 ? 6 : 8} />\n                      ) : (\n                        <Badge visible={badge != null} size={16}>\n                          {badge}\n                        </Badge>\n                      )}\n                    </View>\n                  </Animated.View>\n                  {labeled ? (\n                    <Animated.View\n                      style={[\n                        styles.labelContainer,\n                        !isV3 && { transform: [{ scale }] },\n                      ]}\n                    >\n                      <Animated.View\n                        style={[\n                          styles.labelWrapper,\n                          (!isV3 || isV3Shifting) && {\n                            opacity: activeOpacity,\n                          },\n                        ]}\n                      >\n                        {renderLabel ? (\n                          renderLabel({\n                            route,\n                            focused: true,\n                            color: activeLabelColor,\n                          })\n                        ) : (\n                          <Text\n                            maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                            variant=\"labelMedium\"\n                            style={[\n                              styles.label,\n                              {\n                                color: activeLabelColor,\n                                ...font,\n                              },\n                            ]}\n                          >\n                            {getLabelText({ route })}\n                          </Text>\n                        )}\n                      </Animated.View>\n                      {shifting ? null : (\n                        <Animated.View\n                          style={[\n                            styles.labelWrapper,\n                            { opacity: inactiveOpacity },\n                          ]}\n                        >\n                          {renderLabel ? (\n                            renderLabel({\n                              route,\n                              focused: false,\n                              color: inactiveLabelColor,\n                            })\n                          ) : (\n                            <Text\n                              maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\n                              variant=\"labelMedium\"\n                              selectable={false}\n                              style={[\n                                styles.label,\n                                {\n                                  color: inactiveLabelColor,\n                                  ...font,\n                                },\n                              ]}\n                            >\n                              {getLabelText({ route })}\n                            </Text>\n                          )}\n                        </Animated.View>\n                      )}\n                    </Animated.View>\n                  ) : (\n                    !isV3 && <View style={styles.labelContainer} />\n                  )}\n                </View>\n              ),\n            });\n          })}\n        </View>\n      </Animated.View>\n    </Surface>\n  );\n};\n\nBottomNavigationBar.displayName = 'BottomNavigation.Bar';\n\nexport default BottomNavigationBar;\n\nconst styles = StyleSheet.create({\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web'\n      ? {\n          width: '100%',\n        }\n      : null),\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  v3Item: {\n    paddingVertical: 0,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  v3IconContainer: {\n    height: 32,\n    width: 32,\n    marginBottom: 4,\n    marginTop: 0,\n    justifyContent: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  v3IconWrapper: {\n    top: 4,\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    height: BAR_HEIGHT,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n          alignSelf: 'center',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n  },\n  v3TouchableContainer: {\n    paddingTop: 12,\n    paddingBottom: 16,\n  },\n  v3NoLabelContainer: {\n    height: 80,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  outline: {\n    width: OUTLINE_WIDTH,\n    height: OUTLINE_WIDTH / 2,\n    borderRadius: OUTLINE_WIDTH / 4,\n    alignSelf: 'center',\n  },\n  elevation: {\n    elevation: 4,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}