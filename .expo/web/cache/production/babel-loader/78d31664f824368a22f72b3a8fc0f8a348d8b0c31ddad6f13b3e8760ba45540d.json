{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"style\",\"theme\"],_excluded2=[\"elevation\",\"style\",\"backgroundColor\",\"testID\",\"children\",\"mode\"],_excluded3=[\"elevation\",\"children\",\"theme\",\"style\",\"testID\",\"mode\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useInternalTheme}from'../core/theming';import overlay,{isAnimatedValue}from'../styles/overlay';import shadow from'../styles/shadow';import{forwardRef}from'../utils/forwardRef';import{splitStyles}from'../utils/splitStyles';const MD2Surface=forwardRef((_ref,ref)=>{let{style,theme:overrideTheme}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const{elevation=4}=StyleSheet.flatten(style)||{};const{dark:isDarkTheme,mode,colors}=useInternalTheme(overrideTheme);return React.createElement(Animated.View,_extends({ref:ref},rest,{style:[{backgroundColor:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors===null||colors===void 0?void 0:colors.surface):colors===null||colors===void 0?void 0:colors.surface},elevation?shadow(elevation):null,style]}));});const outerLayerStyleProperties=['position','alignSelf','top','right','bottom','left','start','end','flex','flexShrink','flexGrow','width','height','transform','opacity'];const shadowColor='#000';const iOSShadowOutputRanges=[{shadowOpacity:0.15,height:[0,1,2,4,6,8],shadowRadius:[0,3,6,8,10,12]},{shadowOpacity:0.3,height:[0,1,1,1,2,4],shadowRadius:[0,1,2,3,3,4]}];const inputRange=[0,1,2,3,4,5];function getStyleForShadowLayer(elevation,layer){if(isAnimatedValue(elevation)){return{shadowColor,shadowOpacity:elevation.interpolate({inputRange:[0,1],outputRange:[0,iOSShadowOutputRanges[layer].shadowOpacity],extrapolate:'clamp'}),shadowOffset:{width:0,height:elevation.interpolate({inputRange,outputRange:iOSShadowOutputRanges[layer].height})},shadowRadius:elevation.interpolate({inputRange,outputRange:iOSShadowOutputRanges[layer].shadowRadius})};}return{shadowColor,shadowOpacity:elevation?iOSShadowOutputRanges[layer].shadowOpacity:0,shadowOffset:{width:0,height:iOSShadowOutputRanges[layer].height[elevation]},shadowRadius:iOSShadowOutputRanges[layer].shadowRadius[elevation]};}const SurfaceIOS=forwardRef((_ref2,ref)=>{let{elevation,style,backgroundColor,testID,children,mode='elevated'}=_ref2,props=_objectWithoutPropertiesLoose(_ref2,_excluded2);const[outerLayerViewStyles,innerLayerViewStyles]=React.useMemo(()=>{const flattenedStyles=StyleSheet.flatten(style)||{};const[filteredStyles,outerLayerStyles,borderRadiusStyles]=splitStyles(flattenedStyles,style=>outerLayerStyleProperties.includes(style)||style.startsWith('margin'),style=>style.startsWith('border')&&style.endsWith('Radius'));if(false&&filteredStyles.overflow==='hidden'&&elevation!==0){console.warn('When setting overflow to hidden on Surface the shadow will not be displayed correctly. Wrap the content of your component in a separate View with the overflow style.');}const bgColor=flattenedStyles.backgroundColor||backgroundColor;const isElevated=mode==='elevated';const outerLayerViewStyles=Object.assign({},isElevated&&getStyleForShadowLayer(elevation,0),outerLayerStyles,borderRadiusStyles,{backgroundColor:bgColor});const innerLayerViewStyles=Object.assign({},isElevated&&getStyleForShadowLayer(elevation,1),filteredStyles,borderRadiusStyles,{flex:flattenedStyles.height?1:undefined,backgroundColor:bgColor});return[outerLayerViewStyles,innerLayerViewStyles];},[style,elevation,backgroundColor,mode]);return React.createElement(Animated.View,{ref:ref,style:outerLayerViewStyles,testID:`${testID}-outer-layer`},React.createElement(Animated.View,_extends({},props,{style:innerLayerViewStyles,testID:testID}),children));});const Surface=forwardRef((_ref3,ref)=>{let{elevation=1,children,theme:overridenTheme,style,testID='surface',mode='elevated'}=_ref3,props=_objectWithoutPropertiesLoose(_ref3,_excluded3);const theme=useInternalTheme(overridenTheme);if(!theme.isV3)return React.createElement(MD2Surface,_extends({},props,{theme:theme,style:style,ref:ref}),children);const{colors}=theme;const inputRange=[0,1,2,3,4,5];const backgroundColor=(_colors$elevation2=>{if(isAnimatedValue(elevation)){return elevation.interpolate({inputRange,outputRange:inputRange.map(elevation=>{var _colors$elevation;return(_colors$elevation=colors.elevation)===null||_colors$elevation===void 0?void 0:_colors$elevation[`level${elevation}`];})});}return(_colors$elevation2=colors.elevation)===null||_colors$elevation2===void 0?void 0:_colors$elevation2[`level${elevation}`];})();const isElevated=mode==='elevated';if(true){const{pointerEvents='auto'}=props;return React.createElement(Animated.View,_extends({},props,{pointerEvents:pointerEvents,ref:ref,testID:testID,style:[{backgroundColor},elevation&&isElevated?shadow(elevation,theme.isV3):null,style]}),children);}if(false){const elevationLevel=[0,3,6,9,12,15];const getElevationAndroid=()=>{if(isAnimatedValue(elevation)){return elevation.interpolate({inputRange,outputRange:elevationLevel});}return elevationLevel[elevation];};const{margin,padding,transform,borderRadius}=StyleSheet.flatten(style)||{};const outerLayerStyles={margin,padding,transform,borderRadius};const sharedStyle=[{backgroundColor},style];return React.createElement(Animated.View,_extends({},props,{testID:testID,ref:ref,style:[{backgroundColor,transform},outerLayerStyles,sharedStyle,isElevated&&{elevation:getElevationAndroid()}]}),children);}return React.createElement(SurfaceIOS,_extends({},props,{ref:ref,elevation:elevation,backgroundColor:backgroundColor,style:style,testID:testID,mode:mode}),children);});export default Surface;","map":{"version":3,"names":["React","Animated","Platform","StyleSheet","useInternalTheme","overlay","isAnimatedValue","shadow","forwardRef","splitStyles","MD2Surface","_ref","ref","style","theme","overrideTheme","rest","_objectWithoutPropertiesLoose","_excluded","elevation","flatten","dark","isDarkTheme","mode","colors","createElement","View","_extends","backgroundColor","surface","outerLayerStyleProperties","shadowColor","iOSShadowOutputRanges","shadowOpacity","height","shadowRadius","inputRange","getStyleForShadowLayer","layer","interpolate","outputRange","extrapolate","shadowOffset","width","SurfaceIOS","_ref2","testID","children","props","_excluded2","outerLayerViewStyles","innerLayerViewStyles","useMemo","flattenedStyles","filteredStyles","outerLayerStyles","borderRadiusStyles","includes","startsWith","endsWith","overflow","console","warn","bgColor","isElevated","Object","assign","flex","undefined","Surface","_ref3","overridenTheme","_excluded3","isV3","_colors$elevation2","map","_colors$elevation","pointerEvents","elevationLevel","getElevationAndroid","margin","padding","transform","borderRadius","sharedStyle"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\Surface.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  ShadowStyleIOS,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../core/theming';\nimport overlay, { isAnimatedValue } from '../styles/overlay';\nimport shadow from '../styles/shadow';\nimport type { ThemeProp, MD3Elevation } from '../types';\nimport { forwardRef } from '../utils/forwardRef';\nimport { splitStyles } from '../utils/splitStyles';\n\ntype Elevation = 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n\nexport type Props = Omit<React.ComponentPropsWithRef<typeof View>, 'style'> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes shadows and background on iOS and Android.\n   * Used to create UI hierarchy between components.\n   *\n   * Note: If `mode` is set to `flat`, Surface doesn't have a shadow.\n   *\n   * Note: In version 2 the `elevation` prop was accepted via `style` prop i.e. `style={{ elevation: 4 }}`.\n   * It's no longer supported with theme version 3 and you should use `elevation` property instead.\n   */\n  elevation?: Elevation;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Mode of the Surface.\n   * - `elevated` - Surface with a shadow and background color corresponding to set `elevation` value.\n   * - `flat` - Surface without a shadow, with the background color corresponding to set `elevation` value.\n   */\n  mode?: 'flat' | 'elevated';\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\nconst MD2Surface = forwardRef<View, Props>(\n  ({ style, theme: overrideTheme, ...rest }: Omit<Props, 'elevation'>, ref) => {\n    const { elevation = 4 } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n    const { dark: isDarkTheme, mode, colors } = useInternalTheme(overrideTheme);\n\n    return (\n      <Animated.View\n        ref={ref}\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors?.surface)\n                : colors?.surface,\n          },\n          elevation ? shadow(elevation) : null,\n          style,\n        ]}\n      />\n    );\n  }\n);\n\nconst outerLayerStyleProperties: (keyof ViewStyle)[] = [\n  'position',\n  'alignSelf',\n  'top',\n  'right',\n  'bottom',\n  'left',\n  'start',\n  'end',\n  'flex',\n  'flexShrink',\n  'flexGrow',\n  'width',\n  'height',\n  'transform',\n  'opacity',\n];\n\nconst shadowColor = '#000';\nconst iOSShadowOutputRanges = [\n  {\n    shadowOpacity: 0.15,\n    height: [0, 1, 2, 4, 6, 8],\n    shadowRadius: [0, 3, 6, 8, 10, 12],\n  },\n  {\n    shadowOpacity: 0.3,\n    height: [0, 1, 1, 1, 2, 4],\n    shadowRadius: [0, 1, 2, 3, 3, 4],\n  },\n];\nconst inputRange = [0, 1, 2, 3, 4, 5];\nfunction getStyleForShadowLayer(\n  elevation: Elevation,\n  layer: 0 | 1\n): Animated.WithAnimatedValue<ShadowStyleIOS> {\n  if (isAnimatedValue(elevation)) {\n    return {\n      shadowColor,\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n        extrapolate: 'clamp',\n      }),\n      shadowOffset: {\n        width: 0,\n        height: elevation.interpolate({\n          inputRange,\n          outputRange: iOSShadowOutputRanges[layer].height,\n        }),\n      },\n      shadowRadius: elevation.interpolate({\n        inputRange,\n        outputRange: iOSShadowOutputRanges[layer].shadowRadius,\n      }),\n    };\n  }\n\n  return {\n    shadowColor,\n    shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n    shadowOffset: {\n      width: 0,\n      height: iOSShadowOutputRanges[layer].height[elevation],\n    },\n    shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation],\n  };\n}\n\nconst SurfaceIOS = forwardRef<\n  View,\n  Omit<Props, 'elevation'> & {\n    elevation: Elevation;\n    backgroundColor?: string | Animated.AnimatedInterpolation<string | number>;\n  }\n>(\n  (\n    {\n      elevation,\n      style,\n      backgroundColor,\n      testID,\n      children,\n      mode = 'elevated',\n      ...props\n    },\n    ref\n  ) => {\n    const [outerLayerViewStyles, innerLayerViewStyles] = React.useMemo(() => {\n      const flattenedStyles = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n      const [filteredStyles, outerLayerStyles, borderRadiusStyles] =\n        splitStyles(\n          flattenedStyles,\n          (style) =>\n            outerLayerStyleProperties.includes(style) ||\n            style.startsWith('margin'),\n          (style) => style.startsWith('border') && style.endsWith('Radius')\n        );\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        filteredStyles.overflow === 'hidden' &&\n        elevation !== 0\n      ) {\n        console.warn(\n          'When setting overflow to hidden on Surface the shadow will not be displayed correctly. Wrap the content of your component in a separate View with the overflow style.'\n        );\n      }\n\n      const bgColor = flattenedStyles.backgroundColor || backgroundColor;\n\n      const isElevated = mode === 'elevated';\n\n      const outerLayerViewStyles = {\n        ...(isElevated && getStyleForShadowLayer(elevation, 0)),\n        ...outerLayerStyles,\n        ...borderRadiusStyles,\n        backgroundColor: bgColor,\n      };\n\n      const innerLayerViewStyles = {\n        ...(isElevated && getStyleForShadowLayer(elevation, 1)),\n        ...filteredStyles,\n        ...borderRadiusStyles,\n        flex: flattenedStyles.height ? 1 : undefined,\n        backgroundColor: bgColor,\n      };\n\n      return [outerLayerViewStyles, innerLayerViewStyles];\n    }, [style, elevation, backgroundColor, mode]);\n\n    return (\n      <Animated.View\n        ref={ref}\n        style={outerLayerViewStyles}\n        testID={`${testID}-outer-layer`}\n      >\n        <Animated.View {...props} style={innerLayerViewStyles} testID={testID}>\n          {children}\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n);\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/docs/guides/theming#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface} elevation={4}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *   },\n * });\n * ```\n */\nconst Surface = forwardRef<View, Props>(\n  (\n    {\n      elevation = 1,\n      children,\n      theme: overridenTheme,\n      style,\n      testID = 'surface',\n      mode = 'elevated',\n      ...props\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(overridenTheme);\n\n    if (!theme.isV3)\n      return (\n        <MD2Surface {...props} theme={theme} style={style} ref={ref}>\n          {children}\n        </MD2Surface>\n      );\n\n    const { colors } = theme;\n\n    const inputRange = [0, 1, 2, 3, 4, 5];\n\n    const backgroundColor = (() => {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange,\n          outputRange: inputRange.map((elevation) => {\n            return colors.elevation?.[`level${elevation as MD3Elevation}`];\n          }),\n        });\n      }\n\n      return colors.elevation?.[`level${elevation}`];\n    })();\n\n    const isElevated = mode === 'elevated';\n\n    if (Platform.OS === 'web') {\n      const { pointerEvents = 'auto' } = props;\n      return (\n        <Animated.View\n          {...props}\n          pointerEvents={pointerEvents}\n          ref={ref}\n          testID={testID}\n          style={[\n            { backgroundColor },\n            elevation && isElevated ? shadow(elevation, theme.isV3) : null,\n            style,\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    if (Platform.OS === 'android') {\n      const elevationLevel = [0, 3, 6, 9, 12, 15];\n\n      const getElevationAndroid = () => {\n        if (isAnimatedValue(elevation)) {\n          return elevation.interpolate({\n            inputRange,\n            outputRange: elevationLevel,\n          });\n        }\n\n        return elevationLevel[elevation];\n      };\n\n      const { margin, padding, transform, borderRadius } = (StyleSheet.flatten(\n        style\n      ) || {}) as ViewStyle;\n\n      const outerLayerStyles = { margin, padding, transform, borderRadius };\n      const sharedStyle = [{ backgroundColor }, style];\n\n      return (\n        <Animated.View\n          {...props}\n          testID={testID}\n          ref={ref}\n          style={[\n            {\n              backgroundColor,\n              transform,\n            },\n            outerLayerStyles,\n            sharedStyle,\n            isElevated && {\n              elevation: getElevationAndroid(),\n            },\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    return (\n      <SurfaceIOS\n        {...props}\n        ref={ref}\n        elevation={elevation}\n        backgroundColor={backgroundColor}\n        style={style}\n        testID={testID}\n        mode={mode}\n      >\n        {children}\n      </SurfaceIOS>\n    );\n  }\n);\n\nexport default Surface;\n"],"mappings":"8jBAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,QAAA,qDAAAC,QAAA,qDAAAC,UAAA,gDAW9B,OAASC,gBAAgB,KAAQ,iBAAiB,CAClD,MAAO,CAAAC,OAAO,EAAIC,eAAe,KAAQ,mBAAmB,CAC5D,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CAErC,OAASC,UAAU,KAAQ,qBAAqB,CAChD,OAASC,WAAW,KAAQ,sBAAsB,CAuClD,KAAM,CAAAC,UAAU,CAAGF,UAAU,CAC3B,CAAAG,IAAA,CAAqEC,GAAG,GAAK,IAA5E,CAAEC,KAAK,CAAEC,KAAK,CAAEC,aAAiD,CAAC,CAAAJ,IAAA,CAAhCK,IAAA,CAAAC,6BAAA,CAAgCN,IAAA,CAAAO,SAAA,EACjE,KAAM,CAAEC,SAAS,CAAG,CAAE,CAAC,CAAIhB,UAAU,CAACiB,OAAO,CAACP,KAAK,CAAC,EAAI,CAAC,CAAe,CACxE,KAAM,CAAEQ,IAAI,CAAEC,WAAW,CAAEC,IAAI,CAAEC,MAAO,CAAC,CAAGpB,gBAAgB,CAACW,aAAa,CAAC,CAE3E,MACE,CAAAf,KAAA,CAAAyB,aAAA,CAACxB,QAAQ,CAACyB,IAAI,CAAAC,QAAA,EACZf,GAAG,CAAEA,GAAI,EACLI,IAAI,EACRH,KAAK,CAAE,CACL,CACEe,eAAe,CACbN,WAAW,EAAIC,IAAI,GAAK,UAAU,CAC9BlB,OAAO,CAACc,SAAS,CAAEK,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEK,OAAO,CAAC,CACnCL,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEK,OAChB,CAAC,CACDV,SAAS,CAAGZ,MAAM,CAACY,SAAS,CAAC,CAAG,IAAI,CACpCN,KAAK,CACL,EACH,CAAC,CAEN,CACF,CAAC,CAED,KAAM,CAAAiB,yBAA8C,CAAG,CACrD,UAAU,CACV,WAAW,CACX,KAAK,CACL,OAAO,CACP,QAAQ,CACR,MAAM,CACN,OAAO,CACP,KAAK,CACL,MAAM,CACN,YAAY,CACZ,UAAU,CACV,OAAO,CACP,QAAQ,CACR,WAAW,CACX,SAAS,CACV,CAED,KAAM,CAAAC,WAAW,CAAG,MAAM,CAC1B,KAAM,CAAAC,qBAAqB,CAAG,CAC5B,CACEC,aAAa,CAAE,IAAI,CACnBC,MAAM,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC1BC,YAAY,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,EAAE,CACnC,CAAC,CACD,CACEF,aAAa,CAAE,GAAG,CAClBC,MAAM,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC1BC,YAAY,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CACjC,CAAC,CACF,CACD,KAAM,CAAAC,UAAU,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACrC,QAAS,CAAAC,sBAAsBA,CAC7BlB,SAAoB,CACpBmB,KAAY,CACgC,CAC5C,GAAIhC,eAAe,CAACa,SAAS,CAAC,CAAE,CAC9B,MAAO,CACLY,WAAW,CACXE,aAAa,CAAEd,SAAS,CAACoB,WAAW,CAAC,CACnCH,UAAU,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAClBI,WAAW,CAAE,CAAC,CAAC,CAAER,qBAAqB,CAACM,KAAK,CAAC,CAACL,aAAa,CAAC,CAC5DQ,WAAW,CAAE,OACf,CAAC,CAAC,CACFC,YAAY,CAAE,CACZC,KAAK,CAAE,CAAC,CACRT,MAAM,CAAEf,SAAS,CAACoB,WAAW,CAAC,CAC5BH,UAAU,CACVI,WAAW,CAAER,qBAAqB,CAACM,KAAK,CAAC,CAACJ,MAC5C,CAAC,CACH,CAAC,CACDC,YAAY,CAAEhB,SAAS,CAACoB,WAAW,CAAC,CAClCH,UAAU,CACVI,WAAW,CAAER,qBAAqB,CAACM,KAAK,CAAC,CAACH,YAC5C,CAAC,CACH,CAAC,CACH,CAEA,MAAO,CACLJ,WAAW,CACXE,aAAa,CAAEd,SAAS,CAAGa,qBAAqB,CAACM,KAAK,CAAC,CAACL,aAAa,CAAG,CAAC,CACzES,YAAY,CAAE,CACZC,KAAK,CAAE,CAAC,CACRT,MAAM,CAAEF,qBAAqB,CAACM,KAAK,CAAC,CAACJ,MAAM,CAACf,SAAS,CACvD,CAAC,CACDgB,YAAY,CAAEH,qBAAqB,CAACM,KAAK,CAAC,CAACH,YAAY,CAAChB,SAAS,CACnE,CAAC,CACH,CAEA,KAAM,CAAAyB,UAAU,CAAGpC,UAAU,CAO3B,CAAAqC,KAAA,CAUEjC,GAAG,GACA,IAVH,CACEO,SAAS,CACTN,KAAK,CACLe,eAAe,CACfkB,MAAM,CACNC,QAAQ,CACRxB,IAAI,CAAG,UAET,CAAC,CAAAsB,KAAA,CADIG,KAAA,CAAA/B,6BAAA,CACJ4B,KAAA,CAAAI,UAAA,EAGD,KAAM,CAACC,oBAAoB,CAAEC,oBAAoB,CAAC,CAAGnD,KAAK,CAACoD,OAAO,CAAC,IAAM,CACvE,KAAM,CAAAC,eAAe,CAAIlD,UAAU,CAACiB,OAAO,CAACP,KAAK,CAAC,EAAI,CAAC,CAAe,CAEtE,KAAM,CAACyC,cAAc,CAAEC,gBAAgB,CAAEC,kBAAkB,CAAC,CAC1D/C,WAAW,CACT4C,eAAe,CACdxC,KAAK,EACJiB,yBAAyB,CAAC2B,QAAQ,CAAC5C,KAAK,CAAC,EACzCA,KAAK,CAAC6C,UAAU,CAAC,QAAQ,CAAC,CAC3B7C,KAAK,EAAKA,KAAK,CAAC6C,UAAU,CAAC,QAAQ,CAAC,EAAI7C,KAAK,CAAC8C,QAAQ,CAAC,QAAQ,CAClE,CAAC,CAEH,GACE,OACAL,cAAc,CAACM,QAAQ,GAAK,QAAQ,EACpCzC,SAAS,GAAK,CAAC,CACf,CACA0C,OAAO,CAACC,IAAI,CACV,uKACF,CAAC,CACH,CAEA,KAAM,CAAAC,OAAO,CAAGV,eAAe,CAACzB,eAAe,EAAIA,eAAe,CAElE,KAAM,CAAAoC,UAAU,CAAGzC,IAAI,GAAK,UAAU,CAEtC,KAAM,CAAA2B,oBAAoB,CAAAe,MAAA,CAAAC,MAAA,IACpBF,UAAU,EAAI3B,sBAAsB,CAAClB,SAAS,CAAE,CAAC,CAAC,CACnDoC,gBAAgB,CAChBC,kBAAkB,EACrB5B,eAAe,CAAEmC,OAAA,EAClB,CAED,KAAM,CAAAZ,oBAAoB,CAAAc,MAAA,CAAAC,MAAA,IACpBF,UAAU,EAAI3B,sBAAsB,CAAClB,SAAS,CAAE,CAAC,CAAC,CACnDmC,cAAc,CACdE,kBAAkB,EACrBW,IAAI,CAAEd,eAAe,CAACnB,MAAM,CAAG,CAAC,CAAGkC,SAAS,CAC5CxC,eAAe,CAAEmC,OAAA,EAClB,CAED,MAAO,CAACb,oBAAoB,CAAEC,oBAAoB,CAAC,CACrD,CAAC,CAAE,CAACtC,KAAK,CAAEM,SAAS,CAAES,eAAe,CAAEL,IAAI,CAAC,CAAC,CAE7C,MACE,CAAAvB,KAAA,CAAAyB,aAAA,CAACxB,QAAQ,CAACyB,IAAI,EACZd,GAAG,CAAEA,GAAI,CACTC,KAAK,CAAEqC,oBAAqB,CAC5BJ,MAAM,CAAG,GAAEA,MAAO,cAAc,EAEhC9C,KAAA,CAAAyB,aAAA,CAACxB,QAAQ,CAACyB,IAAI,CAAAC,QAAA,IAAKqB,KAAK,EAAEnC,KAAK,CAAEsC,oBAAqB,CAACL,MAAM,CAAEA,MAAO,GACnEC,QACY,CACF,CAAC,CAEpB,CACF,CAAC,CAiCD,KAAM,CAAAsB,OAAO,CAAG7D,UAAU,CACxB,CAAA8D,KAAA,CAUE1D,GAAG,GACA,IAVH,CACEO,SAAS,CAAG,CAAC,CACb4B,QAAQ,CACRjC,KAAK,CAAEyD,cAAc,CACrB1D,KAAK,CACLiC,MAAM,CAAG,SAAS,CAClBvB,IAAI,CAAG,UAEF,CAAC,CAAA+C,KAAA,CADHtB,KAAA,CAAA/B,6BAAA,CACGqD,KAAA,CAAAE,UAAA,EAGR,KAAM,CAAA1D,KAAK,CAAGV,gBAAgB,CAACmE,cAAc,CAAC,CAE9C,GAAI,CAACzD,KAAK,CAAC2D,IAAI,CACb,MACE,CAAAzE,KAAA,CAAAyB,aAAA,CAACf,UAAU,CAAAiB,QAAA,IAAKqB,KAAK,EAAElC,KAAK,CAAEA,KAAM,CAACD,KAAK,CAAEA,KAAM,CAACD,GAAG,CAAEA,GAAI,GACzDmC,QACS,CAAC,CAGjB,KAAM,CAAEvB,MAAO,CAAC,CAAGV,KAAK,CAExB,KAAM,CAAAsB,UAAU,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAErC,KAAM,CAAAR,eAAe,CAAG,CAAC8C,kBAAA,EAAM,CAC7B,GAAIpE,eAAe,CAACa,SAAS,CAAC,CAAE,CAC9B,MAAO,CAAAA,SAAS,CAACoB,WAAW,CAAC,CAC3BH,UAAU,CACVI,WAAW,CAAEJ,UAAU,CAACuC,GAAG,CAAExD,SAAS,EAAK,KAAAyD,iBAAA,CACzC,OAAAA,iBAAA,CAAOpD,MAAM,CAACL,SAAS,UAAAyD,iBAAA,iBAAhBA,iBAAA,CAAoB,QAAOzD,SAA0B,EAAC,CAAC,CAChE,CAAC,CACH,CAAC,CAAC,CACJ,CAEA,OAAAuD,kBAAA,CAAOlD,MAAM,CAACL,SAAS,UAAAuD,kBAAA,iBAAhBA,kBAAA,CAAoB,QAAOvD,SAAU,EAAC,CAAC,CAChD,CAAC,EAAE,CAAC,CAEJ,KAAM,CAAA6C,UAAU,CAAGzC,IAAI,GAAK,UAAU,CAEtC,QAA2B,CACzB,KAAM,CAAEsD,aAAa,CAAG,MAAO,CAAC,CAAG7B,KAAK,CACxC,MACE,CAAAhD,KAAA,CAAAyB,aAAA,CAACxB,QAAQ,CAACyB,IAAI,CAAAC,QAAA,IACRqB,KAAK,EACT6B,aAAa,CAAEA,aAAc,CAC7BjE,GAAG,CAAEA,GAAI,CACTkC,MAAM,CAAEA,MAAO,CACfjC,KAAK,CAAE,CACL,CAAEe,eAAgB,CAAC,CACnBT,SAAS,EAAI6C,UAAU,CAAGzD,MAAM,CAACY,SAAS,CAAEL,KAAK,CAAC2D,IAAI,CAAC,CAAG,IAAI,CAC9D5D,KAAK,CACL,GAEDkC,QACY,CAAC,CAEpB,CAEA,SAA+B,CAC7B,KAAM,CAAA+B,cAAc,CAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,EAAE,CAAC,CAE3C,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAChC,GAAIzE,eAAe,CAACa,SAAS,CAAC,CAAE,CAC9B,MAAO,CAAAA,SAAS,CAACoB,WAAW,CAAC,CAC3BH,UAAU,CACVI,WAAW,CAAEsC,cACf,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAA,cAAc,CAAC3D,SAAS,CAAC,CAClC,CAAC,CAED,KAAM,CAAE6D,MAAM,CAAEC,OAAO,CAAEC,SAAS,CAAEC,YAAa,CAAC,CAAIhF,UAAU,CAACiB,OAAO,CACtEP,KACF,CAAC,EAAI,CAAC,CAAe,CAErB,KAAM,CAAA0C,gBAAgB,CAAG,CAAEyB,MAAM,CAAEC,OAAO,CAAEC,SAAS,CAAEC,YAAa,CAAC,CACrE,KAAM,CAAAC,WAAW,CAAG,CAAC,CAAExD,eAAgB,CAAC,CAAEf,KAAK,CAAC,CAEhD,MACE,CAAAb,KAAA,CAAAyB,aAAA,CAACxB,QAAQ,CAACyB,IAAI,CAAAC,QAAA,IACRqB,KAAK,EACTF,MAAM,CAAEA,MAAO,CACflC,GAAG,CAAEA,GAAI,CACTC,KAAK,CAAE,CACL,CACEe,eAAe,CACfsD,SACF,CAAC,CACD3B,gBAAgB,CAChB6B,WAAW,CACXpB,UAAU,EAAI,CACZ7C,SAAS,CAAE4D,mBAAmB,CAAC,CACjC,CAAC,CACD,GAEDhC,QACY,CAAC,CAEpB,CAEA,MACE,CAAA/C,KAAA,CAAAyB,aAAA,CAACmB,UAAU,CAAAjB,QAAA,IACLqB,KAAK,EACTpC,GAAG,CAAEA,GAAI,CACTO,SAAS,CAAEA,SAAU,CACrBS,eAAe,CAAEA,eAAgB,CACjCf,KAAK,CAAEA,KAAM,CACbiC,MAAM,CAAEA,MAAO,CACfvB,IAAI,CAAEA,IAAK,GAEVwB,QACS,CAAC,CAEjB,CACF,CAAC,CAED,cAAe,CAAAsB,OAAO","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}