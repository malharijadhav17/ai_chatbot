{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"disabled\",\"editable\",\"label\",\"error\",\"selectionColor\",\"cursorColor\",\"underlineColor\",\"outlineColor\",\"activeOutlineColor\",\"outlineStyle\",\"textColor\",\"dense\",\"style\",\"theme\",\"render\",\"multiline\",\"parentState\",\"innerRef\",\"onFocus\",\"forceFocus\",\"onBlur\",\"onChangeText\",\"onLayoutAnimatedText\",\"onLabelTextLayout\",\"onLeftAffixLayoutChange\",\"onRightAffixLayoutChange\",\"onInputLayout\",\"onLayout\",\"left\",\"right\",\"placeholderTextColor\",\"testID\",\"contentStyle\",\"scaledLabel\"],_excluded2=[\"fontSize\",\"fontWeight\",\"lineHeight\",\"height\",\"backgroundColor\",\"textAlign\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import NativeTextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import{Outline}from'./Addons/Outline';import{AdornmentType,AdornmentSide}from'./Adornment/enums';import TextInputAdornment,{getAdornmentConfig,getAdornmentStyleAdjustmentForNativeInput}from'./Adornment/TextInputAdornment';import{MAXIMIZED_LABEL_FONT_SIZE,MINIMIZED_LABEL_FONT_SIZE,LABEL_WIGGLE_X_OFFSET,ADORNMENT_SIZE,OUTLINE_MINIMIZED_LABEL_Y_OFFSET,LABEL_PADDING_TOP,MIN_DENSE_HEIGHT_OUTLINED,LABEL_PADDING_TOP_DENSE}from'./constants';import{calculateLabelTopPosition,calculateInputHeight,calculatePadding,adjustPaddingOut,calculateOutlinedIconAndAffixTopPosition,getOutlinedInputColors,getConstants}from'./helpers';import InputLabel from'./Label/InputLabel';import LabelBackground from'./Label/LabelBackground';const TextInputOutlined=_ref=>{let{disabled=false,editable=true,label,error=false,selectionColor:customSelectionColor,cursorColor,outlineColor:customOutlineColor,activeOutlineColor,outlineStyle,textColor,dense,style,theme,render=props=>React.createElement(NativeTextInput,props),multiline=false,parentState,innerRef,onFocus,forceFocus,onBlur,onChangeText,onLayoutAnimatedText,onLabelTextLayout,onLeftAffixLayoutChange,onRightAffixLayoutChange,onInputLayout,onLayout,left,right,placeholderTextColor,testID='text-input-outlined',contentStyle,scaledLabel}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const adornmentConfig=getAdornmentConfig({left,right});const{colors,isV3,roundness}=theme;const font=isV3?theme.fonts.bodyLarge:theme.fonts.regular;const hasActiveOutline=parentState.focused||error;const{INPUT_PADDING_HORIZONTAL,MIN_HEIGHT,ADORNMENT_OFFSET,MIN_WIDTH}=getConstants(isV3);const _ref4=StyleSheet.flatten(style)||{},{fontSize:fontSizeStyle,fontWeight,lineHeight:lineHeightStyle,height,backgroundColor=colors===null||colors===void 0?void 0:colors.background,textAlign}=_ref4,viewStyle=_objectWithoutPropertiesLoose(_ref4,_excluded2);const fontSize=fontSizeStyle||MAXIMIZED_LABEL_FONT_SIZE;const lineHeight=lineHeightStyle||(true?fontSize*1.2:undefined);const{inputTextColor,activeColor,outlineColor,placeholderColor,errorColor,selectionColor}=getOutlinedInputColors({activeOutlineColor,customOutlineColor,customSelectionColor,textColor,disabled,error,theme});const densePaddingTop=label?LABEL_PADDING_TOP_DENSE:0;const paddingTop=label?LABEL_PADDING_TOP:0;const yOffset=label?OUTLINE_MINIMIZED_LABEL_Y_OFFSET:0;const labelScale=MINIMIZED_LABEL_FONT_SIZE/fontSize;const fontScale=MAXIMIZED_LABEL_FONT_SIZE/fontSize;const labelWidth=parentState.labelLayout.width;const labelHeight=parentState.labelLayout.height;const labelHalfWidth=labelWidth/2;const labelHalfHeight=labelHeight/2;const baseLabelTranslateX=(I18nManager.getConstants().isRTL?1:-1)*(labelHalfWidth-labelScale*labelWidth/2-(fontSize-MINIMIZED_LABEL_FONT_SIZE)*labelScale);let labelTranslationXOffset=0;const isAdornmentLeftIcon=adornmentConfig.some(_ref2=>{let{side,type}=_ref2;return side===AdornmentSide.Left&&type===AdornmentType.Icon;});const isAdornmentRightIcon=adornmentConfig.some(_ref3=>{let{side,type}=_ref3;return side===AdornmentSide.Right&&type===AdornmentType.Icon;});if(isAdornmentLeftIcon){labelTranslationXOffset=(I18nManager.getConstants().isRTL?-1:1)*(ADORNMENT_SIZE+ADORNMENT_OFFSET-(isV3?0:8));}const minInputHeight=(dense?MIN_DENSE_HEIGHT_OUTLINED:MIN_HEIGHT)-paddingTop;const inputHeight=calculateInputHeight(labelHeight,height,minInputHeight);const topPosition=calculateLabelTopPosition(labelHeight,inputHeight,paddingTop);if(height&&typeof height!=='number'){console.warn('Currently we support only numbers in height prop');}const paddingSettings={height:height?+height:null,labelHalfHeight,offset:paddingTop,multiline:multiline?multiline:null,dense:dense?dense:null,topPosition,fontSize,lineHeight,label,scale:fontScale,isAndroid:false,styles:StyleSheet.flatten(dense?styles.inputOutlinedDense:styles.inputOutlined)};const pad=calculatePadding(paddingSettings);const paddingOut=adjustPaddingOut(Object.assign({},paddingSettings,{pad}));const baseLabelTranslateY=-labelHalfHeight-(topPosition+yOffset);const{current:placeholderOpacityAnims}=React.useRef([new Animated.Value(0),new Animated.Value(1)]);const placeholderOpacity=hasActiveOutline?parentState.labeled:placeholderOpacityAnims[parentState.labelLayout.measured?1:0];const placeholderStyle={position:'absolute',left:0,paddingHorizontal:INPUT_PADDING_HORIZONTAL};const placeholderTextColorBasedOnState=parentState.displayPlaceholder?placeholderTextColor??placeholderColor:'transparent';const labelBackgroundColor=backgroundColor==='transparent'?theme.colors.background:backgroundColor;const labelProps={label,onLayoutAnimatedText,onLabelTextLayout,placeholderOpacity,labelError:error,placeholderStyle,baseLabelTranslateY,baseLabelTranslateX,font,fontSize,lineHeight,fontWeight,labelScale,wiggleOffsetX:LABEL_WIGGLE_X_OFFSET,topPosition,hasActiveOutline,activeColor,placeholderColor,backgroundColor:labelBackgroundColor,errorColor,labelTranslationXOffset,roundness,maxFontSizeMultiplier:rest.maxFontSizeMultiplier,testID,contentStyle,inputContainerLayout:{width:parentState.inputContainerLayout.width+(isAdornmentRightIcon||isAdornmentLeftIcon?INPUT_PADDING_HORIZONTAL:0)},opacity:parentState.value||parentState.focused?parentState.labelLayout.measured?1:0:1,isV3};const onLayoutChange=React.useCallback(e=>{onInputLayout(e);onLayout===null||onLayout===void 0?void 0:onLayout(e);},[onLayout,onInputLayout]);const minHeight=height||(dense?MIN_DENSE_HEIGHT_OUTLINED:MIN_HEIGHT);const outlinedHeight=inputHeight+(dense?densePaddingTop/2:paddingTop);const{leftLayout,rightLayout}=parentState;const leftAffixTopPosition=calculateOutlinedIconAndAffixTopPosition({height:outlinedHeight,affixHeight:leftLayout.height||0,labelYOffset:-yOffset});const rightAffixTopPosition=calculateOutlinedIconAndAffixTopPosition({height:outlinedHeight,affixHeight:rightLayout.height||0,labelYOffset:-yOffset});const iconTopPosition=calculateOutlinedIconAndAffixTopPosition({height:outlinedHeight,affixHeight:ADORNMENT_SIZE,labelYOffset:-yOffset});const rightAffixWidth=right?rightLayout.width||ADORNMENT_SIZE:ADORNMENT_SIZE;const leftAffixWidth=left?leftLayout.width||ADORNMENT_SIZE:ADORNMENT_SIZE;const adornmentStyleAdjustmentForNativeInput=getAdornmentStyleAdjustmentForNativeInput({adornmentConfig,rightAffixWidth,leftAffixWidth,mode:'outlined',isV3});const affixTopPosition={[AdornmentSide.Left]:leftAffixTopPosition,[AdornmentSide.Right]:rightAffixTopPosition};const onAffixChange={[AdornmentSide.Left]:onLeftAffixLayoutChange,[AdornmentSide.Right]:onRightAffixLayoutChange};let adornmentProps={adornmentConfig,forceFocus,topPosition:{[AdornmentType.Icon]:iconTopPosition,[AdornmentType.Affix]:affixTopPosition},onAffixChange,isTextInputFocused:parentState.focused,maxFontSizeMultiplier:rest.maxFontSizeMultiplier,disabled};if(adornmentConfig.length){adornmentProps=Object.assign({},adornmentProps,{left,right,textStyle:Object.assign({},font,{fontSize,lineHeight,fontWeight}),visible:parentState.labeled});}return React.createElement(View,{style:viewStyle},React.createElement(Outline,{isV3:isV3,style:outlineStyle,label:label,roundness:roundness,hasActiveOutline:hasActiveOutline,focused:parentState.focused,activeColor:activeColor,outlineColor:outlineColor,backgroundColor:backgroundColor}),React.createElement(View,{style:[styles.labelContainer,{paddingTop,minHeight}]},label?React.createElement(InputLabel,_extends({labeled:parentState.labeled,error:parentState.error,focused:parentState.focused,scaledLabel:scaledLabel,wiggle:Boolean(parentState.value&&labelProps.labelError),labelLayoutMeasured:parentState.labelLayout.measured,labelLayoutWidth:parentState.labelLayout.width,labelLayoutHeight:parentState.labelLayout.height},labelProps,{labelBackground:LabelBackground,maxFontSizeMultiplier:rest.maxFontSizeMultiplier})):null,render===null||render===void 0?void 0:render(Object.assign({},rest,{ref:innerRef,onLayout:onLayoutChange,onChangeText,placeholder:rest.placeholder,editable:!disabled&&editable,selectionColor,cursorColor:typeof cursorColor==='undefined'?activeColor:cursorColor,placeholderTextColor:placeholderTextColorBasedOnState,onFocus,onBlur,underlineColorAndroid:'transparent',multiline,style:[styles.input,!multiline||multiline&&height?{height:inputHeight}:{},paddingOut,Object.assign({},font,{fontSize,lineHeight,fontWeight,color:inputTextColor,textAlignVertical:multiline?'top':'center',textAlign:textAlign?textAlign:I18nManager.getConstants().isRTL?'right':'left',paddingHorizontal:INPUT_PADDING_HORIZONTAL,minWidth:Math.min(parentState.labelTextLayout.width+2*INPUT_PADDING_HORIZONTAL,MIN_WIDTH)}),true&&{outline:'none'},adornmentStyleAdjustmentForNativeInput,contentStyle],testID}))),React.createElement(TextInputAdornment,adornmentProps));};export default TextInputOutlined;const styles=StyleSheet.create({labelContainer:{paddingBottom:0,flexGrow:1},input:{margin:0,flexGrow:1},inputOutlined:{paddingTop:8,paddingBottom:8},inputOutlinedDense:{paddingTop:4,paddingBottom:4}});","map":{"version":3,"names":["React","Animated","View","NativeTextInput","StyleSheet","I18nManager","Platform","Outline","AdornmentType","AdornmentSide","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP_DENSE","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","calculateOutlinedIconAndAffixTopPosition","getOutlinedInputColors","getConstants","InputLabel","LabelBackground","TextInputOutlined","_ref","disabled","editable","label","error","selectionColor","customSelectionColor","cursorColor","outlineColor","customOutlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","render","props","createElement","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLabelTextLayout","onLeftAffixLayoutChange","onRightAffixLayoutChange","onInputLayout","onLayout","left","right","placeholderTextColor","testID","contentStyle","scaledLabel","rest","_objectWithoutPropertiesLoose","_excluded","adornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","MIN_WIDTH","_ref4","flatten","fontSize","fontSizeStyle","fontWeight","lineHeight","lineHeightStyle","height","backgroundColor","background","textAlign","viewStyle","_excluded2","undefined","inputTextColor","activeColor","placeholderColor","errorColor","densePaddingTop","paddingTop","yOffset","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","_ref2","side","type","Left","Icon","isAdornmentRightIcon","_ref3","Right","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","Object","assign","baseLabelTranslateY","current","placeholderOpacityAnims","useRef","Value","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","placeholderTextColorBasedOnState","displayPlaceholder","labelBackgroundColor","labelProps","labelError","wiggleOffsetX","maxFontSizeMultiplier","inputContainerLayout","opacity","value","onLayoutChange","useCallback","e","minHeight","outlinedHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","_extends","wiggle","Boolean","labelLayoutMeasured","labelLayoutWidth","labelLayoutHeight","labelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","minWidth","Math","min","labelTextLayout","outline","create","paddingBottom","flexGrow","margin"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\TextInput\\TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n  LayoutChangeEvent,\n} from 'react-native';\n\nimport { Outline } from './Addons/Outline';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  outlineStyle,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLabelTextLayout,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  onInputLayout,\n  onLayout,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  contentStyle,\n  scaledLabel,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET, MIN_WIDTH } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight: lineHeightStyle,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  const lineHeight =\n    lineHeightStyle || (Platform.OS === 'web' ? fontSize * 1.2 : undefined);\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n    selectionColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const densePaddingTop = label ? LABEL_PADDING_TOP_DENSE : 0;\n  const paddingTop = label ? LABEL_PADDING_TOP : 0;\n  const yOffset = label ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET : 0;\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  const isAdornmentRightIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Right && type === AdornmentType.Icon\n  );\n\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - paddingTop;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    paddingTop\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: paddingTop,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY = -labelHalfHeight - (topPosition + yOffset);\n\n  const { current: placeholderOpacityAnims } = React.useRef([\n    new Animated.Value(0),\n    new Animated.Value(1),\n  ]);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : placeholderOpacityAnims[parentState.labelLayout.measured ? 1 : 0];\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const placeholderTextColorBasedOnState = parentState.displayPlaceholder\n    ? placeholderTextColor ?? placeholderColor\n    : 'transparent';\n\n  const labelBackgroundColor: ColorValue =\n    backgroundColor === 'transparent'\n      ? theme.colors.background\n      : backgroundColor;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    inputContainerLayout: {\n      width:\n        parentState.inputContainerLayout.width +\n        (isAdornmentRightIcon || isAdornmentLeftIcon\n          ? INPUT_PADDING_HORIZONTAL\n          : 0),\n    },\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n    isV3,\n  };\n\n  const onLayoutChange = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      onInputLayout(e);\n      onLayout?.(e);\n    },\n    [onLayout, onInputLayout]\n  );\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight + (dense ? densePaddingTop / 2 : paddingTop);\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -yOffset,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -yOffset,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -yOffset,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        style={outlineStyle}\n        label={label}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            paddingTop,\n            minHeight,\n          },\n        ]}\n      >\n        {label ? (\n          <InputLabel\n            labeled={parentState.labeled}\n            error={parentState.error}\n            focused={parentState.focused}\n            scaledLabel={scaledLabel}\n            wiggle={Boolean(parentState.value && labelProps.labelError)}\n            labelLayoutMeasured={parentState.labelLayout.measured}\n            labelLayoutWidth={parentState.labelLayout.width}\n            labelLayoutHeight={parentState.labelLayout.height}\n            {...labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n        ) : null}\n        {render?.({\n          ...rest,\n          ref: innerRef,\n          onLayout: onLayoutChange,\n          onChangeText,\n          placeholder: rest.placeholder,\n          editable: !disabled && editable,\n          selectionColor,\n          cursorColor:\n            typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n          placeholderTextColor: placeholderTextColorBasedOnState,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            !multiline || (multiline && height) ? { height: inputHeight } : {},\n            paddingOut,\n            {\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n              paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              minWidth: Math.min(\n                parentState.labelTextLayout.width +\n                  2 * INPUT_PADDING_HORIZONTAL,\n                MIN_WIDTH\n              ),\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n            contentStyle,\n          ],\n          testID,\n        } as RenderProps)}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0,\n    flexGrow: 1,\n  },\n  input: {\n    margin: 0,\n    flexGrow: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"s8BAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,QAAA,qDAAAC,IAAA,iDAAAC,eAAA,sDAAAC,UAAA,uDAAAC,WAAA,wDAAAC,QAAA,8CAa9B,OAASC,OAAO,KAAQ,kBAAkB,CAC1C,OAASC,aAAa,CAAEC,aAAa,KAAQ,mBAAmB,CAChE,MAAO,CAAAC,kBAAkB,EACvBC,kBAAkB,CAClBC,yCAAyC,KAEpC,gCAAgC,CACvC,OACEC,yBAAyB,CACzBC,yBAAyB,CACzBC,qBAAqB,CACrBC,cAAc,CACdC,gCAAgC,CAChCC,iBAAiB,CACjBC,yBAAyB,CACzBC,uBAAuB,KAClB,aAAa,CACpB,OACEC,yBAAyB,CACzBC,oBAAoB,CACpBC,gBAAgB,CAChBC,gBAAgB,CAEhBC,wCAAwC,CACxCC,sBAAsB,CACtBC,YAAY,KACP,WAAW,CAClB,MAAO,CAAAC,UAAU,KAAM,oBAAoB,CAC3C,MAAO,CAAAC,eAAe,KAAM,yBAAyB,CAGrD,KAAM,CAAAC,iBAAiB,CAAGC,IAAA,EAoCC,IApCA,CACzBC,QAAQ,CAAG,KAAK,CAChBC,QAAQ,CAAG,IAAI,CACfC,KAAK,CACLC,KAAK,CAAG,KAAK,CACbC,cAAc,CAAEC,oBAAoB,CACpCC,WAAW,CAEXC,YAAY,CAAEC,kBAAkB,CAChCC,kBAAkB,CAClBC,YAAY,CACZC,SAAS,CACTC,KAAK,CACLC,KAAK,CACLC,KAAK,CACLC,MAAM,CAAIC,KAAkB,EAAKhD,KAAA,CAAAiD,aAAA,CAAC9C,eAAe,CAAK6C,KAAQ,CAAC,CAC/DE,SAAS,CAAG,KAAK,CACjBC,WAAW,CACXC,QAAQ,CACRC,OAAO,CACPC,UAAU,CACVC,MAAM,CACNC,YAAY,CACZC,oBAAoB,CACpBC,iBAAiB,CACjBC,uBAAuB,CACvBC,wBAAwB,CACxBC,aAAa,CACbC,QAAQ,CACRC,IAAI,CACJC,KAAK,CACLC,oBAAoB,CACpBC,MAAM,CAAG,qBAAqB,CAC9BC,YAAY,CACZC,WAEmB,CAAC,CAAArC,IAAA,CADjBsC,IAAA,CAAAC,6BAAA,CACiBvC,IAAA,CAAAwC,SAAA,EACpB,KAAM,CAAAC,eAAe,CAAG7D,kBAAkB,CAAC,CAAEoD,IAAI,CAAEC,KAAM,CAAC,CAAC,CAE3D,KAAM,CAAES,MAAM,CAAEC,IAAI,CAAEC,SAAU,CAAC,CAAG7B,KAAK,CACzC,KAAM,CAAA8B,IAAI,CAAGF,IAAI,CAAG5B,KAAK,CAAC+B,KAAK,CAACC,SAAS,CAAGhC,KAAK,CAAC+B,KAAK,CAACE,OAAO,CAC/D,KAAM,CAAAC,gBAAgB,CAAG7B,WAAW,CAAC8B,OAAO,EAAI9C,KAAK,CAErD,KAAM,CAAE+C,wBAAwB,CAAEC,UAAU,CAAEC,gBAAgB,CAAEC,SAAU,CAAC,CACzE1D,YAAY,CAAC+C,IAAI,CAAC,CAEpB,MAAAY,KAAA,CAQKlF,UAAU,CAACmF,OAAO,CAAC1C,KAAK,CAAC,EAAI,CAAC,CAAe,CAR5C,CACJ2C,QAAQ,CAAEC,aAAa,CACvBC,UAAU,CACVC,UAAU,CAAEC,eAAe,CAC3BC,MAAM,CACNC,eAAe,CAAGrB,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEsB,UAAU,CACpCC,SAEF,CAAC,CAAAV,KAAA,CADIW,SAAA,CAAA3B,6BAAA,CAAAgB,KAAA,CAAAY,UAAA,EAEL,KAAM,CAAAV,QAAQ,CAAGC,aAAa,EAAI5E,yBAAyB,CAC3D,KAAM,CAAA8E,UAAU,CACdC,eAAe,GAAK,KAAwBJ,QAAQ,CAAG,GAAG,CAAGW,SAAS,CAAC,CAEzE,KAAM,CACJC,cAAc,CACdC,WAAW,CACX9D,YAAY,CACZ+D,gBAAgB,CAChBC,UAAU,CACVnE,cACF,CAAC,CAAGV,sBAAsB,CAAC,CACzBe,kBAAkB,CAClBD,kBAAkB,CAClBH,oBAAoB,CACpBM,SAAS,CACTX,QAAQ,CACRG,KAAK,CACLW,KACF,CAAC,CAAC,CAEF,KAAM,CAAA0D,eAAe,CAAGtE,KAAK,CAAGd,uBAAuB,CAAG,CAAC,CAC3D,KAAM,CAAAqF,UAAU,CAAGvE,KAAK,CAAGhB,iBAAiB,CAAG,CAAC,CAChD,KAAM,CAAAwF,OAAO,CAAGxE,KAAK,CAAGjB,gCAAgC,CAAG,CAAC,CAE5D,KAAM,CAAA0F,UAAU,CAAG7F,yBAAyB,CAAG0E,QAAQ,CACvD,KAAM,CAAAoB,SAAS,CAAG/F,yBAAyB,CAAG2E,QAAQ,CAEtD,KAAM,CAAAqB,UAAU,CAAG1D,WAAW,CAAC2D,WAAW,CAACC,KAAK,CAChD,KAAM,CAAAC,WAAW,CAAG7D,WAAW,CAAC2D,WAAW,CAACjB,MAAM,CAClD,KAAM,CAAAoB,cAAc,CAAGJ,UAAU,CAAG,CAAC,CACrC,KAAM,CAAAK,eAAe,CAAGF,WAAW,CAAG,CAAC,CAEvC,KAAM,CAAAG,mBAAmB,CACvB,CAAC9G,WAAW,CAACsB,YAAY,CAAC,CAAC,CAACyF,KAAK,CAAG,CAAC,CAAG,CAAC,CAAC,GACzCH,cAAc,CACZN,UAAU,CAAGE,UAAU,CAAI,CAAC,CAC7B,CAACrB,QAAQ,CAAG1E,yBAAyB,EAAI6F,UAAU,CAAC,CAExD,GAAI,CAAAU,uBAAuB,CAAG,CAAC,CAC/B,KAAM,CAAAC,mBAAmB,CAAG9C,eAAe,CAAC+C,IAAI,CAC9CC,KAAA,MAAC,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAAF,KAAA,OACb,CAAAC,IAAI,GAAKhH,aAAa,CAACkH,IAAI,EAAID,IAAI,GAAKlH,aAAa,CAACoH,IAAI,EAC9D,CAAC,CACD,KAAM,CAAAC,oBAAoB,CAAGrD,eAAe,CAAC+C,IAAI,CAC/CO,KAAA,MAAC,CAAEL,IAAI,CAAEC,IAAK,CAAC,CAAAI,KAAA,OACb,CAAAL,IAAI,GAAKhH,aAAa,CAACsH,KAAK,EAAIL,IAAI,GAAKlH,aAAa,CAACoH,IAAI,EAC/D,CAAC,CAED,GAAIN,mBAAmB,CAAE,CACvBD,uBAAuB,CACrB,CAAChH,WAAW,CAACsB,YAAY,CAAC,CAAC,CAACyF,KAAK,CAAG,CAAC,CAAC,CAAG,CAAC,GACzCpG,cAAc,CAAGoE,gBAAgB,EAAIV,IAAI,CAAG,CAAC,CAAG,CAAC,CAAC,CAAC,CACxD,CAEA,KAAM,CAAAsD,cAAc,CAClB,CAACpF,KAAK,CAAGzB,yBAAyB,CAAGgE,UAAU,EAAIsB,UAAU,CAE/D,KAAM,CAAAwB,WAAW,CAAG3G,oBAAoB,CAAC0F,WAAW,CAAEnB,MAAM,CAAEmC,cAAc,CAAC,CAE7E,KAAM,CAAAE,WAAW,CAAG7G,yBAAyB,CAC3C2F,WAAW,CACXiB,WAAW,CACXxB,UACF,CAAC,CAED,GAAIZ,MAAM,EAAI,MAAO,CAAAA,MAAM,GAAK,QAAQ,CAAE,CAExCsC,OAAO,CAACC,IAAI,CAAC,kDAAkD,CAAC,CAClE,CAEA,KAAM,CAAAC,eAAe,CAAG,CACtBxC,MAAM,CAAEA,MAAM,CAAG,CAACA,MAAM,CAAG,IAAI,CAC/BqB,eAAe,CACfoB,MAAM,CAAE7B,UAAU,CAClBvD,SAAS,CAAEA,SAAS,CAAGA,SAAS,CAAG,IAAI,CACvCN,KAAK,CAAEA,KAAK,CAAGA,KAAK,CAAG,IAAI,CAC3BsF,WAAW,CACX1C,QAAQ,CACRG,UAAU,CACVzD,KAAK,CACLqG,KAAK,CAAE3B,SAAS,CAChB4B,SAAS,MAA2B,CACpCC,MAAM,CAAErI,UAAU,CAACmF,OAAO,CACxB3C,KAAK,CAAG6F,MAAM,CAACC,kBAAkB,CAAGD,MAAM,CAACE,aAC7C,CACF,CAAC,CAED,KAAM,CAAAC,GAAG,CAAGrH,gBAAgB,CAAC8G,eAAe,CAAC,CAE7C,KAAM,CAAAQ,UAAU,CAAGrH,gBAAgB,CAAAsH,MAAA,CAAAC,MAAA,IAAMV,eAAe,EAAEO,GAAA,EAAK,CAAC,CAEhE,KAAM,CAAAI,mBAAmB,CAAG,CAAC9B,eAAe,EAAIgB,WAAW,CAAGxB,OAAO,CAAC,CAEtE,KAAM,CAAEuC,OAAO,CAAEC,uBAAwB,CAAC,CAAGlJ,KAAK,CAACmJ,MAAM,CAAC,CACxD,GAAI,CAAAlJ,QAAQ,CAACmJ,KAAK,CAAC,CAAC,CAAC,CACrB,GAAI,CAAAnJ,QAAQ,CAACmJ,KAAK,CAAC,CAAC,CAAC,CACtB,CAAC,CAEF,KAAM,CAAAC,kBAAkB,CAAGrE,gBAAgB,CACvC7B,WAAW,CAACmG,OAAO,CACnBJ,uBAAuB,CAAC/F,WAAW,CAAC2D,WAAW,CAACyC,QAAQ,CAAG,CAAC,CAAG,CAAC,CAAC,CAErE,KAAM,CAAAC,gBAAgB,CAAG,CACvBC,QAAQ,CAAE,UAAU,CACpB1F,IAAI,CAAE,CAAC,CACP2F,iBAAiB,CAAExE,wBACrB,CAAC,CAED,KAAM,CAAAyE,gCAAgC,CAAGxG,WAAW,CAACyG,kBAAkB,CACnE3F,oBAAoB,EAAIqC,gBAAgB,CACxC,aAAa,CAEjB,KAAM,CAAAuD,oBAAgC,CACpC/D,eAAe,GAAK,aAAa,CAC7BhD,KAAK,CAAC2B,MAAM,CAACsB,UAAU,CACvBD,eAAe,CAErB,KAAM,CAAAgE,UAAU,CAAG,CACjB5H,KAAK,CACLuB,oBAAoB,CACpBC,iBAAiB,CACjB2F,kBAAkB,CAClBU,UAAU,CAAE5H,KAAK,CACjBqH,gBAAgB,CAChBR,mBAAmB,CACnB7B,mBAAmB,CACnBvC,IAAI,CACJY,QAAQ,CACRG,UAAU,CACVD,UAAU,CACViB,UAAU,CACVqD,aAAa,CAAEjJ,qBAAqB,CACpCmH,WAAW,CACXlD,gBAAgB,CAChBqB,WAAW,CACXC,gBAAgB,CAChBR,eAAe,CAAE+D,oBAAoB,CACrCtD,UAAU,CACVc,uBAAuB,CACvB1C,SAAS,CACTsF,qBAAqB,CAAE5F,IAAI,CAAC4F,qBAAqB,CACjD/F,MAAM,CACNC,YAAY,CACZ+F,oBAAoB,CAAE,CACpBnD,KAAK,CACH5D,WAAW,CAAC+G,oBAAoB,CAACnD,KAAK,EACrCc,oBAAoB,EAAIP,mBAAmB,CACxCpC,wBAAwB,CACxB,CAAC,CACT,CAAC,CACDiF,OAAO,CACLhH,WAAW,CAACiH,KAAK,EAAIjH,WAAW,CAAC8B,OAAO,CACpC9B,WAAW,CAAC2D,WAAW,CAACyC,QAAQ,CAC9B,CAAC,CACD,CAAC,CACH,CAAC,CACP7E,IACF,CAAC,CAED,KAAM,CAAA2F,cAAc,CAAGrK,KAAK,CAACsK,WAAW,CACrCC,CAAoB,EAAK,CACxB1G,aAAa,CAAC0G,CAAC,CAAC,CAChBzG,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAGyG,CAAC,CAAC,CACf,CAAC,CACD,CAACzG,QAAQ,CAAED,aAAa,CAC1B,CAAC,CAED,KAAM,CAAA2G,SAAS,CAAI3E,MAAM,GACtBjD,KAAK,CAAGzB,yBAAyB,CAAGgE,UAAU,CAAY,CAE7D,KAAM,CAAAsF,cAAc,CAClBxC,WAAW,EAAIrF,KAAK,CAAG4D,eAAe,CAAG,CAAC,CAAGC,UAAU,CAAC,CAC1D,KAAM,CAAEiE,UAAU,CAAEC,WAAY,CAAC,CAAGxH,WAAW,CAE/C,KAAM,CAAAyH,oBAAoB,CAAGnJ,wCAAwC,CAAC,CACpEoE,MAAM,CAAE4E,cAAc,CACtBI,WAAW,CAAEH,UAAU,CAAC7E,MAAM,EAAI,CAAC,CACnCiF,YAAY,CAAE,CAACpE,OACjB,CAAC,CAAC,CAEF,KAAM,CAAAqE,qBAAqB,CAAGtJ,wCAAwC,CAAC,CACrEoE,MAAM,CAAE4E,cAAc,CACtBI,WAAW,CAAEF,WAAW,CAAC9E,MAAM,EAAI,CAAC,CACpCiF,YAAY,CAAE,CAACpE,OACjB,CAAC,CAAC,CACF,KAAM,CAAAsE,eAAe,CAAGvJ,wCAAwC,CAAC,CAC/DoE,MAAM,CAAE4E,cAAc,CACtBI,WAAW,CAAE7J,cAAc,CAC3B8J,YAAY,CAAE,CAACpE,OACjB,CAAC,CAAC,CAEF,KAAM,CAAAuE,eAAe,CAAGjH,KAAK,CACzB2G,WAAW,CAAC5D,KAAK,EAAI/F,cAAc,CACnCA,cAAc,CAElB,KAAM,CAAAkK,cAAc,CAAGnH,IAAI,CACvB2G,UAAU,CAAC3D,KAAK,EAAI/F,cAAc,CAClCA,cAAc,CAElB,KAAM,CAAAmK,sCAAsC,CAC1CvK,yCAAyC,CAAC,CACxC4D,eAAe,CACfyG,eAAe,CACfC,cAAc,CACdE,IAAI,CAAE,UAAU,CAChB1G,IACF,CAAC,CAAC,CACJ,KAAM,CAAA2G,gBAAgB,CAAG,CACvB,CAAC5K,aAAa,CAACkH,IAAI,EAAGiD,oBAAoB,CAC1C,CAACnK,aAAa,CAACsH,KAAK,EAAGgD,qBACzB,CAAC,CACD,KAAM,CAAAO,aAAa,CAAG,CACpB,CAAC7K,aAAa,CAACkH,IAAI,EAAGhE,uBAAuB,CAC7C,CAAClD,aAAa,CAACsH,KAAK,EAAGnE,wBACzB,CAAC,CAED,GAAI,CAAA2H,cAAuC,CAAG,CAC5C/G,eAAe,CACflB,UAAU,CACV4E,WAAW,CAAE,CACX,CAAC1H,aAAa,CAACoH,IAAI,EAAGoD,eAAe,CACrC,CAACxK,aAAa,CAACgL,KAAK,EAAGH,gBACzB,CAAC,CACDC,aAAa,CACbG,kBAAkB,CAAEtI,WAAW,CAAC8B,OAAO,CACvCgF,qBAAqB,CAAE5F,IAAI,CAAC4F,qBAAqB,CACjDjI,QACF,CAAC,CACD,GAAIwC,eAAe,CAACkH,MAAM,CAAE,CAC1BH,cAAc,CAAAzC,MAAA,CAAAC,MAAA,IACTwC,cAAc,EACjBxH,IAAI,CACJC,KAAK,CACL2H,SAAS,CAAA7C,MAAA,CAAAC,MAAA,IAAOnE,IAAI,EAAEY,QAAQ,CAAEG,UAAU,CAAED,UAAA,EAAY,CACxDkG,OAAO,CAAEzI,WAAW,CAACmG,OAAA,EACtB,CACH,CAEA,MACE,CAAAtJ,KAAA,CAAAiD,aAAA,CAAC/C,IAAI,EAAC2C,KAAK,CAAEoD,SAAU,EAMrBjG,KAAA,CAAAiD,aAAA,CAAC1C,OAAO,EACNmE,IAAI,CAAEA,IAAK,CACX7B,KAAK,CAAEH,YAAa,CACpBR,KAAK,CAAEA,KAAM,CACbyC,SAAS,CAAEA,SAAU,CACrBK,gBAAgB,CAAEA,gBAAiB,CACnCC,OAAO,CAAE9B,WAAW,CAAC8B,OAAQ,CAC7BoB,WAAW,CAAEA,WAAY,CACzB9D,YAAY,CAAEA,YAAa,CAC3BuD,eAAe,CAAEA,eAAgB,CAClC,CAAC,CACF9F,KAAA,CAAAiD,aAAA,CAAC/C,IAAI,EACH2C,KAAK,CAAE,CACL4F,MAAM,CAACoD,cAAc,CACrB,CACEpF,UAAU,CACV+D,SACF,CAAC,CACD,EAEDtI,KAAK,CACJlC,KAAA,CAAAiD,aAAA,CAACrB,UAAU,CAAAkK,QAAA,EACTxC,OAAO,CAAEnG,WAAW,CAACmG,OAAQ,CAC7BnH,KAAK,CAAEgB,WAAW,CAAChB,KAAM,CACzB8C,OAAO,CAAE9B,WAAW,CAAC8B,OAAQ,CAC7Bb,WAAW,CAAEA,WAAY,CACzB2H,MAAM,CAAEC,OAAO,CAAC7I,WAAW,CAACiH,KAAK,EAAIN,UAAU,CAACC,UAAU,CAAE,CAC5DkC,mBAAmB,CAAE9I,WAAW,CAAC2D,WAAW,CAACyC,QAAS,CACtD2C,gBAAgB,CAAE/I,WAAW,CAAC2D,WAAW,CAACC,KAAM,CAChDoF,iBAAiB,CAAEhJ,WAAW,CAAC2D,WAAW,CAACjB,MAAO,EAC9CiE,UAAU,EACdsC,eAAe,CAAEvK,eAAgB,CACjCoI,qBAAqB,CAAE5F,IAAI,CAAC4F,qBAAsB,EACnD,CAAC,CACA,IAAI,CACPlH,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAA+F,MAAA,CAAAC,MAAA,IACF1E,IAAI,EACPgI,GAAG,CAAEjJ,QAAQ,CACbU,QAAQ,CAAEuG,cAAc,CACxB7G,YAAY,CACZ8I,WAAW,CAAEjI,IAAI,CAACiI,WAAW,CAC7BrK,QAAQ,CAAE,CAACD,QAAQ,EAAIC,QAAQ,CAC/BG,cAAc,CACdE,WAAW,CACT,MAAO,CAAAA,WAAW,GAAK,WAAW,CAAG+D,WAAW,CAAG/D,WAAW,CAChE2B,oBAAoB,CAAE0F,gCAAgC,CACtDtG,OAAO,CACPE,MAAM,CACNgJ,qBAAqB,CAAE,aAAa,CACpCrJ,SAAS,CACTL,KAAK,CAAE,CACL4F,MAAM,CAAC+D,KAAK,CACZ,CAACtJ,SAAS,EAAKA,SAAS,EAAI2C,MAAO,CAAG,CAAEA,MAAM,CAAEoC,WAAY,CAAC,CAAG,CAAC,CAAC,CAClEY,UAAU,CAAAC,MAAA,CAAAC,MAAA,IAELnE,IAAI,EACPY,QAAQ,CACRG,UAAU,CACVD,UAAU,CACV+G,KAAK,CAAErG,cAAc,CACrBsG,iBAAiB,CAAExJ,SAAS,CAAG,KAAK,CAAG,QAAQ,CAC/C8C,SAAS,CAAEA,SAAS,CAChBA,SAAS,CACT3F,WAAW,CAACsB,YAAY,CAAC,CAAC,CAACyF,KAAK,CAChC,OAAO,CACP,MAAM,CACVsC,iBAAiB,CAAExE,wBAAwB,CAC3CyH,QAAQ,CAAEC,IAAI,CAACC,GAAG,CAChB1J,WAAW,CAAC2J,eAAe,CAAC/F,KAAK,CAC/B,CAAC,CAAG7B,wBAAwB,CAC9BG,SACF,IAEF,MAAyB,CAAE0H,OAAO,CAAE,MAAO,CAAC,CAC5C5B,sCAAsC,CACtChH,YAAY,CACb,CACDD,MAAA,EACc,CACZ,CAAC,CACPlE,KAAA,CAAAiD,aAAA,CAACvC,kBAAkB,CAAK6K,cAAiB,CACrC,CAAC,CAEX,CAAC,CAED,cAAe,CAAAzJ,iBAAiB,CAEhC,KAAM,CAAA2G,MAAM,CAAGrI,UAAU,CAAC4M,MAAM,CAAC,CAC/BnB,cAAc,CAAE,CACdoB,aAAa,CAAE,CAAC,CAChBC,QAAQ,CAAE,CACZ,CAAC,CACDV,KAAK,CAAE,CACLW,MAAM,CAAE,CAAC,CACTD,QAAQ,CAAE,CACZ,CAAC,CACDvE,aAAa,CAAE,CACblC,UAAU,CAAE,CAAC,CACbwG,aAAa,CAAE,CACjB,CAAC,CACDvE,kBAAkB,CAAE,CAClBjC,UAAU,CAAE,CAAC,CACbwG,aAAa,CAAE,CACjB,CACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}