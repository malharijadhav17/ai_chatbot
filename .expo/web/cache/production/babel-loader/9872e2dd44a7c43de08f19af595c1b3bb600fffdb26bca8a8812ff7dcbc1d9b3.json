{"ast":null,"code":"import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Image from\"react-native-web/dist/exports/Image\";import{useInternalTheme}from'../../core/theming';const ListImage=_ref=>{let{style,source,variant='image',theme:themeOverrides}=_ref;const theme=useInternalTheme(themeOverrides);const getStyles=()=>{if(variant==='video'){if(!theme.isV3){return[style,styles.video];}return[style,styles.videoV3];}return[style,styles.image];};return React.createElement(Image,{style:getStyles(),source:source,accessibilityIgnoresInvertColors:true,testID:\"list-image\"});};const styles=StyleSheet.create({image:{width:56,height:56},video:{width:100,height:64,marginLeft:0},videoV3:{width:114,height:64,marginLeft:0}});ListImage.displayName='List.Image';export default ListImage;","map":{"version":3,"names":["React","StyleSheet","Image","useInternalTheme","ListImage","_ref","style","source","variant","theme","themeOverrides","getStyles","isV3","styles","video","videoV3","image","createElement","accessibilityIgnoresInvertColors","testID","create","width","height","marginLeft","displayName"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\List\\ListImage.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  Image,\n  ImageSourcePropType,\n  ImageStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\nexport type Props = {\n  source: ImageSourcePropType;\n  variant?: 'image' | 'video';\n  style?: StyleProp<ImageStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * A component to show image in a list item.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <>\n *     <List.Image variant=\"image\" source={{uri: 'https://www.someurl.com/apple'}} />\n *     <List.Image variant=\"video\" source={require('../../some-apple.png')} />\n *   </>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ListImage = ({\n  style,\n  source,\n  variant = 'image',\n  theme: themeOverrides,\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const getStyles = () => {\n    if (variant === 'video') {\n      if (!theme.isV3) {\n        return [style, styles.video];\n      }\n\n      return [style, styles.videoV3];\n    }\n\n    return [style, styles.image];\n  };\n\n  return (\n    <Image\n      style={getStyles()}\n      source={source}\n      accessibilityIgnoresInvertColors\n      testID=\"list-image\"\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 56,\n    height: 56,\n  },\n  video: {\n    width: 100,\n    height: 64,\n    marginLeft: 0,\n  },\n  videoV3: {\n    width: 114,\n    height: 64,\n    marginLeft: 0,\n  },\n});\n\nListImage.displayName = 'List.Image';\n\nexport default ListImage;\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,UAAA,uDAAAC,KAAA,2CAS9B,OAASC,gBAAgB,KAAQ,oBAAoB,CA+BrD,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAKL,IALM,CACjBC,KAAK,CACLC,MAAM,CACNC,OAAO,CAAG,OAAO,CACjBC,KAAK,CAAEC,cACF,CAAC,CAAAL,IAAA,CACN,KAAM,CAAAI,KAAK,CAAGN,gBAAgB,CAACO,cAAc,CAAC,CAC9C,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,GAAIH,OAAO,GAAK,OAAO,CAAE,CACvB,GAAI,CAACC,KAAK,CAACG,IAAI,CAAE,CACf,MAAO,CAACN,KAAK,CAAEO,MAAM,CAACC,KAAK,CAAC,CAC9B,CAEA,MAAO,CAACR,KAAK,CAAEO,MAAM,CAACE,OAAO,CAAC,CAChC,CAEA,MAAO,CAACT,KAAK,CAAEO,MAAM,CAACG,KAAK,CAAC,CAC9B,CAAC,CAED,MACE,CAAAhB,KAAA,CAAAiB,aAAA,CAACf,KAAK,EACJI,KAAK,CAAEK,SAAS,CAAC,CAAE,CACnBJ,MAAM,CAAEA,MAAO,CACfW,gCAAgC,MAChCC,MAAM,CAAC,YAAY,CACpB,CAAC,CAEN,CAAC,CAED,KAAM,CAAAN,MAAM,CAAGZ,UAAU,CAACmB,MAAM,CAAC,CAC/BJ,KAAK,CAAE,CACLK,KAAK,CAAE,EAAE,CACTC,MAAM,CAAE,EACV,CAAC,CACDR,KAAK,CAAE,CACLO,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE,EAAE,CACVC,UAAU,CAAE,CACd,CAAC,CACDR,OAAO,CAAE,CACPM,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE,EAAE,CACVC,UAAU,CAAE,CACd,CACF,CAAC,CAAC,CAEFnB,SAAS,CAACoB,WAAW,CAAG,YAAY,CAEpC,cAAe,CAAApB,SAAS","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}