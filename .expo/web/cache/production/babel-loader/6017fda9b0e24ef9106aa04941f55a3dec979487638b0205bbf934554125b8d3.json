{"ast":null,"code":"import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import AnimatedText from'../../Typography/AnimatedText';const LabelBackground=_ref=>{let{labeled,labelLayoutWidth,labelLayoutHeight,placeholderStyle,baseLabelTranslateX,topPosition,backgroundColor,roundness,labelStyle,maxFontSizeMultiplier,testID}=_ref;const opacity=labeled.interpolate({inputRange:[0,0.6],outputRange:[1,0]});const labelTranslationX={translateX:labeled.interpolate({inputRange:[0,1],outputRange:[-baseLabelTranslateX,0]})};const labelTextScaleY={scaleY:labeled.interpolate({inputRange:[0,1],outputRange:[0.2,1]})};const labelTextTransform=[...labelStyle.transform,labelTextScaleY];const isRounded=roundness>6;const roundedEdgeCover=isRounded?React.createElement(Animated.View,{key:\"labelBackground-view\",pointerEvents:\"none\",style:[StyleSheet.absoluteFill,styles.view,{backgroundColor,maxHeight:Math.max(roundness/3,2),bottom:Math.max(roundness,2),transform:[labelTranslationX],opacity}]}):null;return[roundedEdgeCover,React.createElement(AnimatedText,{key:\"labelBackground-text\",testID:`${testID}-label-background`,style:[placeholderStyle,labelStyle,styles.outlinedLabel,{top:topPosition+1,width:labelLayoutWidth-placeholderStyle.paddingHorizontal,height:labelLayoutHeight,backgroundColor,opacity,transform:labelTextTransform}],numberOfLines:1,maxFontSizeMultiplier:maxFontSizeMultiplier})];};export default LabelBackground;const styles=StyleSheet.create({view:{position:'absolute',top:6,left:10,width:12},outlinedLabel:{position:'absolute',left:8,paddingHorizontal:0,color:'transparent'}});","map":{"version":3,"names":["React","Animated","StyleSheet","AnimatedText","LabelBackground","_ref","labeled","labelLayoutWidth","labelLayoutHeight","placeholderStyle","baseLabelTranslateX","topPosition","backgroundColor","roundness","labelStyle","maxFontSizeMultiplier","testID","opacity","interpolate","inputRange","outputRange","labelTranslationX","translateX","labelTextScaleY","scaleY","labelTextTransform","transform","isRounded","roundedEdgeCover","createElement","View","key","pointerEvents","style","absoluteFill","styles","view","maxHeight","Math","max","bottom","outlinedLabel","top","width","paddingHorizontal","height","numberOfLines","create","position","left","color"],"sources":["C:\\Users\\Admin\\Downloads\\ai_chatbot\\node_modules\\react-native-paper\\src\\components\\TextInput\\Label\\LabelBackground.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  labeled,\n  labelLayoutWidth,\n  labelLayoutHeight,\n  placeholderStyle,\n  baseLabelTranslateX,\n  topPosition,\n  backgroundColor,\n  roundness,\n  labelStyle,\n  maxFontSizeMultiplier,\n  testID,\n}: LabelBackgroundProps) => {\n  const opacity = labeled.interpolate({\n    inputRange: [0, 0.6],\n    outputRange: [1, 0],\n  });\n\n  const labelTranslationX = {\n    translateX: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0],\n    }),\n  };\n\n  const labelTextScaleY = {\n    scaleY: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1],\n    }),\n  };\n\n  const labelTextTransform = [...labelStyle.transform, labelTextScaleY];\n\n  const isRounded = roundness > 6;\n  const roundedEdgeCover = isRounded ? (\n    <Animated.View\n      key=\"labelBackground-view\"\n      pointerEvents=\"none\"\n      style={[\n        StyleSheet.absoluteFill,\n        styles.view,\n        {\n          backgroundColor,\n          maxHeight: Math.max(roundness / 3, 2),\n          bottom: Math.max(roundness, 2),\n          transform: [labelTranslationX],\n          opacity,\n        },\n      ]}\n    />\n  ) : null;\n\n  return [\n    roundedEdgeCover,\n    <AnimatedText\n      key=\"labelBackground-text\"\n      testID={`${testID}-label-background`}\n      style={[\n        placeholderStyle,\n        labelStyle,\n        styles.outlinedLabel,\n        {\n          top: topPosition + 1,\n          width: labelLayoutWidth - placeholderStyle.paddingHorizontal,\n          height: labelLayoutHeight,\n          backgroundColor,\n          opacity,\n          transform: labelTextTransform,\n        },\n      ]}\n      numberOfLines={1}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n    />,\n  ];\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  outlinedLabel: {\n    position: 'absolute',\n    left: 8,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}